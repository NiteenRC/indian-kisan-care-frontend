{"version":3,"sources":["webpack:///src/app/validators/category.validator.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/_model/purchaseOrder.ts","webpack:///src/app/ui_modules/table/sales-table.component.ts","webpack:///src/app/ui_modules/table/sales-table.component.html","webpack:///src/app/menu/navigation-bar/navigation-bar.component.ts","webpack:///src/app/menu/navigation-bar/navigation-bar.component.html","webpack:///src/app/_services/token-storage.service.js","webpack:///src/app/products/create-product/create-product.component.ts","webpack:///src/app/products/create-product/create-product.component.html","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/purchase-order/purchase-order.component.ts","webpack:///src/app/purchase-order/purchase-order.component.html","webpack:///src/app/balance-sheet/balance-sheet.component.ts","webpack:///src/app/balance-sheet/balance-sheet.component.html","webpack:///src/app/_services/supplier.service.ts","webpack:///src/app/_model/sales-order.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/_services/category.service.ts","webpack:///src/app/locations/location-list/location-list.component.ts","webpack:///src/app/locations/location-list/location-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/_services/location.service.ts","webpack:///src/app/_model/customer-balance-sheet.ts","webpack:///src/app/products/product-list/product-list.component.ts","webpack:///src/app/products/product-list/product-list.component.html","webpack:///src/app/create-product/create-product.component.ts","webpack:///src/app/create-product/create-product.component.html","webpack:///src/app/_services/token-storage.service.ts","webpack:///src/app/reports/sales-report/sales-report.component.ts","webpack:///src/app/reports/sales-report/sales-report.component.html","webpack:///src/app/menu/action-bar-item/action-bar-item.component.ts","webpack:///src/app/menu/action-bar-item/action-bar-item.component.html","webpack:///src/app/suppliers/create-supplier/create-supplier.component.ts","webpack:///src/app/suppliers/create-supplier/create-supplier.component.html","webpack:///src/app/_model/company.ts","webpack:///src/app/ui_modules/table/table.component.ts","webpack:///src/app/ui_modules/table/table.component.html","webpack:///src/app/_services/purchase-order.service.ts","webpack:///src/app/companies/company-list/company-list.component.ts","webpack:///src/app/companies/company-list/company-list.component.html","webpack:///src/app/_services/sales-order.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/menu/mobile-menu/mobile-menu.component.ts","webpack:///src/app/menu/mobile-menu/mobile-menu.component.html","webpack:///src/app/_services/customer.service.ts","webpack:///src/app/_model/product.ts","webpack:///src/app/pages/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.html","webpack:///src/app/categories/create-category/create-category.component.ts","webpack:///src/app/categories/create-category/create-category.component.html","webpack:///src/app/_model/customer.ts","webpack:///src/app/reports/reports.component.ts","webpack:///src/app/reports/reports.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/categories/category-list/category-list.component.ts","webpack:///src/app/categories/category-list/category-list.component.html","webpack:///src/app/sales-order/sales-order.component.ts","webpack:///src/app/sales-order/sales-order.component.html","webpack:///src/app/_model/category.ts","webpack:///src/app/_model/http-client-helper.ts","webpack:///src/app/pages/notfound/notfound.component.ts","webpack:///src/app/pages/notfound/notfound.component.html","webpack:///src/app/locations/create-location/create-location.component.ts","webpack:///src/app/locations/create-location/create-location.component.html","webpack:///src/app/_model/supplier.ts","webpack:///src/app/pages/dashboard-categories/dashboard-categories.component.ts","webpack:///src/app/pages/dashboard-categories/dashboard-categories.component.html","webpack:///src/app/_services/company.service.ts","webpack:///src/app/companies/create-company/create-company.component.ts","webpack:///src/app/companies/create-company/create-company.component.html","webpack:///src/app/menu/action-bar/action-bar.component.ts","webpack:///src/app/menu/action-bar/action-bar.component.html","webpack:///src/app/utils/numToWords.js","webpack:///src/app/customers/customers-list/customers-list.component.ts","webpack:///src/app/customers/customers-list/customers-list.component.html","webpack:///src/app/suppliers/supplier-list/supplier-list.component.ts","webpack:///src/app/suppliers/supplier-list/supplier-list.component.html","webpack:///src/app/_model/supplier-balance-sheet.ts","webpack:///src/app/reports/purchase-report/purchase-report.component.ts","webpack:///src/app/reports/purchase-report/purchase-report.component.html","webpack:///src/app/_services/product.service.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/material.module.ts","webpack:///src/app/customers/create-customer/create-customer.component.ts","webpack:///src/app/customers/create-customer/create-customer.component.html","webpack:///src/app/_model/location.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["autocompleteStringValidator","validOptions","control","option","find","categoryName","value","RegisterComponent","authService","form","isSuccessful","isSignUpFailed","errorMessage","register","subscribe","data","console","log","err","error","message","selector","templateUrl","styleUrls","PurchaseOrder","SalesTableComponent","tokenStorageService","totalPrice","amountInWords","user","JSON","stringify","window","salesOrder","invoiceData","sessionStorage","getItem","parse","setItem","response","document","title","_calculateTotals","getUser","print","salesOrderDetail","forEach","amount","price","qtyOrdered","taxAmount","product","gst","Math","round","printPDF","NavigationBarComponent","auth","router","logout","navigateByUrl","TOKEN_KEY","USER_KEY","TokenStorageService","clear","token","removeItem","ɵfac","TokenStorageService_Factory","t","ɵprov","factory","providedIn","type","args","CreateProductComponent","location","productService","categoryService","dialogRef","myControl","options","listOfCategories","productForm","required","productName","pattern","min","hsnNo","locationForm","cityName","productUpdateData","controls","setValue","category","close","fetchData","id","updateProduct","addProduct","selectedCategoryName","_findCategory","undefined","alert","createProduct","res","successMsg","closeModal","errorMsg","getCategoryList","get","setValidators","_valueChangesListner","filterValue","toLowerCase","supplierList","filter","indexOf","filteredOptions","valueChanges","pipe","_filter","onSubmit","AUTH_API","baseURL","httpOptions","headers","AuthService","http","credentials","post","username","password","email","localStorage","PurchaseOrderComponent","_fb","supplierService","purchaseOrderService","displayedColumns","previousBalance","totalAmount","suppliers","products","_createForm","purchaserOrderForm","index","purchaseOrderDetailArr","removeAt","purchaseOrderDetailData","selectedProduct","_findProduct","_addProduct","selectedSupplier","supplier","_findSupplier","_supplierBalanceData","getSupplierList","getProductsList","amountPaid","getCurrentBalance","purchaseOrder","supplierName","currentBalance","purchaseOrderDetail","vehicleNo","dueDate","status","createPurchaseOrder","_printPdf","refreshAfterSave","reload","supplierID","getPurchaseOrderBalaceBySupplier","url","origin","myWindow","open","group","max","newRow","_initRow","push","filteredSuppliers","_filterSupplier","filteredProducts","_filterProduct","productList","Number","motorVehicleNo","Date","array","save","BalanceSheetComponent","salesOrderService","customerBalanceSheet","customer","SupplierBalanceSheet","reloadData","customerBalanceSheets","getAllCustomerSalesOrderBalanceSheet","supplierBalanceSheets","getAllSupplierPurchaseOrderBalanceSheet","SupplierService","baseUrl","put","responseType","SalesOrder","HomeComponent","customerService","productsCount","length","getCustomerList","customersCount","suppliersCount","getPurchaseOrderList","purchaseOrdersCount","getSalesOrderList","salesOrdersCount","getAllCustomerSalesOrderBalance","totalCustomerBalance","getAllSupplierPurchaseOrderBalace","totalSupplierBalance","CategoryService","LocationListComponent","dialog","locationService","getLocationList","event","target","dataSource","trim","width","afterClosed","result","updateLocationModal","paginator","deleteLocation","applyFilter","openDialog","environment","production","LocationService","Location","CustomerBalanceSheet","ProductListComponent","companyService","getProductList","productId","deleteProduct","submitted","categories","gotoList","navigate","SalesReportComponent","productColumns","ActionBarItemComponent","shadow","CreateSupplierComponent","supplierUpdateData","supplierForm","gstIn","companyName","phoneNumber","minLength","maxLength","getCompanyList","getlocationList","saveSupplier","company","createSupplier","citiesList","companies","Company","TableComponent","PurchaseOrderService","invoice","CompanyListComponent","updateComapny","deleteCompany","SalesOrderService","customerID","AppComponent","isLoggedIn","showAdminBoard","showModeratorBoard","MobileMenuComponent","CustomerService","Product","DashboardComponent","isVisible","urlPath","getCurrentPage","path","split","e","CreateCategoryComponent","categoryUpdateData","categoryForm","categoryDesc","updateCategory","saveCategory","createCategory","Customer","ReportsComponent","AppModule","declarations","imports","providers","bootstrap","CategoryListComponent","deleteCategory","SalesOrderComponent","customers","salesOrderForm","salesOrderDetailArr","salesOrderDetailData","selectedCustomer","_findCustomer","_customerBalanceData","isStockAvail","qty","customerName","createSalesOrder","getSalesOrderBalaceByCustomer","customerList","filteredCustomers","_filterCustomer","Category","HttpClientHelper","NotfoundComponent","CreateLocationComponent","locationUpdateData","updateLocation","saveLocation","createLocation","Supplier","DashboardCategoriesComponent","CompanyService","CreateCompanyComponent","companyUpdateData","companyForm","updateCompany","saveCompany","createCompany","ActionBarComponent","_transformer","node","level","expandable","children","name","treeControl","treeFlattener","dataSource_Order","dataSourceReports","hasChild","_","expanded","TREE_DATA","Order_DATA","REPORTS","item","_redirectToPage","route","changeDetection","OnPush","a","b","numberInWords","num","toString","n","substr","match","str","CustomersListComponent","updateCustomer","deleteCustomer","SupplierListComponent","deleteSupplier","updateSupplier","PurchaseReportComponent","ProductService","AuthGuard","state","routes","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","useHash","exports","LoginComponent","tokenStorage","roles","getToken","login","saveToken","accessToken","saveUser","DemoMaterialModule","CreateCustomerComponent","customerUpdateData","customerForm","saveCustomer","createCustomer","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Category } from './../_model/category';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport function autocompleteStringValidator(validOptions: Array<Category>): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const option = validOptions.find(option => option?.categoryName === control.value);\n    \n    if (option) {\n      return null  /* valid option selected */\n    }\n    return { 'invalidAutocompleteString': { value: control.value } }\n  }\n}","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../_services/auth.service';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    form: any = {};\n    isSuccessful = false;\n    isSignUpFailed = false;\n    errorMessage = '';\n\n    constructor(private authService: AuthService) {\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit() {\n        this.authService.register(this.form).subscribe(\n            data => {\n                console.log(data);\n                this.isSuccessful = true;\n                this.isSignUpFailed = false;\n            },\n            err => {\n                this.errorMessage = err.error.message;\n                this.isSignUpFailed = true;\n            }\n        );\n    }\n}\n","<div class=\"col-md-12\">\n    <div class=\"card card-container\">\n        <img\n                class=\"profile-img-card\"\n                id=\"profile-img\"\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        />\n        <form\n                #f=\"ngForm\"\n                (ngSubmit)=\"f.form.valid && onSubmit()\"\n                *ngIf=\"!isSuccessful\"\n                name=\"form\"\n                novalidate\n        >\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input\n                        #username=\"ngModel\"\n                        [(ngModel)]=\"form.username\"\n                        class=\"form-control\"\n                        maxlength=\"20\"\n                        minlength=\"3\"\n                        name=\"username\"\n                        required\n                        type=\"text\"\n                />\n                <div *ngIf=\"f.submitted && username.invalid\" class=\"alert-danger\">\n                    <div *ngIf=\"username.errors.required\">Username is required</div>\n                    <div *ngIf=\"username.errors.minlength\">\n                        Username must be at least 3 characters\n                    </div>\n                    <div *ngIf=\"username.errors.maxlength\">\n                        Username must be at most 20 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input\n                        #email=\"ngModel\"\n                        [(ngModel)]=\"form.email\"\n                        class=\"form-control\"\n                        email\n                        name=\"email\"\n                        required\n                        type=\"email\"\n                />\n                <div *ngIf=\"f.submitted && email.invalid\" class=\"alert-danger\">\n                    <div *ngIf=\"email.errors.required\">Email is required</div>\n                    <div *ngIf=\"email.errors.email\">\n                        Email must be a valid email address\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input\n                        #password=\"ngModel\"\n                        [(ngModel)]=\"form.password\"\n                        class=\"form-control\"\n                        minlength=\"6\"\n                        name=\"password\"\n                        required\n                        type=\"password\"\n                />\n                <div *ngIf=\"f.submitted && password.invalid\" class=\"alert-danger\">\n                    <div *ngIf=\"password.errors.required\">Password is required</div>\n                    <div *ngIf=\"password.errors.minlength\">\n                        Password must be at least 6 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary btn-block\">Sign Up</button>\n            </div>\n\n            <div *ngIf=\"f.submitted && isSignUpFailed\" class=\"alert alert-warning\">\n                Signup failed!<br/>{{ errorMessage }}\n            </div>\n        </form>\n\n        <div *ngIf=\"isSuccessful\" class=\"alert alert-success\">\n            Your registration is successful!\n        </div>\n    </div>\n</div>\n","import {PurchaseOrderDetail} from './purchaseOrderDetail';\nimport {Supplier} from './supplier';\n\nexport class PurchaseOrder {\n    status: string;\n    supplier: Supplier;\n    totalQty: number;\n    totalPrice: number;\n    amountPaid: number;\n    currentBalance: number;\n    previousBalance: number;\n    purchaseOrderDetail: Array<PurchaseOrderDetail>;\n    vehicleNo: string;\n    dueDate: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from 'src/app/_services/token-storage.service.js';\nimport { numberInWords } from '../../utils/numToWords.js';\n@Component({\n  selector: 'app-table',\n  templateUrl: './sales-table.component.html',\n  styleUrls: ['./sales-table.component.css']\n})\nexport class SalesTableComponent implements OnInit {\n  response: any;\n  totalPrice: number = 0;\n  amountInWords: string = '';\n  user: any = null;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    console.log('this.response', JSON.stringify((window['response'])));\n    let salesOrder = window['response'];\n    if (!salesOrder) {\n      const invoiceData = sessionStorage.getItem('invoiceData');\n      if (invoiceData) {\n        salesOrder = JSON.parse(invoiceData);\n      }\n    } else {\n      sessionStorage.setItem('invoiceData', JSON.stringify(salesOrder));\n    }\n\n    this.response = salesOrder;\n    document.title = 'Tax Invoice';\n    this._calculateTotals();\n    this.user = this.tokenStorageService.getUser();\n  }\n\n  printPDF() {\n    window.print();\n  }\n\n  private _calculateTotals() {\n    let totalPrice = 0;\n    console.log('response?.salesOrderDetail', this.response?.salesOrderDetail);\n    this.response?.salesOrderDetail?.forEach((salesOrder) => {\n      const amount = salesOrder?.price * salesOrder?.qtyOrdered;\n      const taxAmount = amount * salesOrder?.product?.gst / 100;\n      totalPrice += amount + taxAmount;\n    });\n\n    this.totalPrice = Math.round(totalPrice);\n\n    this.amountInWords = numberInWords(this.totalPrice);\n  }\n}\n","<div class=\"page-content container\">\n    <div class=\"page-header text-blue-d2\">\n        <div class=\"container px-0\">\n            <div class=\"row pt-4\">\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\n                    <div class=\"d-flex\">\n                        <img src=\"/assets/images/logo.png\" alt=\"image\" class=\"logo\">\n                        <div style=\"text-align: center; width: 55%\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">\n                                    <h2> {{user?.brandName}} </h2>\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle\">GST: {{user?.gstNo}} | PAN:\n                                    {{user?.panNo}}\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle\">P: {{user?.phoneNumber}} | E:\n                                    {{user?.email}}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"row brc-default-l1 mx-n1 mb-4\" />\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Customer Name:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.customer?.customerName}}\n                                </span>\n                            </div>\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    GSTIN/UIN:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.customer?.gstIn}}\n                                </span>\n                            </div>\n\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Mobile Number:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.customer?.phoneNumber}}\n                                </span>\n                            </div>\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Address:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.customer?.location?.cityName}}\n                                </span>\n                            </div>\n                        </div>\n                        <!-- /.col -->\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\n                            <hr class=\"d-sm-none\" />\n                            <div class=\"text-grey-m2\">\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Date:</span>\n                                    {{(response?.createdDate | date: 'dd/MM/yyyy hh:mm:ss')}}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Due Date:</span>\n                                    {{response?.dueDate | date: 'dd/MM/yyyy hh:mm:ss'}}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Status:</span>\n                                    <span class=\"text-600 text-90\">\n                                        {{response?.status}}\n                                    </span>\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Motor Vehicle no:</span>\n                                    <span class=\"text-600 text-90\">\n                                        {{response?.vehicleNo}}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <!-- ----------------------------------------- -->\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">SI.<br>NO</th>\n                                <th scope=\"col\">Item & Description</th>\n                                <th scope=\"col\">HSN/SAC</th>\n                                <th scope=\"col\">Rate</th>\n                                <th scope=\"col\">Quantity</th>\n                                <th scope=\"col\">Amount</th>\n                                <th scope=\"col\">\n                                    <div style=\"text-align: center;\">CGST/SGST <br> IGST Rate</div>\n                                </th>\n                                <th scope=\"col\">Tax Amount</th>\n                                <th scope=\"col\">Total Amount</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let cart of response?.salesOrderDetail; index as i;\">\n                                <td>{{i + 1}}.</td>\n                                <td>{{cart?.product?.productName}}</td>\n                                <td>{{cart?.product?.hsnNo}}</td>\n                                <td>₹{{cart?.price.toLocaleString('en-IN') || 0}}</td>\n                                <td>{{cart?.qtyOrdered || 0}}</td>\n                                <td>₹{{(cart?.price * cart?.qtyOrdered).toLocaleString('en-IN') || 0}}</td>\n                                <td>{{cart?.product?.gst}}%</td>\n                                <td>₹{{(cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\n                                </td>\n                                <td>\n                                    ₹{{(cart.price * cart.qtyOrdered + cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\n                                </td>\n                            </tr>\n                            <tr>\n                                <th colspan=\"8\">Total</th>\n                                <th>₹{{totalPrice.toLocaleString('en-IN')}}</th>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <span class=\"text-sm text-grey-m2 align-middle\">Amount chargeable(in words):</span>\n                    <span class=\"text-lg text-grey-m2 align-middle font-weight-bold\">\n                        {{ amountInWords }}\n                    </span>\n                    <hr>\n                    <!-- ---------------- -->\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Payment Mode:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    Cash\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">PhonePe:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    NA\n                                </span>\n                            </div>\n                            <br>\n\n                            <div *ngIf=\"user.bankAccount != null\">\n                                <div>\n                                    <span\n                                        class=\"text-sm text-grey-m2 align-middle font-weight-bold\">{{user?.bankAccount?.bankName}}</span>\n                                </div>\n                                <div>\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">A/c no:</span>\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\n                                        {{user?.bankAccount?.accountNo}}\n                                    </span>\n                                </div>\n\n                                <div>\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Branch:</span>\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\n                                        {{user?.bankAccount?.branchName}}\n                                    </span>\n                                </div>\n                                <div>\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">IFSC code:</span>\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\n                                        {{user?.bankAccount?.ifscCode}}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- /.col -->\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\n                            <hr class=\"d-sm-none\" />\n                            <div class=\"text-grey-m2\">\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Amount Paid: </span>\n                                    ₹{{response?.amountPaid.toLocaleString('en-IN') || 0 }}\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Current Balance: </span>\n                                    ₹{{response?.currentBalance.toLocaleString('en-IN') || 0 }}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Previous Balance: </span>\n                                    <span class=\"text-600 text-90\">\n                                        ₹{{((response?.previousBalance - (response?.currentBalance)) >= 0 ? (response?.previousBalance - (response?.currentBalance)) : 0).toLocaleString('en-IN') || 0 }}\n                                    </span>\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Total Pay Balance:</span>\n                                    <span class=\"text-600 text-90\">\n                                        ₹{{response?.previousBalance.toLocaleString('en-IN') || 0 }}\n                                    </span>\n                                </div>\n\n                                <br><br><br>\n                                <div style=\"text-align: center;\">\n                                    <div class=\"my-2\">\n                                        <span class=\"text-600 text-90 font-weight-bold\">Authorised Signatory</span>\n                                    </div>\n                                    <div class=\"my-2\">\n                                        <span class=\"text-600 text-90 font-weight-bold\">({{user?.brandName}})</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- --------------------- -->\n                </div>\n            </div>\n\n            <div class=\"col-12 col-lg-10 offset-lg-1\">\n                <hr>\n                <div style=\"text-align: center;\">\n                    <span class=\"text-300 text-30\">This is a computer generated invoice</span>\n                </div>\n                <div style=\"text-align: center;\" class=\"print-btn\">\n                    <button (click)=\"printPDF()\">Print</button>\n                </div>\n            </div>\n        </div>\n    </div>","import {Router} from '@angular/router';\nimport {AuthService} from '../../_services/auth.service';\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-navigation-bar',\n    templateUrl: './navigation-bar.component.html',\n    styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent {\n    constructor(private auth: AuthService, private router: Router) {\n    }\n\n    logout() {\n        this.auth.logout();\n        this.router.navigateByUrl('/login');\n    }\n}\n","<nav class=\"navbar navbar-light navbar-expand-sm bg-white shadow-sm\">\n    <div class=\"container-fluid\">\n        <span class=\"navbar-brand\">IKC</span>\n        <div class=\"navbar-nav\">\n            <span (click)=\"logout()\" class=\"nav-item nav-link\" style=\"cursor: pointer;\">Logout</span>\n        </div>\n    </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nexport class TokenStorageService {\n    constructor() {\n    }\n    signOut() {\n        window.sessionStorage.clear();\n    }\n    saveToken(token) {\n        window.sessionStorage.removeItem(TOKEN_KEY);\n        window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n    getToken() {\n        return sessionStorage.getItem(TOKEN_KEY);\n    }\n    saveUser(user) {\n        window.sessionStorage.removeItem(USER_KEY);\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n    getUser() {\n        return JSON.parse(sessionStorage.getItem(USER_KEY));\n    }\n}\nTokenStorageService.ɵfac = function TokenStorageService_Factory(t) { return new (t || TokenStorageService)(); };\nTokenStorageService.ɵprov = i0.ɵɵdefineInjectable({ token: TokenStorageService, factory: TokenStorageService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TokenStorageService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n//# sourceMappingURL=token-storage.service.js.map","import { Category } from './../../_model/category';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { autocompleteStringValidator } from 'src/app/validators/category.validator';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { LocationService } from 'src/app/_services/location.service';\nimport { ProductService } from 'src/app/_services/product.service';\n\n@Component({\n    selector: 'app-create-product',\n    templateUrl: './create-product.component.html',\n    styleUrls: ['./create-product.component.css']\n})\nexport class CreateProductComponent implements OnInit {\n    myControl = new FormControl();\n    options: Category[] = [];\n    filteredOptions: Observable<Category[]>;\n    listOfCategories = [];\n    productForm: FormGroup;\n    locationForm: FormGroup;\n    productUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n    citiesList: any;\n    companies: any;\n\n    constructor(private location: LocationService,\n        private productService: ProductService,\n        private categoryService: CategoryService,\n        public dialogRef: MatDialogRef<CreateProductComponent>,\n        @Inject(MAT_DIALOG_DATA) private data) {\n        this.productForm = new FormGroup({\n            categoryName: new FormControl(null, [Validators.required]),\n            productName: new FormControl(null, [Validators.required]),\n            //price: new FormControl(null, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.min(0)]),\n            gst: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$'), Validators.min(0)]),\n            hsnNo: new FormControl(null, [Validators.required]),\n            //qty: new FormControl(null, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.min(0)]),\n        });\n\n        this.locationForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n        });\n\n        if (data != null) {\n            this.productUpdateData = data?.data;\n            this.productForm.controls['categoryName'].setValue(this.productUpdateData.category.categoryName);\n            this.productForm.controls['productName'].setValue(this.productUpdateData.productName);\n            //this.productForm.controls['price'].setValue(this.productUpdateData.price);\n            this.productForm.controls['gst'].setValue(this.productUpdateData.gst);\n            this.productForm.controls['hsnNo'].setValue(this.productUpdateData.hsnNo);\n            //this.productForm.controls['qty'].setValue(this.productUpdateData.qty);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n        this.fetchData();\n    }\n\n    onSubmit() {\n        if (this.productUpdateData?.id != null) {\n            this.updateProduct();\n        } else {\n            this.addProduct();\n        }\n    }\n\n    addProduct() {\n        const selectedCategoryName = this.productForm.controls.categoryName.value;\n        const category = this._findCategory(selectedCategoryName);\n\n        if (category === undefined) {\n            alert('Please select valid Category');\n            return;\n        }\n\n        let data = {\n            productName: this.productForm.controls.productName.value,\n            //price: this.productForm.controls.price.value,\n            gst: this.productForm.controls.gst.value,\n            hsnNo: this.productForm.controls.hsnNo.value,\n            //qty: this.productForm.controls.qty.value,\n            category\n        };\n        this.productService.createProduct(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Product Successfully Updated..!';\n                // this.getCategoryList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n\n    }\n\n    updateProduct() {\n        const selectedCategoryName = this.productForm.controls.categoryName.value;\n        const category = this._findCategory(selectedCategoryName);\n        let data = {\n            id: this.productUpdateData.id,\n            productName: this.productForm.controls.productName.value,\n            //price: this.productForm.controls.price.value,\n            gst: this.productForm.controls.gst.value,\n            hsnNo: this.productForm.controls.hsnNo.value,\n            //qty: this.productForm.controls.qty.value,\n            category,\n        };\n        this.productService.updateProduct(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Product Successfully Created..!';\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n\n    }\n\n    getCategoryList() {\n        this.categoryService.getCategoryList().subscribe(data => {\n            this.options = data;\n            this.productForm.get('categoryName').setValidators([autocompleteStringValidator(data), Validators.required]);\n        });\n    }\n\n    fetchData() {\n        this.categoryService.getCategoryList().subscribe(data => {\n            this.listOfCategories = data;\n            this._valueChangesListner();\n        });\n    }\n\n    private _filter(value: string): Category[] {\n        if (!value) {\n            return this.listOfCategories;\n        }\n        const filterValue = value.toLowerCase();\n        const supplierList = this.listOfCategories.filter(option => option.categoryName.toLowerCase().indexOf(filterValue) === 0)\n        return supplierList;\n    }\n\n    private _findCategory(categoryName: string) {\n        return this.listOfCategories.find(option => option?.categoryName === categoryName);\n    }\n\n    private _valueChangesListner() {\n        this.filteredOptions = this.productForm.controls['categoryName'].valueChanges.pipe(\n            startWith(''),\n            map(value => this._filter(value))\n        );\n    }\n}\n","<div class=\"product-conatiner\">\n    <div class=\"title-header\" *ngIf=\"productUpdateData?.id==null\">\n        <h4 class=\"title\">Add Product</h4>\n    </div>\n    <div class=\"title-header\" *ngIf=\"productUpdateData?.id!=null\">\n        <h4 class=\"title\">Update Product</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"productForm\">\n        <div class=\"addproduct-container\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"categoryName\" [matAutocomplete]=\"supplierAuto\" aria-label=\"Number\" matInput\n                    placeholder=\"Category\" type=\"text\">\n                <mat-autocomplete #supplierAuto=\"matAutocomplete\" autoActiveFirstOption>\n                    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option?.categoryName\">\n                        {{option?.categoryName}}\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n        </div>\n        <div class=\"addproduct-container\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"productName\" matInput placeholder=\"Product Name\">\n            </mat-form-field>\n            <br>\n        </div>\n        <div class=\"addproduct-container\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"hsnNo\" matInput placeholder=\"HSN/SAC\">\n            </mat-form-field>\n            <br>\n        </div>\n        <div class=\"addproduct-container\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"gst\" matInput placeholder=\"GST%\">\n            </mat-form-field>\n            <br>\n        </div>\n        <div class=\"button-container\">\n            <button (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-danger\"\n                style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Cancel\n            </button>\n            <button (click)=\"onSubmit()\" [disabled]=\"!productForm.valid\" class=\"btn btn-primary\"\n                style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\n            </button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\nconst AUTH_API = HttpClientHelper.baseURL + '/auth/';\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    login(credentials): Observable<any> {\n        return this.http.post(AUTH_API + 'signin', {\n            username: credentials.username,\n            password: credentials.password\n        }, httpOptions);\n    }\n\n    register(user): Observable<any> {\n        return this.http.post(AUTH_API + 'signup', {\n            username: user.username,\n            email: user.email,\n            password: user.password\n        }, httpOptions);\n    }\n\n    logout() {\n        localStorage.clear();\n    }\n}\n","import { MatTableDataSource } from '@angular/material/table';\nimport { FormArray, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { Product } from './../_model/product';\nimport { Observable } from 'rxjs';\nimport { ProductService } from '../_services/product.service';\nimport { PurchaseOrder } from '../_model/purchaseOrder';\nimport { PurchaseOrderService } from '../_services/purchase-order.service';\nimport { Supplier } from '../_model/supplier';\nimport { SupplierService } from '../_services/supplier.service';\n\n@Component({\n  selector: 'app-purchase-order',\n  templateUrl: './purchase-order.component.html',\n  styleUrls: ['./purchase-order.component.css']\n})\nexport class PurchaseOrderComponent implements OnInit {\n  purchaseOrderDetailData: any;\n  displayedColumns: string[] = ['sno', 'action', 'item', 'price', 'quantity', 'amount', 'taxType', 'taxAmount', 'totalAmount'];\n  filteredSuppliers: Observable<Supplier[]>;\n  filteredProducts: Observable<Product[]>;\n\n  suppliers: Supplier[];\n  products: Product[];\n\n  previousBalance = 0;\n  totalAmount = 0;\n\n  purchaserOrderForm: FormGroup;\n\n  constructor(\n    private _fb: FormBuilder,\n    private productService: ProductService,\n    private supplierService: SupplierService,\n    private purchaseOrderService: PurchaseOrderService) {\n\n    this.suppliers = [];\n    this.products = [];\n  }\n\n  ngOnInit() {\n    this.fetchData();\n    this._createForm();\n    console.log('this.purchaserOrderForm', this.purchaserOrderForm);\n  }\n\n  removeProduct(index: number) {\n    this.purchaseOrderDetailArr.removeAt(index);\n    this.purchaseOrderDetailData = new MatTableDataSource(this.purchaseOrderDetailArr.controls);\n  }\n\n  selectedProduct(selectedProduct: string) {\n    const product = this._findProduct(selectedProduct);\n    this._addProduct(product);\n  }\n\n  selectedSupplier(selectedSupplier: string) {\n    const supplier = this._findSupplier(selectedSupplier);\n    this._supplierBalanceData(supplier?.id);\n  }\n\n  fetchData() {\n    this.supplierService.getSupplierList().subscribe(data => {\n      this.suppliers = data;\n    });\n\n    this.productService.getProductsList().subscribe(data => {\n      this.products = data;\n      this._valueChangesListner();\n    });\n  }\n\n  getCurrentBalance() {\n    return this.totalAmount - this.amountPaid.value;\n  }\n\n  getTotalBalance() {\n    return this.previousBalance + this.getCurrentBalance();\n  }\n\n  save() {\n    // console.log('this.purchaserOrderForm', this.purchaserOrderForm.value);\n    const purchaseOrder: PurchaseOrder = new PurchaseOrder();\n    const supplierName = this.purchaserOrderForm.get('supplierName').value;\n    const supplier = this._findSupplier(supplierName);\n    purchaseOrder.supplier = supplier;\n    purchaseOrder.currentBalance = this.getCurrentBalance();\n    purchaseOrder.purchaseOrderDetail = this.purchaseOrderDetailArr.value;\n    purchaseOrder.totalPrice = this.totalAmount;\n    purchaseOrder.vehicleNo = this.purchaserOrderForm.get('motorVehicleNo').value;\n    purchaseOrder.amountPaid = this.purchaserOrderForm.get('amountPaid').value;\n    purchaseOrder.dueDate = this.purchaserOrderForm.get('dueDate').value;\n\n    if (purchaseOrder.currentBalance <= 0) {\n      purchaseOrder.status = 'PAID';\n    } else if (purchaseOrder.amountPaid > 0) {\n      purchaseOrder.status = 'PARTIAL';\n    } else {\n      purchaseOrder.status = 'DUE';\n    }\n\n    this.purchaseOrderService\n      .createPurchaseOrder(purchaseOrder).subscribe(data => {\n        console.log(data);\n        this._printPdf(data);\n        this.refreshAfterSave();\n      },\n        error => console.log(error));\n  }\n\n  refreshAfterSave() {\n    window.location.reload();\n    // this.previousBalance = 0;\n    // this.purchaseOrderDetailData = [];\n    // this._createForm();\n  }\n\n  private _supplierBalanceData(supplierID: any) {\n    this.purchaseOrderService.getPurchaseOrderBalaceBySupplier(supplierID).subscribe((data: number) => {\n      this.previousBalance = data;\n    }, (error: any) => console.log(error));\n  }\n\n  private _printPdf(response) {\n    const url = `${location.origin}/#table`;\n    const myWindow = window.open(url);\n    myWindow['response'] = response;\n  }\n\n  private _filterSupplier(value: string): Supplier[] {\n    if (!value) {\n      return this.suppliers;\n    }\n    const filterValue = value.toLowerCase();\n    const supplierList = this.suppliers.filter(option => option.supplierName.toLowerCase().indexOf(filterValue) === 0)\n    return supplierList;\n  }\n\n  private _filterProduct(value: string): Product[] {\n    if (!value) {\n      return this.products;\n    }\n    const filterValue = value.toLowerCase();\n    return this.products.filter(option => option.productName.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  private _findProduct(value: string): Product {\n    return this.products.find(option => option.productName === value);\n  }\n\n  private _findSupplier(value: string): Supplier {\n    return this.suppliers.find(option => option.supplierName === value);\n  }\n\n  private _initRow(product) {\n    return this._fb.group({\n      price: [0, [Validators.required, Validators.min(1), Validators.max(100000)]],\n      qtyOrdered: [0, [Validators.required, Validators.min(1), Validators.max(10000)]],\n      product: [product]\n    });\n  }\n\n  private _addProduct(product: Product) {\n    const newRow = this._initRow(product);\n    this.purchaseOrderDetailArr.push(newRow);\n    this.purchaseOrderDetailData = new MatTableDataSource(this.purchaseOrderDetailArr.controls);\n  }\n\n  private _valueChangesListner() {\n    this.filteredSuppliers = this.purchaserOrderForm.controls['supplierName'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterSupplier(value))\n    );\n\n    this.filteredProducts = this.purchaserOrderForm.controls['productName'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterProduct(value))\n    );\n\n    this.purchaseOrderDetailArr.valueChanges.subscribe((productList) => {\n      let totalAmount = 0;\n      productList.forEach(product => {\n        const amount = Number(product.qtyOrdered) * Number(product.price);\n        const taxAmount = amount * (product.product?.gst || 0) / 100;\n        totalAmount += amount + taxAmount;\n      });\n      this.totalAmount = Math.round(totalAmount);\n    });\n  }\n\n  private _createForm() {\n    this.purchaserOrderForm = this._fb.group({\n      supplierName: [''],\n      productName: [''],\n      motorVehicleNo: [''],\n      dueDate: [new Date()],\n      purchaseOrderDetail: this._fb.array([]),\n      amountPaid: [0],\n    });\n  }\n\n  get purchaseOrderDetailArr() {\n    return this.purchaserOrderForm.get('purchaseOrderDetail') as FormArray;\n  }\n\n  get amountPaid() {\n    return this.purchaserOrderForm.get('amountPaid') as FormControl;\n  }\n\n}\n","<form [formGroup]=\"purchaserOrderForm\">\n  <div class=\"d-flex\">\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Supplier</mat-label>\n        <input type=\"text\" placeholder=\"Select Supplier\" aria-label=\"Supplier\" matInput formControlName=\"supplierName\"\n          required [matAutocomplete]=\"supplierAuto\">\n        <mat-autocomplete #supplierAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedSupplier($event.option.value)\">\n          <mat-option *ngFor=\"let supplier of filteredSuppliers | async\" [value]=\"supplier.supplierName\">\n            {{supplier.supplierName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Product</mat-label>\n        <input type=\"text\" placeholder=\"Select Product\" aria-label=\"Product\" matInput formControlName=\"productName\"\n          required [matAutocomplete]=\"productAuto\">\n        <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption (optionSelected)=\"selectedProduct($event.option.value)\">\n          <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\n            {{product.productName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Motor Vehicle no</mat-label>\n        <input type=\"text\" placeholder=\"Motor Vehicle No\" aria-label=\"Motor Vehicle no\" matInput\n          formControlName=\"motorVehicleNo\">\n      </mat-form-field>\n    </div>\n\n    <mat-form-field class=\"form-group col-2\">\n      <mat-label>Due date</mat-label>\n      <input matInput [matDatepicker]=\"picker\" formControlName=\"dueDate\" required>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n  </div>\n  <div class=\"mat-elevation-z8 purchase-order-container\">\n    <table formArrayName=\"purchaseOrderDetail\" [dataSource]=\"purchaseOrderDetailData\" mat-table>\n      <ng-container matColumnDef=\"sno\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">S. No</th>\n        <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\n        <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"action\">\n        <th *matHeaderCellDef mat-header-cell>Action</th>\n        <td *matCellDef=\"let element; let i = index;\" mat-cell>\n          <button (click)=\"removeProduct(i)\" mat-icon-button aria-label=\"Remove product\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"item\">\n        <th *matHeaderCellDef mat-header-cell>Item & Description</th>\n        <td *matCellDef=\"let element\" mat-cell>{{element.get('product').value?.productName}}</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Rate</th>\n        <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\n          <mat-form-field floatLabel=\"never\">\n            <input matInput placeholder=\"Price\" type=\"number\" formControlName=\"price\" required required class=\"text-right\">\n            <span matPrefix>₹&nbsp;</span>\n          </mat-form-field>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Quantity</th>\n        <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\n          <mat-form-field floatLabel=\"never\" class=\"text-right\">\n            <input matInput [placeholder]=\"element.get('product')?.value?.qty\" type=\"number\" formControlName=\"qtyOrdered\" required>\n          </mat-form-field>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"amount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value}}</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"taxType\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">\n          CGST/SGST <br> IGST Rate\n        </th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          {{element.get('product')?.value.gst}}%</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"taxAmount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Tax Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100}}</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"totalAmount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Total Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value + element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100}}</td>\n        <td mat-footer-cell *matFooterCellDef class=\"text-right pr-4\">{{ totalAmount | currency:'INR' }} </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n    </table>\n\n    <div class=\"total-container\">\n      <div>\n        <label for=\"name\">Amount Paid </label>\n        <input class=\"amount-edit\" type=\"number\" formControlName=\"amountPaid\" required>\n      </div>\n      <div>\n        <label for=\"name\">Current Balance </label>\n        <span class=\"amount-read-only\">{{ getCurrentBalance() | currency:'INR' }}</span>\n      </div>\n      <div>\n        <label for=\"name\">Previous Balance </label>\n        <span class=\"amount-read-only\">{{previousBalance | currency:'INR' }}</span>\n      </div>\n      <div>\n        <label for=\"name\">Total Pay Balance</label>\n        <span class=\"amount-read-only\">{{getTotalBalance() | currency:'INR'}}</span>\n      </div>\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"save()\" [disabled]=\"purchaserOrderForm.invalid\">Submit</button>\n    </div>\n  </div>\n</form>","import { PurchaseOrderService } from '../_services/purchase-order.service';\nimport { Observable } from 'rxjs';\nimport { SalesOrderService } from '../_services/sales-order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { CustomerBalanceSheet } from '../_model/customer-balance-sheet';\nimport { Customer } from '../_model/customer';\nimport { SupplierBalanceSheet } from '../_model/supplier-balance-sheet';\nimport { Supplier } from '../_model/supplier';\nimport { Location } from '../_model/location';\n\n@Component({\n  selector: 'app-balance-sheet',\n  templateUrl: './balance-sheet.component.html',\n  styleUrls: ['./balance-sheet.component.css']\n})\nexport class BalanceSheetComponent implements OnInit {\n  customerBalanceSheets: Observable<CustomerBalanceSheet>;\n  customerBalanceSheet = new CustomerBalanceSheet();\n  customer = new Customer();\n  location = new Location();\n\n  supplierBalanceSheets: Observable<SupplierBalanceSheet>;\n  SupplierBalanceSheet = new SupplierBalanceSheet();\n  supplier = new Supplier();\n\n  constructor(private salesOrderService: SalesOrderService, private purchaseOrderService: PurchaseOrderService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.customerBalanceSheets = this.salesOrderService.getAllCustomerSalesOrderBalanceSheet();\n    this.supplierBalanceSheets = this.purchaseOrderService.getAllSupplierPurchaseOrderBalanceSheet();\n  }\n\n}\n","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Customer List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Customer</th>\n          <th>City</th>\n          <th>Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customerBalanceSheet of customerBalanceSheets | async\">\n          <td>{{customerBalanceSheet.customer.customerName}}</td>\n          <td>{{customerBalanceSheet.customer.location.cityName}}</td>\n          <td>{{customerBalanceSheet.currentBalance}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n<br>\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Supplier List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Supplier</th>\n          <th>Company</th>\n          <th>Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let supplierBalanceSheet of supplierBalanceSheets | async\">\n          <td>{{supplierBalanceSheet.supplier.supplierName}}</td>\n          <td>{{supplierBalanceSheet.supplier.company.companyName}}</td>\n          <td>{{supplierBalanceSheet.currentBalance}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SupplierService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/supplier';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getSupplier(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createSupplier(supplier: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, supplier);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateSupplier(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteSupplier(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getSupplierList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {SalesOrderDetail} from './sales-order-detail';\nimport {Customer} from './customer';\n\nexport class SalesOrder {\n    status: string;\n    customer: Customer;\n    totalQty: number;\n    totalPrice: number;\n    amountPaid: number;\n    currentBalance: number;\n    previousBalance: number;\n    salesOrderDetail: Array<SalesOrderDetail>;\n    vehicleNo: string;\n    dueDate: string;\n}\n","import {SalesOrderService} from './../_services/sales-order.service';\nimport {PurchaseOrderService} from './../_services/purchase-order.service';\nimport {SupplierService} from './../_services/supplier.service';\nimport {CustomerService} from './../_services/customer.service';\nimport {ProductService} from '../_services/product.service';\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    productsCount: number;\n    customersCount: number;\n    suppliersCount: number;\n    purchaseOrdersCount: number;\n    salesOrdersCount: number;\n    totalCustomerBalance: number;\n    totalSupplierBalance: number;\n\n    constructor(private productService: ProductService, private customerService: CustomerService, private supplierService: SupplierService, private purchaseOrderService: PurchaseOrderService, private salesOrderService: SalesOrderService) {\n    }\n\n    ngOnInit(): void {\n        this.reload();\n    }\n\n    reload() {\n        this.productService.getProductsList().subscribe(data => {\n                console.log(data);\n                this.productsCount = data.length;\n            },\n            error => console.log(error));\n\n        this.customerService.getCustomerList().subscribe(data => {\n                console.log(data);\n                this.customersCount = data.length;\n            },\n            error => console.log(error));\n\n        this.supplierService.getSupplierList().subscribe(data => {\n                console.log(data);\n                this.suppliersCount = data.length;\n            },\n            error => console.log(error));\n\n        this.purchaseOrderService.getPurchaseOrderList().subscribe(data => {\n                console.log(data);\n                this.purchaseOrdersCount = data.length;\n            },\n            error => console.log(error));\n\n        this.salesOrderService.getSalesOrderList().subscribe(data => {\n                console.log(data);\n                this.salesOrdersCount = data.length;\n            },\n            error => console.log(error));\n\n        this.salesOrderService.getAllCustomerSalesOrderBalance().subscribe(data => {\n                console.log(data);\n                this.totalCustomerBalance = data;\n            },\n            error => console.log(error));\n\n        this.purchaseOrderService.getAllSupplierPurchaseOrderBalace().subscribe(data => {\n                console.log(data);\n                this.totalSupplierBalance = data;\n            },\n            error => console.log(error));\n    }\n}\n","<!-- <div class=\"form-group\">\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Purchase</p>\n    <p>{{purchaseOrdersCount}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Sell</p>\n    <p>{{salesOrdersCount}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Products</p>\n    <p>{{productsCount}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Customers</p>\n    <p>{{customersCount}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Supplier</p>\n    <p>{{suppliersCount}}</p>\n  </button>\n</div>\n\n<div class=\"form-group\">\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Customer Balance</p>\n    <p>{{totalCustomerBalance}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Supplier Balance</p>\n    <p>{{totalSupplierBalance}}</p>\n  </button>\n</div> -->\n<div class=\"app-container\">\n\n\n    <div class=\"main-container flex-fill\">\n\n\n        <div class=\"container-fluid mt-2\">\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n\n                    <div class=\"row\">\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter primary\">\n                                <i class=\"fa fa-code-forkl\"></i>\n                                <span class=\"count-numbers\">{{purchaseOrdersCount}}</span>\n                                <span class=\"count-name\">Total Purchase</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter danger\">\n                                <i class=\"fa fa-ticketa\"></i>\n                                <span class=\"count-numbers\">{{salesOrdersCount}}</span>\n                                <span class=\"count-name\">Total Sell</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter success\">\n                                <i class=\"fa fa-users\"></i>\n                                <span class=\"count-numbers\">{{suppliersCount}}</span>\n                                <span class=\"count-name\">Total Supplier</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter info\">\n                                <i class=\"fa fa-users1\"></i>\n                                <span class=\"count-numbers\">{{totalSupplierBalance}}</span>\n                                <span class=\"count-name\">Total Supplier Balance</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CategoryService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/category';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getCategory(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createCategory(category: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, category);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateCategory(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteCategory(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getCategoryList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CustomerService} from 'src/app/_services/customer.service';\nimport {LocationService} from 'src/app/_services/location.service';\nimport {CreateLocationComponent} from '../create-location/create-location.component';\n\n@Component({\n    selector: 'app-location-list',\n    templateUrl: './location-list.component.html',\n    styleUrls: ['./location-list.component.css']\n})\nexport class LocationListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    displayedColumns: string[] = ['cityName', 'id'];\n    dataSource;\n\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private locationService: LocationService) {\n    }\n\n    ngOnInit(): void {\n        this.getLocationList();\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(CreateLocationComponent, {\n            width: '550px',\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getLocationList();\n        });\n    }\n\n    updateLocationModal(updateLocationModal): void {\n        const dialogRef = this.dialog.open(CreateLocationComponent, {\n            width: '550px',\n            data: {data: updateLocationModal}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getLocationList();\n        });\n    }\n\n    getLocationList() {\n        this.locationService.getLocationList().subscribe(data => {\n            this.dataSource = data;\n            this.dataSource = new MatTableDataSource(data);\n            this.dataSource.paginator = this.paginator;\n        }, error => console.log(error));\n    }\n\n    deleteLocation(event) {\n        this.locationService.deleteLocation(event.id).subscribe(\n            response => {\n                this.getLocationList();\n            },\n            error => console.log(error));\n    }\n}\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Location\n        </button>\n    </div>\n</div>\n\n<div class=\"mat-elevation-z8\">\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n        <!-- Position customer -->\n        <ng-container matColumnDef=\"cityName\">\n            <th *matHeaderCellDef mat-header-cell>Location</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.cityName}} </td>\n            <td *matCellDef=\"let element\" hidden mat-cell> {{element.id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-header-cell> Action</th>\n            <td *matCellDef=\"let element\" mat-cell>\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                    <div>\n                        <button (click)=\"updateLocationModal(element)\" class=\"btn btn-info\"\n                                style=\"width: 80px;margin-left: 15px;\">\n                            Update\n                        </button>\n                        <br>\n                        <button (click)=\"deleteLocation(element)\" class=\"btn btn-danger\"\n                                style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                        </button>\n                        <br>\n                    </div>\n                </mat-menu>\n                <!--  -->\n            </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocationService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/location';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getLocation(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    createLocation(Location: any): Observable<any> {\n        return this.http.post(`${this.baseUrl}`, Location);\n    }\n\n    updateLocation(value: any): Observable<any> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteLocation(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getLocationList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {Customer} from './customer';\n\nexport class CustomerBalanceSheet {\n    customer: Customer;\n    currentBalance: number;\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CompanyService} from 'src/app/_services/company.service';\nimport {ProductService} from 'src/app/_services/product.service';\nimport {CreateProductComponent} from '../create-product/create-product.component';\n\n@Component({\n    selector: 'app-product-list',\n    templateUrl: './product-list.component.html',\n    styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n    displayedColumns: string[] = ['productName', 'category', 'price', 'qty', 'GST', 'HSN/SAC', 'productDesc'];\n    dataSource;\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(public dialog: MatDialog, private productService: ProductService, private companyService: CompanyService) {\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    ngOnInit(): void {\n\n        this.getProductList();\n    }\n\n    getProductList() {\n        this.productService.getProductsList().subscribe(res => {\n            this.dataSource = res;\n            this.dataSource = new MatTableDataSource(res);\n            this.dataSource.paginator = this.paginator;\n        }, error => console.log(error));\n    }\n\n    createProduct(): void {\n        const dialogRef = this.dialog.open(CreateProductComponent, {\n            width: '550px'\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getProductList();\n        });\n    }\n\n    updateProduct(updateProduct): void {\n        const dialogRef = this.dialog.open(CreateProductComponent, {\n          width: '550px',\n          data: { data: updateProduct }\n        });\n    \n        dialogRef.afterClosed().subscribe(result => {\n          console.log('The dialog was closed');\n          this.getProductList();\n        });\n      }\n\n      deleteProduct(productId) {\n        this.productService.deleteProduct(productId).subscribe(\n          response => {\n            this.getProductList();\n          },\n          error => console.log(error));\n      }\n\n}\n\n\n\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"createProduct()\" class=\"btn btn-info btn-sm\"\n                style=\"height: 35px;width: 150px;\"> Add Product\n        </button>\n    </div>\n\n</div>\n\n<div class=\"mat-elevation-z8\">\n<table [dataSource]=\"dataSource\" mat-table>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"productName\">\n        <th *matHeaderCellDef mat-header-cell> Product</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.productName}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"category\">\n        <th *matHeaderCellDef mat-header-cell> Category</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.category?.categoryName}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"qty\">\n        <th *matHeaderCellDef mat-header-cell> Qty Stock</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.qty}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"price\">\n        <th *matHeaderCellDef mat-header-cell> Rate</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.price  | number : '1.0-2'}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"HSN/SAC\">\n        <th *matHeaderCellDef mat-header-cell> HAN/SAC</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.hsnNo}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"GST\">\n        <th *matHeaderCellDef mat-header-cell> GST</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.gst}}%</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"productDesc\">\n        <th *matHeaderCellDef mat-header-cell> Action</th>\n        <td *matCellDef=\"let element\" mat-cell>\n\n            <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\n                <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                <div>\n                    <button (click)=\"updateProduct(element)\" class=\"btn btn-info\"\n                            style=\"width: 80px;margin-left: 15px;\">\n                        Update\n                    </button>\n                    <br>\n                    <button (click)=\"deleteProduct(element.id)\"\n                            class=\"btn btn-danger\"\n                            style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                    </button>\n                    <br>\n                    <button (click)=\"productDetails(element.id)\"\n                            class=\"btn btn-info\"\n                            style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Details\n                    </button>\n                </div>\n            </mat-menu>\n            <!--  -->\n\n        </td>\n    </ng-container>\n\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import { Observable } from 'rxjs';\nimport { Category } from '../_model/category';\nimport { Product } from '../_model/product';\nimport { ProductService } from '../_services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoryService } from '../_services/category.service';\n\n@Component({\n  selector: 'app-create-productt',\n  templateUrl: './create-product.component.html'\n})\n\nexport class CreateProductComponent implements OnInit {\n  categories: Observable<Category[]>;\n\n  product: Product = new Product();\n  submitted = false;\n\n  constructor(private productService: ProductService,\n              private categoryService: CategoryService,\n              private router: Router) { }\n\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.categories = this.categoryService.getCategoryList();\n  }\n\n  newProduct(): void {\n    this.submitted = false;\n    this.product = new Product();\n  }\n\n  save() {\n    this.productService\n      .createProduct(this.product).subscribe(data => {\n        console.log(data);\n        this.product = new Product();\n        this.gotoList();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log(this.product)\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/products']);\n  }\n}\n\n","<!-- <h3>Create Product</h3> -->\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Product</label>\n      <input type=\"text\" class=\"form-control\" id=\"productName\" required [(ngModel)]=\"product.productName\"\n        name=\"productName\">\n    </div> -->\n\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <select formControlName=\"website\" class=\"form-control\">\n        <option disabled>Select Website</option>\n        <option *ngFor=\"let web of websiteList\">{{web}}</option>\n      </select>\n    </div> -->\n\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <select name=\"categories\" class=\"form-control\" required [(ngModel)]= \"product.category\" >\n        <option disabled>Select Category</option>\n        <option [ngValue]=\"category\" *ngFor=\"let category of categories | async\">{{category.categoryName}}</option>\n      </select>\n    </div> -->\n\n   \n    <!-- <mat-form-field>\n      <input type=\"text\" placeholder=\"Enter Category\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let category of categories | async\" [value]=\"category.categoryName\">\n          {{category.categoryName}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field> -->\n\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Price</label>\n      <input type=\"text\" class=\"form-control\" id=\"price\" required [(ngModel)]=\"product.price\" name=\"price\">\n    </div> -->\n\n    <!-- <button type=\"submit\" class=\"btn btn-success\">Submit</button> -->\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newProduct()\">Add</button> -->\n</div>\n","import {Injectable} from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenStorageService {\n\n    constructor() {\n    }\n\n    signOut() {\n        window.sessionStorage.clear();\n    }\n\n    public saveToken(token: string) {\n        window.sessionStorage.removeItem(TOKEN_KEY);\n        window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n\n    public getToken(): string {\n        return sessionStorage.getItem(TOKEN_KEY);\n    }\n\n    public saveUser(user) {\n        window.sessionStorage.removeItem(USER_KEY);\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n\n    public getUser() {\n        return JSON.parse(sessionStorage.getItem(USER_KEY));\n    }\n}\n","import { SalesOrderService } from './../../_services/sales-order.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sales-report',\n  templateUrl: './sales-report.component.html',\n  styleUrls: ['./sales-report.component.css']\n})\nexport class SalesReportComponent implements OnInit {\n  displayedColumns: string[] = ['salesOrderID', 'customerName', 'amountPaid', 'totalPrice', 'createdDate', 'status', 'totalQty'];\n  productColumns: string[] = ['id', 'productName', 'salesPrice', 'qtyOrdered'];\n\n  dataSource = [\n    {\n      \"createdDate\": \"2021-05-12T03:14:14.902\",\n      \"createdBy\": \"anonymousUser\",\n      \"lastModifiedDate\": \"2021-05-12T03:14:14.902\",\n      \"lastModifiedBy\": \"anonymousUser\",\n      \"salesOrderID\": 20,\n      \"totalPrice\": 15297.916666666666,\n      \"amountPaid\": 0,\n      \"currentBalance\": 15297.916666666666,\n      \"previousBalance\": 0,\n      \"totalQty\": 2,\n      \"status\": null,\n      \"customer\": {\n        \"id\": 1,\n        \"customerName\": \"Kallappa\",\n        \"location\": {\n          \"id\": 1,\n          \"cityName\": \"Shinal\",\n          \"createdDate\": \"2021-05-10T17:04:03.843+0000\"\n        },\n        \"phoneNumber\": \"9878923745\",\n        \"createdDate\": \"2021-05-10T17:04:03.932+0000\"\n      },\n      \"salesOrderDetail\": [\n        {\n          \"salesOrderDetailID\": 21,\n          \"product\": {\n            \"id\": 1,\n            \"productName\": \"Urea\",\n            \"price\": 224.16666666666666,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 1,\n              \"categoryName\": \"Fertilizer\",\n              \"categoryDesc\": \"fertilizer desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.958+0000\"\n            },\n            \"productDesc\": \"urea desc\",\n            \"qty\": 110,\n            \"createdDate\": \"2021-05-10T17:04:03.998+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 224.16666666666666,\n          \"profit\": -2242\n        },\n        {\n          \"salesOrderDetailID\": 22,\n          \"product\": {\n            \"id\": 2,\n            \"productName\": \"Tanger\",\n            \"price\": 945.9002463054186,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 3,\n              \"categoryName\": \"Pesticide\",\n              \"categoryDesc\": \"pestiside desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.961+0000\"\n            },\n            \"productDesc\": \"tanger desc\",\n            \"qty\": 203,\n            \"createdDate\": \"2021-05-10T17:04:04.001+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 1275.625,\n          \"profit\": -12756\n        }\n      ]\n    },\n    {\n      \"createdDate\": \"2021-05-12T03:14:14.902\",\n      \"createdBy\": \"anonymousUser\",\n      \"lastModifiedDate\": \"2021-05-12T03:14:14.902\",\n      \"lastModifiedBy\": \"anonymousUser\",\n      \"salesOrderID\": 20,\n      \"totalPrice\": 15297.916666666666,\n      \"amountPaid\": 0,\n      \"currentBalance\": 15297.916666666666,\n      \"previousBalance\": 0,\n      \"totalQty\": 2,\n      \"status\": null,\n      \"customer\": {\n        \"id\": 1,\n        \"customerName\": \"Kallappa\",\n        \"location\": {\n          \"id\": 1,\n          \"cityName\": \"Shinal\",\n          \"createdDate\": \"2021-05-10T17:04:03.843+0000\"\n        },\n        \"phoneNumber\": \"9878923745\",\n        \"createdDate\": \"2021-05-10T17:04:03.932+0000\"\n      },\n      \"salesOrderDetail\": [\n        {\n          \"salesOrderDetailID\": 21,\n          \"product\": {\n            \"id\": 1,\n            \"productName\": \"Urea\",\n            \"price\": 224.16666666666666,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 1,\n              \"categoryName\": \"Fertilizer\",\n              \"categoryDesc\": \"fertilizer desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.958+0000\"\n            },\n            \"productDesc\": \"urea desc\",\n            \"qty\": 110,\n            \"createdDate\": \"2021-05-10T17:04:03.998+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 224.16666666666666,\n          \"profit\": -2242\n        },\n        {\n          \"salesOrderDetailID\": 22,\n          \"product\": {\n            \"id\": 2,\n            \"productName\": \"Tanger\",\n            \"price\": 945.9002463054186,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 3,\n              \"categoryName\": \"Pesticide\",\n              \"categoryDesc\": \"pestiside desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.961+0000\"\n            },\n            \"productDesc\": \"tanger desc\",\n            \"qty\": 203,\n            \"createdDate\": \"2021-05-10T17:04:04.001+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 1275.625,\n          \"profit\": -12756\n        }\n      ]\n    },\n    {\n      \"createdDate\": \"2021-05-12T03:14:14.902\",\n      \"createdBy\": \"anonymousUser\",\n      \"lastModifiedDate\": \"2021-05-12T03:14:14.902\",\n      \"lastModifiedBy\": \"anonymousUser\",\n      \"salesOrderID\": 20,\n      \"totalPrice\": 15297.916666666666,\n      \"amountPaid\": 0,\n      \"currentBalance\": 15297.916666666666,\n      \"previousBalance\": 0,\n      \"totalQty\": 2,\n      \"status\": null,\n      \"customer\": {\n        \"id\": 1,\n        \"customerName\": \"Kallappa\",\n        \"location\": {\n          \"id\": 1,\n          \"cityName\": \"Shinal\",\n          \"createdDate\": \"2021-05-10T17:04:03.843+0000\"\n        },\n        \"phoneNumber\": \"9878923745\",\n        \"createdDate\": \"2021-05-10T17:04:03.932+0000\"\n      },\n      \"salesOrderDetail\": [\n        {\n          \"salesOrderDetailID\": 21,\n          \"product\": {\n            \"id\": 1,\n            \"productName\": \"Urea\",\n            \"price\": 224.16666666666666,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 1,\n              \"categoryName\": \"Fertilizer\",\n              \"categoryDesc\": \"fertilizer desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.958+0000\"\n            },\n            \"productDesc\": \"urea desc\",\n            \"qty\": 110,\n            \"createdDate\": \"2021-05-10T17:04:03.998+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 224.16666666666666,\n          \"profit\": -2242\n        },\n        {\n          \"salesOrderDetailID\": 22,\n          \"product\": {\n            \"id\": 2,\n            \"productName\": \"Tanger\",\n            \"price\": 945.9002463054186,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 3,\n              \"categoryName\": \"Pesticide\",\n              \"categoryDesc\": \"pestiside desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.961+0000\"\n            },\n            \"productDesc\": \"tanger desc\",\n            \"qty\": 203,\n            \"createdDate\": \"2021-05-10T17:04:04.001+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 1275.625,\n          \"profit\": -12756\n        }\n      ]\n    },\n  ];\n  \n  constructor(private salesOrderService: SalesOrderService) { }\n\n  ngOnInit(): void {\n    this.getSalesOrderList();\n  }\n\n  getSalesOrderList() {\n    this.salesOrderService.getSalesOrderList().subscribe(res => {\n        // this.dataSource = res;\n    }, error => console.log(error));\n}\n\n}\n","\n<ng-template #test>\n  <table [dataSource]=\"dataSource[0]?.salesOrderDetail\" mat-table>\n    <ng-container matColumnDef=\"id\">\n      <th *matHeaderCellDef mat-header-cell>ID</th>\n      <td *matCellDef=\"let element\" mat-cell> \n        {{element.product?.id}}\n      </td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"productName\">\n      <th *matHeaderCellDef mat-header-cell>Product Name</th>\n      <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"salesPrice\">\n      <th *matHeaderCellDef mat-header-cell>Sales Price</th>\n      <td *matCellDef=\"let element\" mat-cell> {{element.salesPrice}} </td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"qtyOrdered\">\n      <th *matHeaderCellDef mat-header-cell>Order Qty</th>\n      <td *matCellDef=\"let element\" mat-cell> {{element.qtyOrdered}} </td>\n    </ng-container>\n  \n    <tr *matHeaderRowDef=\"productColumns;  sticky: true\" mat-header-row></tr>\n    <tr *matRowDef=\"let row; columns: productColumns;\" mat-row></tr>\n  </table>\n</ng-template>\n\n<table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n  <ng-container matColumnDef=\"salesOrderID\">\n    <th *matHeaderCellDef mat-header-cell>Sales Order ID</th>\n    <td *matCellDef=\"let element\" mat-cell> \n      <button type=\"button\" class=\"btn\"\n        [ngbPopover]=\"test\"\n        [placement]=\"['right', 'auto']\"\n        triggers=\"mouseenter:mouseleave\"\n      >\n        {{element.salesOrderID}}\n      </button>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"customerName\">\n    <th *matHeaderCellDef mat-header-cell>Customer</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.customer?.customerName}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"amountPaid\">\n    <th *matHeaderCellDef mat-header-cell>Amount Paid</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.amountPaid}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalPrice\">\n    <th *matHeaderCellDef mat-header-cell>Total Price</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.totalPrice}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"createdDate\">\n    <th *matHeaderCellDef mat-header-cell>Created Date</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.createdDate}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <th *matHeaderCellDef mat-header-cell>Status</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.status}} </td>\n  </ng-container>\n  \n  <ng-container matColumnDef=\"totalQty\">\n    <th *matHeaderCellDef mat-header-cell>Total Qty</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.totalQty}} </td>\n  </ng-container>\n  \n  <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\n  <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n</table>","import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'app-action-bar-item',\n    templateUrl: './action-bar-item.component.html',\n    styleUrls: ['./action-bar-item.component.css']\n})\nexport class ActionBarItemComponent {\n    @Input() shadow: boolean = false;\n}\n","<button [class.shadow-sm]=\"shadow\" class=\"action-bar-item\">\n    <div class=\"hamburger-container\">\n        <div class=\"bar1\"></div>\n        <div class=\"bar2\"></div>\n        <div class=\"bar3\"></div>\n    </div>\n    <span _ngcontent-c1=\"\" class=\"action-bar-item-text\">Menu</span>\n</button>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {MatDialogRef, MAT_DIALOG_DATA, MatDialog} from '@angular/material/dialog';\nimport {CompanyService} from 'src/app/_services/company.service';\nimport {LocationService} from 'src/app/_services/location.service';\nimport {SupplierService} from 'src/app/_services/supplier.service';\n\n@Component({\n    selector: 'app-create-supplier',\n    templateUrl: './create-supplier.component.html',\n    styleUrls: ['./create-supplier.component.css']\n})\nexport class CreateSupplierComponent implements OnInit {\n\n    supplierForm: FormGroup;\n    locationForm: FormGroup;\n    supplierUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n    citiesList: any;\n    companies: any;\n\n    constructor(private supplierService: SupplierService, private location: LocationService,\n                private companyService: CompanyService,\n                public dialogRef: MatDialogRef<CreateSupplierComponent>,\n                @Inject(MAT_DIALOG_DATA) private data) {\n        this.supplierUpdateData = data;\n\n        this.supplierForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n            supplierName: new FormControl(null, [Validators.required]),\n            gstIn: new FormControl(null, [Validators.required]),\n            companyName: new FormControl(null, [Validators.required]),\n            phoneNumber: new FormControl(null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/), Validators.minLength(10), Validators.maxLength(10)]),\n        });\n\n        this.locationForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n        });\n\n        if (data != null) {\n            this.supplierForm.controls['supplierName'].setValue(this.supplierUpdateData.data.supplierName);\n            this.supplierForm.controls['gstIn'].setValue(this.supplierUpdateData.data.gstIn);\n            this.supplierForm.controls['phoneNumber'].setValue(this.supplierUpdateData.data.phoneNumber);\n            this.supplierForm.controls['cityName'].setValue(this.supplierUpdateData.data.location.cityName);\n            this.supplierForm.controls['companyName'].setValue(this.supplierUpdateData.data.location.companyName);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n        this.getCompanyList();\n        this.getlocationList();\n    }\n\n    onSubmit() {\n        if (this.supplierUpdateData?.data.id != null) {\n            // this.updateCustomer();\n        } else {\n            this.saveSupplier();\n        }\n    }\n\n    saveSupplier() {\n        let data = {\n            supplierName: this.supplierForm.controls.supplierName.value,\n            gstIn: this.supplierForm.controls.gstIn.value,\n            location: this.supplierForm.controls.cityName.value,\n            company: this.supplierForm.controls.companyName.value,\n            phoneNumber: this.supplierForm.controls.phoneNumber.value,\n        };\n\n        this.supplierService.createSupplier(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Supplier Successfully Created..!';\n                // this.getCompanyList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n\n    }\n\n    // updateCustomer() {\n    //   let data = {\n    //     companyID: this.companyUpdateData?.data.id,\n    //     companyName: this.customerForm.controls.companyName.value,\n    //     phoneNumber: this.customerForm.controls.phoneNumber.value\n    //   }\n    //   this.customerService.updateCompany(data).subscribe(res => {\n    //     if (res != null) {\n    //       this.successMsg = \"Company Successfully Updated..!\";\n    //       this.getCompanyList();\n    //       this.closeModal();\n    //     }\n    //   }, error => {\n    //     this.errorMsg = error.error.errorMessage; \"Company Unsuccessfully Updated..\";\n    //   })\n    // }\n\n    getlocationList() {\n        this.location.getLocationList().subscribe(res => {\n            this.citiesList = res;\n        });\n    }\n\n    getCompanyList() {\n        this.companyService.getCompanyList().subscribe(res => {\n            this.companies = res;\n        });\n    }\n}\n","<div class=\"product-conatiner\">\n    <div class=\"title-header\">\n        <h4 class=\"title\">Add Supplier</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"supplierForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"Supplier Name\" formControlName=\"supplierName\">\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"GSTIN\" formControlName=\"gstIn\">\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <mat-select placeholder=\"City\" formControlName=\"cityName\">\n                    <mat-option [value]=\"location\" *ngFor=\"let location of citiesList\">{{location.cityName}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <mat-select placeholder=\"company Name\" formControlName=\"companyName\">\n                    <mat-option [value]=\"company\" *ngFor=\"let company of companies\">{{company.companyName}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"Phone Number\" formControlName=\"phoneNumber\" required>\n                <mat-error *ngIf=\"supplierForm.get('phoneNumber').hasError('required')\">\n                    Phone Number required!\n                </mat-error>\n                <mat-error *ngIf=\"supplierForm.get('phoneNumber').hasError('pattern')\">\n                    Only Numbers allowed.\n                </mat-error>\n                <mat-error *ngIf=\"supplierForm.get('phoneNumber').hasError('maxlength')\">\n                    Max lenghth is 10 Number.\n                </mat-error>\n                <mat-error *ngIf=\"supplierForm.get('phoneNumber').hasError('minlength')\">\n                    Min lenghth is 10 Number.\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"button-container\">\n            <button class=\"btn btn-danger\" style=\"width: 25%;margin-left: 5px;border-radius: 10px;\"\n                (click)=\"closeModal()\" aria-label=\"Close\">Cancel</button>\n            <button class=\"btn btn-primary\" style=\"width: 25%;margin-left: 5px;border-radius: 10px;\"\n                (click)=\"saveSupplier()\" [disabled]=\"!supplierForm.valid\">Save</button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>\n","export class Company {\n    companyID: number;\n    companyName: string;\n    phoneNumber: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from 'src/app/_services/token-storage.service.js';\nimport { numberInWords } from '../../utils/numToWords.js';\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n  response: any;\n  totalPrice: number = 0;\n  amountInWords: string = '';\n  user: any = null;\n\n  constructor(private tokenStorageService: TokenStorageService) {}\n\n  ngOnInit(): void {\n    console.log('this.response', JSON.stringify((window['response'])));\n    let purchaseOrder = window['response'];\n    if (!purchaseOrder) {\n      const invoiceData = sessionStorage.getItem('invoiceData');\n      if (invoiceData) {\n        purchaseOrder = JSON.parse(invoiceData);\n      }\n    } else {\n      sessionStorage.setItem('invoiceData', JSON.stringify(purchaseOrder));\n    }\n    \n    this.response = purchaseOrder;\n    document.title = 'Tax Invoice';\n    this._calculateTotals();\n    this.user = this.tokenStorageService.getUser();\n  }\n\n  printPDF() {\n    window.print();\n  }\n\n  private _calculateTotals() {\n    let totalPrice = 0;\n    console.log('response?.purchaseOrderDetail', this.response?.purchaseOrderDetail);\n    this.response?.purchaseOrderDetail?.forEach((purchaseOrder) => {\n      const amount = purchaseOrder?.price * purchaseOrder?.qtyOrdered;\n      const taxAmount = amount * purchaseOrder?.product?.gst/100;\n      totalPrice += amount + taxAmount;\n    });\n\n    this.totalPrice = Math.round(totalPrice);\n\n    this.amountInWords = numberInWords(this.totalPrice);\n  }\n}\n","<div class=\"page-content container\">\n    <div class=\"page-header text-blue-d2\">\n        <div class=\"container px-0\">\n            <div class=\"row pt-4\">\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\n                    <div class=\"d-flex\">\n                        <img src=\"/assets/images/logo.png\" alt=\"image\" class=\"logo\">\n                        <div style=\"text-align: center; width: 55%\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">\n                                    <h2> {{user?.brandName}} </h2>\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle\">GST: {{user?.gstNo}} | PAN:\n                                    {{user?.panNo}}\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle\">P: {{user?.phoneNumber}} | E:\n                                    {{user?.email}}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"row brc-default-l1 mx-n1 mb-4\"/>\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Supplier Name:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.supplier?.supplierName}}\n                                </span>\n                            </div>\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    GSTIN/UIN:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.supplier?.gstIn}}\n                                </span>\n                            </div>\n\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Mobile Number:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.supplier?.phoneNumber}}\n                                </span>\n                            </div>\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Address:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.supplier?.location?.cityName}}\n                                </span>\n                            </div>\n                        </div>\n                        <!-- /.col -->\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\n                            <hr class=\"d-sm-none\"/>\n                            <div class=\"text-grey-m2\">\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Date:</span>\n                                    {{(response?.createdDate | date: 'dd/MM/yyyy hh:mm:ss')}}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Due Date:</span>\n                                    {{response?.dueDate | date: 'dd/MM/yyyy hh:mm:ss'}}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Status:</span>\n                                    <span class=\"text-600 text-90\">\n                                        {{response?.status}}\n                                    </span>\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Motor Vehicle no:</span>\n                                    <span class=\"text-600 text-90\">\n                                        {{response?.vehicleNo}}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <!-- ----------------------------------------- -->\n                    <table class=\"table table-bordered\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">SI.<br>NO</th>\n                            <th scope=\"col\">Item & Description</th>\n                            <th scope=\"col\">HSN/SAC</th>\n                            <th scope=\"col\">Rate</th>\n                            <th scope=\"col\">Quantity</th>\n                            <th scope=\"col\">Amount</th>\n                            <th scope=\"col\">\n                                <div style=\"text-align: center;\">CGST/SGST <br> IGST Rate</div>\n                            </th>\n                            <th scope=\"col\">Tax Amount</th>\n                            <th scope=\"col\">Total Amount</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let cart of response?.purchaseOrderDetail; index as i;\">\n                            <td>{{i + 1}}.</td>\n                            <td>{{cart?.product?.productName}}</td>\n                            <td>{{cart?.product?.hsnNo}}</td>\n                            <td>₹{{cart?.price.toLocaleString('en-IN') || 0}}</td>\n                            <td>{{cart?.qtyOrdered || 0}}</td>\n                            <td>₹{{(cart?.price * cart?.qtyOrdered).toLocaleString('en-IN') || 0}}</td>\n                            <td>{{cart?.product?.gst}}%</td>\n                            <td>₹{{(cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}</td>\n                            <td>\n                                ₹{{(cart.price * cart.qtyOrdered + cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th colspan=\"8\">Total</th>\n                            <th>₹{{totalPrice.toLocaleString('en-IN')}}</th>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <span class=\"text-sm text-grey-m2 align-middle\">Amount chargeable(in words):</span>\n                    <span class=\"text-lg text-grey-m2 align-middle font-weight-bold\">\n                        {{ amountInWords }}\n                    </span>\n                    <hr>\n                    <!-- ---------------- -->\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Payment Mode:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    Cash\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">PhonePe:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    NA\n                                </span>\n                            </div>\n                            <br>\n                            \n                            <div *ngIf=\"user.bankAccount != null\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">{{user?.bankAccount?.bankName}}</span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">A/c no:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{user?.bankAccount?.accountNo}}\n                                </span>\n                            </div>\n\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Branch:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{user?.bankAccount?.branchName}}\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">IFSC code:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{user?.bankAccount?.ifscCode}}\n                                </span>\n                            </div>\n                        </div>\n                        </div>\n                        <!-- /.col -->\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\n                            <hr class=\"d-sm-none\"/>\n                            <div class=\"text-grey-m2\">\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Amount Paid: </span>\n                                    ₹{{response?.amountPaid.toLocaleString('en-IN') || 0 }}\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Current Balance: </span>\n                                    ₹{{response?.currentBalance.toLocaleString('en-IN') || 0 }}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Previous Balance: </span>\n                                    <span class=\"text-600 text-90\">\n                                        ₹{{((response?.previousBalance - (response?.currentBalance)) >= 0 ? (response?.previousBalance - (response?.currentBalance)) : 0).toLocaleString('en-IN') || 0 }}\n                                    </span>\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Total Pay Balance:</span>\n                                    <span class=\"text-600 text-90\">\n                                        ₹{{response?.previousBalance.toLocaleString('en-IN') || 0 }}\n                                    </span>\n                                </div>\n\n                                <br><br><br>\n                                <div style=\"text-align: center;\">\n                                    <div class=\"my-2\">\n                                        <span class=\"text-600 text-90 font-weight-bold\">Authorised Signatory</span>\n                                    </div>\n                                    <div class=\"my-2\">\n                                        <span class=\"text-600 text-90 font-weight-bold\">({{user?.brandName}})</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- --------------------- -->\n                </div>\n            </div>\n\n            <div class=\"col-12 col-lg-10 offset-lg-1\">\n                <hr>\n                <div style=\"text-align: center;\">\n                    <span class=\"text-300 text-30\">This is a computer generated invoice</span>\n                </div>\n                <div style=\"text-align: center;\" class=\"print-btn\">\n                    <button (click)=\"printPDF()\">Print</button>\n                </div>\n            </div>\n        </div>\n    </div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PurchaseOrderService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/purchaseOrder';\n\n    constructor(private http: HttpClient) {\n    }\n\n    createPurchaseOrder(invoice: any): Observable<any> {\n        return this.http.post(`${this.baseUrl}`, invoice);\n    }\n\n    getPurchaseOrderList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n\n    getPurchaseOrderBalaceBySupplier(supplierID: any): any {\n        return this.http.get(`${this.baseUrl}/supplier/${supplierID}`);\n    }\n\n    getAllSupplierPurchaseOrderBalace(): any {\n        return this.http.get(`${this.baseUrl}/supplier`);\n    }\n\n    getAllSupplierPurchaseOrderBalanceSheet(): any {\n        return this.http.get(`${this.baseUrl}/supplier/balance`);\n    }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CompanyService} from 'src/app/_services/company.service';\nimport {CustomerService} from 'src/app/_services/customer.service';\nimport {CreateCompanyComponent} from '../create-company/create-company.component';\n\n@Component({\n    selector: 'app-company-list',\n    templateUrl: './company-list.component.html',\n    styleUrls: ['./company-list.component.css']\n})\nexport class CompanyListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    displayedColumns: string[] = ['companyName', 'phoneNumber', 'id'];\n    dataSource;\n\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private companyService: CompanyService) {\n    }\n\n    ngOnInit(): void {\n        this.getCompanyList();\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(CreateCompanyComponent, {\n            width: '550px',\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getCompanyList();\n        });\n    }\n\n    updateComapny(updateComapny): void {\n        const dialogRef = this.dialog.open(CreateCompanyComponent, {\n            width: '550px',\n            data: {data: updateComapny}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getCompanyList();\n        });\n    }\n\n    getCompanyList() {\n        this.companyService.getCompanyList().subscribe(data => {\n            this.dataSource = data;\n            this.dataSource = new MatTableDataSource(data);\n            this.dataSource.paginator = this.paginator;\n        }, error => console.log(error));\n    }\n\n    deleteCompany(event) {\n        this.companyService.deleteCompany(event.id).subscribe(\n            response => {\n                this.getCompanyList();\n            },\n            error => console.log(error));\n    }\n}\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\"\n                style=\"height: 35px;width: 150px;\"> Add Company\n        </button>\n    </div>\n\n</div>\n\n<div class=\"mat-elevation-z8\">\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n\n        <!-- Position customer -->\n        <ng-container matColumnDef=\"companyName\">\n            <th *matHeaderCellDef mat-header-cell>Company</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.companyName}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-header-cell> Action</th>\n            <td *matCellDef=\"let element\" mat-cell>\n\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                    <div>\n                        <button (click)=\"updateComapny(element)\" class=\"btn btn-info\"\n                                style=\"width: 80px;margin-left: 15px;\">\n                            Update\n                        </button>\n                        <br>\n                        <button (click)=\"deleteCompany(element)\" class=\"btn btn-danger\"\n                                style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                        </button>\n                        <br>\n\n                    </div>\n                </mat-menu>\n                <!--  -->\n\n            </td>\n        </ng-container>\n\n\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SalesOrderService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/salesOrder';\n\n    constructor(private http: HttpClient) {\n    }\n\n    createSalesOrder(invoice: any): Observable<any> {\n        return this.http.post(`${this.baseUrl}`, invoice);\n    }\n\n    getSalesOrderList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n\n    getSalesOrderBalaceByCustomer(customerID: any): any {\n        return this.http.get(`${this.baseUrl}/customer/balance/${customerID}`);\n    }\n\n    getAllCustomerSalesOrderBalance(): any {\n        return this.http.get(`${this.baseUrl}/customer/`);\n    }\n\n    getAllCustomerSalesOrderBalanceSheet(): any {\n        return this.http.get(`${this.baseUrl}/customer/balance`);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'RK FERTILIZER';\n\n  private roles: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username: string;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit() {\n    // this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    // if (this.isLoggedIn) {\n    //   const user = this.tokenStorageService.getUser();\n    //   this.roles = user.roles;\n\n    //   // this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n    //   // this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n    //   this.username = user.username;\n    // }\n  }\n\n\n}\n","<div id=\"app\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-mobile-menu',\n    templateUrl: './mobile-menu.component.html',\n    styleUrls: ['./mobile-menu.component.scss']\n})\nexport class MobileMenuComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<nav class=\"navbar navbar-expand-lg bg-primary navbar-dark\">\n    <a class=\"navbar-brand\" href=\"#\">RK-FERTILIZER</a>\n    <button aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\"\n            data-target=\"#navbarSupportedContent\" data-toggle=\"collapse\" type=\"button\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard\" routerLinkActive=\"active\">\n                    DASHBOARDS </a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/products\">PRODUCTS</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/salesOrder\">SALES</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/add\">ADD PRODUCT</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/addCategory\"> ADD CATEGORY</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/supplier\"> SUPPLIER</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/location\"> LOCATION</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/company\"> COMPANY</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/customer\"> CUSTOMER</a>\n            </li>\n        </ul>\n\n    </div>\n</nav>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CustomerService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/customer';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getCustomer(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createCustomer(customer: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, customer);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateCustomer(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteCustomer(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getCustomerList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {Category} from './category';\n\nexport class Product {\n    productID: number;\n    productName: string;\n    category: Category;\n    price: number;\n    currentPrice: number;\n    qty: number;\n    active: boolean;\n    gst: number;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n    isVisible = false;\n    urlPath = [];\n\n    constructor(\n        private router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.getCurrentPage();\n    }\n\n    getCurrentPage() {\n        const path = this.router.url.split('/');\n        if (path.length === 2 && path[1] === 'dashboard') {\n            this.isVisible = true;\n        }\n        path.forEach((e) => {\n            if (e !== '') {\n                this.urlPath.push(e);\n            }\n        });\n    }\n}\n","<div class=\"app-container\">\n\n    <app-action-bar class=\"d-none d-sm-block\"></app-action-bar>\n\n    <div class=\"main-container flex-fill\">\n        <app-navigation-bar class=\"d-none d-sm-block\"></app-navigation-bar>\n        <!-- only Mobile and Tab View -->\n        <app-mobile-menu class=\"d-block d-sm-none\"></app-mobile-menu>\n        <div class=\"container-fluid mt-2\">\n            <div class=\"row\">\n                <nav aria-label=\"breadcrumb\">\n                    <!-- <ol *ngIf=\"urlPath.length < 2; else visibleCrum\" class=\"breadcrumb\">\n                        <li class=\"breadcrumb-item active\">\n                            <span>{{urlPath[0] | titlecase}}</span>\n                        </li>\n                    </ol> -->\n                    <ng-template #visibleCrum>\n                        <ol class=\"breadcrumb\">\n                            <li *ngFor=\"let item of urlPath\" class=\"breadcrumb-item\">\n                                {{urlPath.pop()}}  {{item}}\n                                <!-- <a [routerLink]=\"[item]\" *ngIf=\"urlPath.pop() != item; else activeMenu\" >{{ item | titlecase}}</a>\n                                <ng-template #activeMenu><span>{{ item | titlecase }}</span></ng-template> -->\n                            </li>\n                        </ol>\n                    </ng-template>\n\n                </nav>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n\n                    <!-- <div class=\"row\" *ngIf=\"isVisible\">\n\n                    <div class=\"col-md-3\">\n                      <div class=\"card-counter primary\">\n                        <i class=\"fa fa-code-fork\"></i>\n                        <span class=\"count-numbers\">12</span>\n                        <span class=\"count-name\">Flowz</span>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                      <div class=\"card-counter danger\">\n                        <i class=\"fa fa-ticket\"></i>\n                        <span class=\"count-numbers\">599</span>\n                        <span class=\"count-name\">Instances</span>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                      <div class=\"card-counter success\">\n                        <i class=\"fa fa-database\"></i>\n                        <span class=\"count-numbers\">6875</span>\n                        <span class=\"count-name\">Data</span>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                      <div class=\"card-counter info\">\n                        <i class=\"fa fa-users\"></i>\n                        <span class=\"count-numbers\">35</span>\n                        <span class=\"count-name\">Users</span>\n                      </div>\n                    </div>\n                  </div> -->\n                    <router-outlet></router-outlet>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { Category } from 'src/app/_model/category';\n\n@Component({\n  selector: 'app-create-category',\n  templateUrl: './create-category.component.html',\n  styleUrls: ['./create-category.component.css']\n})\nexport class CreateCategoryComponent implements OnInit {\n\n  categoryForm: FormGroup;\n  companies: Observable<Category[]>;\n  category: Category = new Category();\n  categoryUpdateData: any;\n  successMsg: any;\n  errorMsg: any;\n  constructor(private categoryService: CategoryService,\n    public dialogRef: MatDialogRef<CreateCategoryComponent>,\n\n    @Inject(MAT_DIALOG_DATA) private data) {\n    this.categoryUpdateData = data;\n\n    this.categoryForm = new FormGroup({\n      categoryName: new FormControl(null, [Validators.required]),\n      categoryDesc: new FormControl(null, [Validators.required]),\n    })\n\n    if (data != null) {\n      this.categoryForm.controls[\"categoryName\"].setValue(this.categoryUpdateData.data.categoryName);\n      this.categoryForm.controls[\"categoryDesc\"].setValue(this.categoryUpdateData.data.categoryDesc);\n    }\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    if (this.categoryUpdateData?.data.id != null) {\n      this.updateCategory();\n    } else {\n      this.saveCategory();\n    }\n  }\n\n  saveCategory() {\n    let data = {\n      id: this.categoryUpdateData?.data.id,\n      categoryName: this.categoryForm.controls.categoryName.value,\n      categoryDesc: this.categoryForm.controls.categoryDesc.value\n    }\n    this.categoryService.createCategory(data).subscribe(res => {\n      if (res != null) {\n        this.successMsg = \"Category Successfully Created..!\";\n        this.getCategoryList();\n        this.closeModal();\n      }\n    }, error => {\n      this.errorMsg = error.error.errorMessage;\n    })\n  }\n\n  updateCategory() {\n    let data = {\n      id: this.categoryUpdateData?.data.id,\n      categoryName: this.categoryForm.controls.categoryName.value,\n      categoryDesc: this.categoryForm.controls.categoryDesc.value\n    }\n    this.categoryService.updateCategory(data).subscribe(res => {\n      if (res != null) {\n        this.successMsg = \"Category Successfully Updated..!\";\n        this.getCategoryList();\n        this.closeModal();\n      }\n    }, error => {\n      this.errorMsg = error.error.errorMessage;\n    })\n  }\n\n  getCategoryList() {\n    this.categoryService.getCategoryList().subscribe(data => {\n    }, error => console.log(error));\n  }\n}\n","<div class=\"product-conatiner\">\n    <div class=\"title-header\" *ngIf=\"categoryUpdateData?.data.id==null\">\n        <h4 class=\"title\">Add Category</h4>\n    </div>\n    <div class=\"title-header\" *ngIf=\"categoryUpdateData?.data.id!=null\">\n        <h4 class=\"title\">Update Category</h4>\n    </div>\n    <hr>\n    \n    <form [formGroup]=\"categoryForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"Category Name\" formControlName=\"categoryName\" required>\n                <mat-error *ngIf=\"categoryForm.get('categoryName').hasError('required')\">\n                    Category Name required!\n                </mat-error>\n            </mat-form-field>\n        </div>\n        \n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"Category description\" formControlName=\"categoryDesc\" required>\n                <mat-error *ngIf=\"categoryForm.get('categoryDesc').hasError('required')\">\n                    Category description required!\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"button-container\">\n            <button class=\"btn btn-warning\" style=\"width: 25%;margin-left: 5px;\" (click)=\"closeModal()\"\n                aria-label=\"Close\">Cancel</button>\n            <button class=\"btn btn-primary\" style=\"width: 25%;margin-left: 5px;\" (click)=\"onSubmit()\"\n                [disabled]=\"!categoryForm.valid\">Save</button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>","import {Location} from './location';\n\nexport class Customer {\n    id: number;\n    customerName: string;\n    location: Location;\n    phoneNumber: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { BalanceSheetComponent } from './balance-sheet/balance-sheet.component';\nimport { MatTableModule} from '@angular/material/table';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MobileMenuComponent } from './menu/mobile-menu/mobile-menu.component';\nimport { TableModule} from 'primeng/table';\nimport { ActionBarComponent } from './menu/action-bar/action-bar.component';\nimport { ActionBarItemComponent } from './menu/action-bar-item/action-bar-item.component';\nimport { NavigationBarComponent } from './menu/navigation-bar/navigation-bar.component';\nimport { DashboardCategoriesComponent } from './pages/dashboard-categories/dashboard-categories.component';\nimport { DemoMaterialModule } from './material.module';\nimport { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\nimport { CreateCompanyComponent } from './companies/create-company/create-company.component';\nimport { CompanyListComponent } from './companies/company-list/company-list.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { CreateSupplierComponent } from './suppliers/create-supplier/create-supplier.component';\nimport { SupplierListComponent } from './suppliers/supplier-list/supplier-list.component';\nimport { LocationListComponent } from './locations/location-list/location-list.component';\nimport { CreateLocationComponent } from './locations/create-location/create-location.component';\nimport { CreateCategoryComponent } from './categories/create-category/create-category.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport { CreateProductComponent } from './products/create-product/create-product.component';\nimport { TableComponent } from './ui_modules/table/table.component';\nimport { SalesTableComponent } from './ui_modules/table/sales-table.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { SalesReportComponent } from './reports/sales-report/sales-report.component';\nimport { PurchaseReportComponent } from './reports/purchase-report/purchase-report.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateProductComponent,\n    ProductListComponent,\n    CreateCategoryComponent,\n    PurchaseOrderComponent,\n    CreateCustomerComponent,\n    CreateSupplierComponent,\n    CreateLocationComponent,\n    SalesOrderComponent,\n    BalanceSheetComponent,\n    ActionBarComponent,\n    ActionBarItemComponent,\n    NavigationBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    NotfoundComponent,\n    MobileMenuComponent,\n    DashboardCategoriesComponent,\n    CustomersListComponent,\n    CreateCompanyComponent,\n    CompanyListComponent,\n    CategoryListComponent,\n    CreateSupplierComponent,\n    SupplierListComponent,\n    LocationListComponent,\n    TableComponent,\n    SalesTableComponent,\n    ReportsComponent,\n    SalesReportComponent,\n    PurchaseReportComponent,\n  ],\n  imports: [\n    TableModule,\n    DemoMaterialModule,\n    MatTableModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    NgbModule,\n    NgxPaginationModule,\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { CreateCategoryComponent } from '../create-category/create-category.component';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})\n\nexport class CategoryListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns: string[] = ['categoryName', 'categoryDesc', 'id'];\n  dataSource;\n\n  constructor(private categoryService: CategoryService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.getCategoryList();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(CreateCategoryComponent, {\n      width: '550px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.getCategoryList();\n    });\n  }\n\n  updateCategory(updateCategory): void {\n    const dialogRef = this.dialog.open(CreateCategoryComponent, {\n      width: '550px',\n      data: { data: updateCategory }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.getCategoryList();\n    });\n  }\n\n  getCategoryList() {\n    this.categoryService.getCategoryList().subscribe(data => {\n      this.dataSource = data;\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n    }, error => console.log(error));\n  }\n\n  deleteCategory(event) {\n    this.categoryService.deleteCategory(event.id).subscribe(\n      response => {\n        this.getCategoryList();\n      },\n      error => console.log(error));\n  }\n}\n","<div>\n  <mat-form-field style=\"width: 300px;\">\n    <mat-label>Search</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\">\n  </mat-form-field>\n  <div class=\"pull-right\">\n    <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\">Add Category </button>\n  </div>\n\n</div>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!-- Position customer -->\n    <ng-container matColumnDef=\"categoryName\">\n      <th mat-header-cell *matHeaderCellDef>Category</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.categoryName}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"categoryDesc\">\n      <th mat-header-cell *matHeaderCellDef> Description </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.categoryDesc}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> Action </th>\n      <td mat-cell *matCellDef=\"let element\">\n\n        <button class=\"kebab-menu-btn\" mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n          <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n          <div>\n            <button (click)=\"updateCategory(element)\" class=\"btn btn-info\" style=\"width: 80px;margin-left: 15px;\">\n              Update </button>\n            <br>\n            <button (click)=\"deleteCategory(element)\" style=\"margin-top:5px;width: 80px;margin-left: 15px;\"\n              class=\"btn btn-danger\">Delete</button>\n            <br>\n          </div>\n        </mat-menu>\n        <!--  -->\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import { MatTableDataSource } from '@angular/material/table';\nimport { FormArray, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { Product } from './../_model/product';\nimport { Observable } from 'rxjs';\nimport { ProductService } from '../_services/product.service';\nimport { SalesOrder } from '../_model/sales-order';\nimport { SalesOrderService } from '../_services/sales-order.service';\nimport { Customer } from '../_model/customer';\nimport { CustomerService } from '../_services/customer.service';\n\n@Component({\n  selector: 'app-sales-order',\n  templateUrl: './sales-order.component.html',\n  styleUrls: ['./sales-order.component.css']\n})\nexport class SalesOrderComponent implements OnInit {\n  salesOrderDetailData: any;\n  displayedColumns: string[] = ['sno', 'action', 'item', 'price', 'quantity', 'amount', 'taxType', 'taxAmount', 'totalAmount'];\n  filteredCustomers: Observable<Customer[]>;\n  filteredProducts: Observable<Product[]>;\n\n  customers: Customer[];\n  products: Product[];\n\n  previousBalance = 0;\n  totalAmount = 0;\n\n  salesOrderForm: FormGroup;\n\n  constructor(\n    private _fb: FormBuilder,\n    private productService: ProductService,\n    private customerService: CustomerService,\n    private salesOrderService: SalesOrderService) {\n\n    this.customers = [];\n    this.products = [];\n  }\n\n  ngOnInit() {\n    this.fetchData();\n    this._createForm();\n    console.log('this.salesOrderForm', this.salesOrderForm);\n  }\n\n  removeProduct(index: number) {\n    this.salesOrderDetailArr.removeAt(index);\n    this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\n  }\n\n  selectedProduct(selectedProduct: string) {\n    const product = this._findProduct(selectedProduct);\n    this._addProduct(product);\n  }\n\n  selectedCustomer(selectedCustomer: string) {\n    const customer = this._findCustomer(selectedCustomer);\n    this._customerBalanceData(customer?.id);\n  }\n\n  fetchData() {\n    this.customerService.getCustomerList().subscribe(data => {\n      this.customers = data;\n    });\n\n    this.productService.getProductsList().subscribe(data => {\n      this.products = data;\n      this._valueChangesListner();\n    });\n  }\n\n  getCurrentBalance() {\n    return this.totalAmount - this.amountPaid.value;\n  }\n\n  getTotalBalance() {\n    return this.previousBalance + this.getCurrentBalance();\n  }\n\n  save() {\n    let isStockAvail = true;\n    this.salesOrderDetailArr.value.forEach(value => {\n      if (value.product.qty < value.qtyOrdered) {\n        alert('No Stock for product: ' + value.product.productName);\n        isStockAvail = false;\n      }\n\n      if (value.qtyOrdered === 0) {\n        alert('Please add Quantity to : ' + value.product.productName);\n        isStockAvail = false;\n      }\n    });\n\n    if (isStockAvail) {\n      // console.log('this.salesOrderForm', this.salesOrderForm.value);\n      const salesOrder: SalesOrder = new SalesOrder();\n      const customerName = this.salesOrderForm.get('customerName').value;\n      const customer = this._findCustomer(customerName);\n      salesOrder.customer = customer;\n      salesOrder.currentBalance = this.getCurrentBalance();\n      salesOrder.salesOrderDetail = this.salesOrderDetailArr.value;\n      salesOrder.totalPrice = this.totalAmount;\n      salesOrder.vehicleNo = this.salesOrderForm.get('motorVehicleNo').value;\n      salesOrder.amountPaid = this.salesOrderForm.get('amountPaid').value;\n      salesOrder.dueDate = this.salesOrderForm.get('dueDate').value;\n\n      if (salesOrder.currentBalance <= 0) {\n        salesOrder.status = 'PAID';\n      } else if (salesOrder.amountPaid > 0) {\n        salesOrder.status = 'PARTIAL';\n      } else {\n        salesOrder.status = 'DUE';\n      }\n\n      this.salesOrderService\n        .createSalesOrder(salesOrder).subscribe(data => {\n          console.log(data);\n          this._printPdf(data);\n          this.refreshAfterSave();\n        },\n          error => console.log(error));\n    }\n  }\n\n  refreshAfterSave() {\n    window.location.reload();\n    // this.previousBalance = 0;\n    // this.salesOrderDetailData = [];\n    // this._createForm();\n  }\n\n  private _customerBalanceData(customerID: any) {\n    this.salesOrderService.getSalesOrderBalaceByCustomer(customerID).subscribe((data: number) => {\n      this.previousBalance = data;\n    }, (error: any) => console.log(error));\n  }\n\n  private _printPdf(response) {\n    const url = `${location.origin}/#salesTable`;\n    const myWindow = window.open(url);\n    myWindow['response'] = response;\n  }\n\n  private _filterCustomer(value: string): Customer[] {\n    if (!value) {\n      return this.customers;\n    }\n    const filterValue = value.toLowerCase();\n    const customerList = this.customers.filter(option => option.customerName.toLowerCase().indexOf(filterValue) === 0)\n    return customerList;\n  }\n\n  private _filterProduct(value: string): Product[] {\n    if (!value) {\n      return this.products;\n    }\n    const filterValue = value.toLowerCase();\n    return this.products.filter(option => option.productName.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  private _findProduct(value: string): Product {\n    return this.products.find(option => option.productName === value);\n  }\n\n  private _findCustomer(value: string): Customer {\n    return this.customers.find(option => option.customerName === value);\n  }\n\n  private _initRow(product) {\n    return this._fb.group({\n      price: [0, [Validators.required, Validators.min(1), Validators.max(100000)]],\n      qtyOrdered: [0, [Validators.required, Validators.min(1), Validators.max(10000)]],\n      product: [product]\n    });\n  }\n\n  private _addProduct(product: Product) {\n    const newRow = this._initRow(product);\n    this.salesOrderDetailArr.push(newRow);\n    this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\n  }\n\n  private _valueChangesListner() {\n    this.filteredCustomers = this.salesOrderForm.controls['customerName'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterCustomer(value))\n    );\n\n    this.filteredProducts = this.salesOrderForm.controls['productName'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterProduct(value))\n    );\n\n    this.salesOrderDetailArr.valueChanges.subscribe((productList) => {\n      let totalAmount = 0;\n      productList.forEach(product => {\n        const amount = Number(product.qtyOrdered) * Number(product.price);\n        const taxAmount = amount * (product.product?.gst || 0) / 100;\n        totalAmount += amount + taxAmount;\n      });\n      this.totalAmount = Math.round(totalAmount);\n    });\n  }\n\n  private _createForm() {\n    this.salesOrderForm = this._fb.group({\n      customerName: [''],\n      productName: [''],\n      motorVehicleNo: [''],\n      dueDate: [new Date()],\n      salesOrderDetail: this._fb.array([]),\n      amountPaid: [0],\n    });\n  }\n\n  get salesOrderDetailArr() {\n    return this.salesOrderForm.get('salesOrderDetail') as FormArray;\n  }\n\n  get amountPaid() {\n    return this.salesOrderForm.get('amountPaid') as FormControl;\n  }\n}\n","<form [formGroup]=\"salesOrderForm\">\n  <div class=\"d-flex\">\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Customer</mat-label>\n        <input type=\"text\" placeholder=\"Select Customer\" aria-label=\"Customer\" matInput formControlName=\"customerName\"\n          required [matAutocomplete]=\"customerAuto\">\n        <mat-autocomplete #customerAuto=\"matAutocomplete\" autoActiveFirstOption\n          (optionSelected)=\"selectedCustomer($event.option.value)\">\n          <mat-option *ngFor=\"let customer of filteredCustomers | async\" [value]=\"customer.customerName\">\n            {{customer.customerName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Product</mat-label>\n        <input type=\"text\" placeholder=\"Select Product\" aria-label=\"Product\" matInput formControlName=\"productName\"\n          required [matAutocomplete]=\"productAuto\">\n        <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption\n          (optionSelected)=\"selectedProduct($event.option.value)\">\n          <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\n            {{product.productName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Motor Vehicle no</mat-label>\n        <input type=\"text\" placeholder=\"Motor Vehicle No\" aria-label=\"Motor Vehicle no\" matInput\n          formControlName=\"motorVehicleNo\">\n      </mat-form-field>\n    </div>\n\n    <mat-form-field class=\"form-group col-2\">\n      <mat-label>Due date</mat-label>\n      <input matInput [matDatepicker]=\"picker\" formControlName=\"dueDate\" required>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n  </div>\n  <div class=\"mat-elevation-z8 sales-order-container\">\n    <table formArrayName=\"salesOrderDetail\" [dataSource]=\"salesOrderDetailData\" mat-table>\n      <ng-container matColumnDef=\"sno\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">S. No</th>\n        <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\n        <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"action\">\n        <th *matHeaderCellDef mat-header-cell>Action</th>\n        <td *matCellDef=\"let element; let i = index;\" mat-cell>\n          <button (click)=\"removeProduct(i)\" mat-icon-button aria-label=\"Remove product\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"item\">\n        <th *matHeaderCellDef mat-header-cell>Item & Description</th>\n        <td *matCellDef=\"let element\" mat-cell>{{element.get('product').value?.productName}}</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Rate</th>\n        <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\n          <mat-form-field floatLabel=\"never\">\n            <input matInput placeholder=\"Price\" type=\"number\" formControlName=\"price\" required required\n              class=\"text-right\">\n            <span matPrefix>₹&nbsp;</span>\n          </mat-form-field>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Quantity</th>\n        <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\n          <mat-form-field floatLabel=\"never\" class=\"text-right\">\n            <input matInput [placeholder]=\"element.get('product')?.value?.qty\" type=\"number\"\n              formControlName=\"qtyOrdered\" required>\n          </mat-form-field>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"amount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value}}</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"taxType\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">\n          CGST/SGST <br> IGST Rate\n        </th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          {{element.get('product')?.value.gst}}%</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"taxAmount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Tax Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100}}\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"totalAmount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Total Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value + element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100}}\n        </td>\n        <td mat-footer-cell *matFooterCellDef class=\"text-right pr-4\">{{ totalAmount | currency:'INR' }} </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n    </table>\n\n    <div class=\"total-container\">\n      <div>\n        <label for=\"name\">Amount Paid </label>\n        <input class=\"amount-edit\" type=\"number\" formControlName=\"amountPaid\" required>\n      </div>\n      <div>\n        <label for=\"name\">Current Balance </label>\n        <span class=\"amount-read-only\">{{ getCurrentBalance() | currency:'INR' }}</span>\n      </div>\n      <div>\n        <label for=\"name\">Previous Balance </label>\n        <span class=\"amount-read-only\">{{previousBalance | currency:'INR' }}</span>\n      </div>\n      <div>\n        <label for=\"name\">Total Pay Balance</label>\n        <span class=\"amount-read-only\">{{getTotalBalance() | currency:'INR'}}</span>\n      </div>\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"save()\" [disabled]=\"salesOrderForm.invalid\">Submit</button>\n    </div>\n  </div>\n</form>","export class Category {\n    categoryID: number;\n    categoryName: string;\n    categoryDesc: string;\n}\n","export class HttpClientHelper {\n    //static baseURL: string = 'http://ec2-18-222-37-157.us-east-2.compute.amazonaws.com:8080';\n\n    //Visual studio with backend\n    static baseURL = 'http://localhost:8080';\n\n    //External tomcat server\n    //static baseURL: string = 'http://localhost:8080/indian-kisan-care-backend';\n\n    //AWS server\n    //static baseURL: string = 'http://ec2-3-133-100-17.us-east-2.compute.amazonaws.com:8080/indian-kisan-care-backend';\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-notfound',\n    templateUrl: './notfound.component.html',\n    styleUrls: ['./notfound.component.scss']\n})\nexport class NotfoundComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"error-wrapper\">\n        <div class=\"man-icon\"></div>\n        <h3 class=\"title\">404</h3>\n        <p class=\"info\">Oh! Page not found</p>\n        <button class=\"home-btn\" routerLink=\"/dashboard\" type=\"button\">HOME</button>\n    </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Observable} from 'rxjs';\nimport {Location} from 'src/app/_model/location';\nimport {LocationService} from 'src/app/_services/location.service';\n\n@Component({\n    selector: 'app-create-location',\n    templateUrl: './create-location.component.html',\n    styleUrls: ['./create-location.component.css']\n})\nexport class CreateLocationComponent implements OnInit {\n    locationForm: FormGroup;\n    locations: Observable<Location[]>;\n    location: Location = new Location();\n    locationUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n    //@ViewChild(MatPaginator) paginator: MatPaginator;\n    //displayedColumns: string[] = ['cityName', 'id'];\n    dataSource;\n\n    constructor(private locationService: LocationService,\n                public dialogRef: MatDialogRef<CreateLocationComponent>,\n                @Inject(MAT_DIALOG_DATA) private data) {\n        this.locationUpdateData = data;\n        this.locationForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required])\n        });\n        if (data != null) {\n            this.locationForm.controls['cityName'].setValue(this.locationUpdateData.data.cityName);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n    }\n\n    onSubmit(): void {\n        if (this.locationUpdateData?.data.id != null) {\n            this.updateLocation();\n        } else {\n            this.saveLocation();\n        }\n    }\n\n    saveLocation() {\n        let data = {\n            id: this.locationUpdateData?.data.id,\n            cityName: this.locationForm.controls.cityName.value\n        };\n        this.locationService.createLocation(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Location Successfully Created..!';\n                this.getLocationList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    updateLocation() {\n        let data = {\n            id: this.locationUpdateData?.data.id,\n            cityName: this.locationForm.controls.cityName.value\n        };\n        this.locationService.updateLocation(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Location Successfully Updated..!';\n                this.getLocationList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    getLocationList() {\n        this.locationService.getLocationList().subscribe(data => {\n            this.dataSource = data;\n            this.dataSource = new MatTableDataSource(data);\n        }, error => console.log(error));\n    }\n}\n","<div class=\"product-conatiner\">\n    <div *ngIf=\"locationUpdateData?.data.id==null\" class=\"title-header\">\n        <h4 class=\"title\">Add location</h4>\n    </div>\n    <div *ngIf=\"locationUpdateData?.data.id!=null\" class=\"title-header\">\n        <h4 class=\"title\">Update location</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"locationForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"cityName\" matInput placeholder=\"location Name\" required>\n                <mat-error *ngIf=\"locationForm.get('cityName').hasError('required')\">\n                    City Name required!\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"button-container\">\n            <button (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\n            </button>\n            <button (click)=\"onSubmit()\" [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\"\n                    style=\"width: 25%;margin-left: 5px;\">Save\n            </button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>\n","import {Company} from './company';\nimport {Location} from './location';\n\nexport class Supplier {\n    id: number;\n    supplierName: string;\n    company: Company;\n    location: Location;\n    phoneNumber: string;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-dashboard-categories',\n    templateUrl: './dashboard-categories.component.html',\n    styleUrls: ['./dashboard-categories.component.css']\n})\nexport class DashboardCategoriesComponent implements OnInit {\n    isVisible = false;\n    urlPath = [];\n\n    constructor(\n        private router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.getCurrentPage();\n    }\n\n    getCurrentPage() {\n        const path = this.router.url.split('/');\n        if (path.length === 2 && path[1] === 'dashboard') {\n            this.isVisible = true;\n        }\n        path.forEach((e) => {\n            if (e !== '') {\n                this.urlPath.push(e);\n            }\n        });\n    }\n}\n","<div class=\"app-container\">\n\n\n    <div class=\"main-container flex-fill\">\n\n\n        <div class=\"container-fluid mt-2\">\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n\n                    <div class=\"row\">\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter primary\">\n                                <i class=\"fa fa-code-fork\"></i>\n                                <span class=\"count-numbers\">12</span>\n                                <span class=\"count-name\">Flowz</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter danger\">\n                                <i class=\"fa fa-ticket\"></i>\n                                <span class=\"count-numbers\">599</span>\n                                <span class=\"count-name\">Instances</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter success\">\n                                <i class=\"fa fa-database\"></i>\n                                <span class=\"count-numbers\">6875</span>\n                                <span class=\"count-name\">Data</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter info\">\n                                <i class=\"fa fa-users\"></i>\n                                <span class=\"count-numbers\">35</span>\n                                <span class=\"count-name\">Users</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CompanyService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/company';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getCompany(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createCompany(company: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, company);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateCompany(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteCompany(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getCompanyList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\nimport {Company} from 'src/app/_model/company';\nimport {CompanyService} from 'src/app/_services/company.service';\n\n@Component({\n    selector: 'app-create-company',\n    templateUrl: './create-company.component.html',\n    styleUrls: ['./create-company.component.css']\n})\nexport class CreateCompanyComponent implements OnInit {\n    companyForm: FormGroup;\n    companies: Observable<Company[]>;\n    company: Company = new Company();\n    companyUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n\n    constructor(private companyService: CompanyService,\n                public dialogRef: MatDialogRef<CreateCompanyComponent>,\n                @Inject(MAT_DIALOG_DATA) private data) {\n        this.companyUpdateData = data;\n\n        this.companyForm = new FormGroup({\n            companyName: new FormControl(null, [Validators.required]),\n            phoneNumber: new FormControl(null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/), Validators.minLength(10), Validators.maxLength(10)]),\n        });\n        if (data != null) {\n            this.companyForm.controls['companyName'].setValue(this.companyUpdateData.data.companyName);\n            this.companyForm.controls['phoneNumber'].setValue(this.companyUpdateData.data.phoneNumber);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n    }\n\n    onSubmit() {\n        if (this.companyUpdateData?.data.id != null) {\n            this.updateCompany();\n        } else {\n            this.saveCompany();\n        }\n    }\n\n    saveCompany() {\n        let data = {\n            id: this.companyUpdateData?.data.id,\n            companyName: this.companyForm.controls.companyName.value,\n            phoneNumber: this.companyForm.controls.phoneNumber.value\n        };\n        this.companyService.createCompany(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Company Successfully Created..!';\n                this.getCompanyList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    updateCompany() {\n        let data = {\n            id: this.companyUpdateData?.data.id,\n            companyName: this.companyForm.controls.companyName.value,\n            phoneNumber: this.companyForm.controls.phoneNumber.value\n        };\n        this.companyService.updateCompany(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Company Successfully Updated..!';\n                this.getCompanyList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    getCompanyList() {\n        this.companyService.getCompanyList().subscribe(data => {\n        }, error => console.log(error));\n    }\n}\n","<div class=\"product-conatiner\">\n    <div *ngIf=\"companyUpdateData?.data.id==null\" class=\"title-header\">\n        <h4 class=\"title\">Add Company</h4>\n    </div>\n    <div *ngIf=\"companyUpdateData?.data.id!=null\" class=\"title-header\">\n        <h4 class=\"title\">Update Company</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"companyForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"companyName\" matInput placeholder=\"Company Name\" required>\n                <mat-error *ngIf=\"companyForm.get('companyName').hasError('required')\">\n                    First Name required!\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"phoneNumber\" matInput placeholder=\"Phone Number\" required>\n                <mat-error *ngIf=\"companyForm.get('phoneNumber').hasError('required')\">\n                    Phone Number required!\n                </mat-error>\n                <mat-error *ngIf=\"companyForm.get('phoneNumber').hasError('pattern')\">\n                    Only Numbers allowed.\n                </mat-error>\n                <mat-error *ngIf=\"companyForm.get('phoneNumber').hasError('maxlength')\">\n                    Max lenghth is 10 Number.\n                </mat-error>\n                <mat-error *ngIf=\"companyForm.get('phoneNumber').hasError('minlength')\">\n                    Min lenghth is 10 Number.\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"button-container\">\n            <button (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\n            </button>\n            <button (click)=\"onSubmit()\" [disabled]=\"!companyForm.valid\" class=\"btn btn-primary\"\n                    style=\"width: 25%;margin-left: 5px;\">Save\n            </button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\n@Component({\n  selector: 'app-action-bar',\n  templateUrl: './action-bar.component.html',\n  styleUrls: ['./action-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionBarComponent {\n  private _transformer = (node: MasterNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level,\n    };\n  }\n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n      node => node.level, node => node.expandable);\n\n  treeFlattener = new MatTreeFlattener(\n      this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  dataSource_Order=new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  dataSourceReports=new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor(private router:Router) {\n    this.dataSource.data = TREE_DATA;\n    this.dataSource_Order.data = Order_DATA;\n    this.dataSourceReports.data = REPORTS;\n\n    console.log('dataSourceReports', this.dataSourceReports);\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  expanded = true;\n\n  goTohome(){\n    this.router.navigate(['dashboard']);\n  }\n  getComponent(item){\n    if (item == \"Product\") {\n      this.router.navigate(['dashboard/products']);\n    }\n    if (item == \"Category\") {\n      this.router.navigate(['dashboard/categories-list']);\n    }\n    if (item == \"Supplier\") {\n      this.router.navigate(['dashboard/suppliers-list']);\n    }\n    if (item == \"Customer\") {\n      this.router.navigate(['dashboard/customers-list']);\n    }\n    if (item == \"Company\") {\n      this.router.navigate(['dashboard/companies-list']);\n    }\n    if (item == \"Location\") {\n      this.router.navigate(['dashboard/locations-list']);\n    }\n  }\n\n  getOrder(item){\n    if (item == \"Sales Order\") {\n      this.router.navigate(['dashboard/salesOrder']);\n    }\n    if (item == \"Purchase\") {\n      this.router.navigate(['dashboard/purchaseOrder']);\n    }\n  }\n\n  getReports(item) {\n    if (item === \"Sales Order Report\") {\n      this._redirectToPage('dashboard/reports/sales-report');\n    }\n    if (item === \"Purchase Order Report\") {\n      this._redirectToPage('dashboard/reports/purchase-report');\n    }\n  }\n\n  private _redirectToPage(route) {\n    this.router.navigate([route]);\n  }\n}\n\ninterface MasterNode {\n  name: string;\n  children?: MasterNode[];\n}\nconst Order_DATA: MasterNode[] = [\n  {\n    name: 'Order',\n    children: [\n      {\n        name: 'Sales Order',\n\n      },\n      {\n        name: 'Purchase',\n\n      }\n    ]\n  },\n];\n\nconst REPORTS: MasterNode[] = [\n  {\n    name: 'Reports',\n    children: [\n      {\n        name: 'Sales Order Report',\n      },\n      {\n        name: 'Purchase Order Report',\n      }\n    ]\n  },\n];\n\n// <a class=\"nav-link\" routerLink=\"/dashboard/salesOrder\"><span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">Sales\n// Order</span></a>\n// <a class=\"nav-link\" routerLink=\"/dashboard/purchaseOrder\"> <span *ngIf=\"expanded\"\n// class=\"d-none d-sm-inline\">Purchase\n// Order</span></a>\nconst TREE_DATA: MasterNode[] = [\n  {\n    name: 'MASTER',\n    children: [\n      {\n        name: 'Product',\n\n      },\n      {\n        name: 'Category',\n\n      }, {\n        name: 'Supplier',\n\n      },\n      {\n        name: 'Customer',\n\n      }, {\n        name: 'Company',\n\n      }\n      , {\n        name: 'Location',\n\n      }\n    ]\n  },\n];\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n","<div class=\"action-bar\" [class.action-bar-expanded]=\"expanded\">\n\n  <!-- Menu Button -->\n  <!-- <button class=\"action-bar-item shadow-sm\" (click)=\"expanded = !expanded\">\n\t\t<span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\n    <span class=\"action-bar-item-text\">Menu</span>\n\t</button> -->\n\n  <app-action-bar-item [shadow]=\"true\" (click)=\"expanded = !expanded\">\n    <span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\n    <span class=\"action-bar-item-text\">Menu</span>\n  </app-action-bar-item>\n\n  <!-- A vertical navbar -->\n  <nav class=\"navbar navbar-light\">\n\n    <!-- Links -->\n    <ul class=\"navbar-nav nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/home\" routerLinkActive=\"active\" style=\"cursor: pointer;\"> <i\n            class=\"fa fa-home \"></i> <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">DASHBOARDS</span> </a>\n      </li>\n\n      <!-- <li class=\"nav-item\" routerLinkActive=\"active\" (mouseover)=\"dispatchPlanmenuTrigger.openMenu()\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/add\" #dispatchPlanmenuTrigger=\"matMenuTrigger\"\n          [matMenuTriggerFor]=\"dispatchPlan1\">\n          <i class=\"fa fa-plus \"></i> <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">MASTER</span>\n        </a>\n        <mat-menu #dispatchPlan1=\"matMenu\" style=\"background-color: #1389fd;\">\n          <span (mouseleave)=\"dispatchPlanmenuTrigger.closeMenu()\">\n            <a class=\"nav-link\" routerLink=\"/dashboard/products\">\n              <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\"> Product </span>\n            </a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/categories-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Category\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/suppliers-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Supplier\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/customers-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Customer\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/companies-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Company\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/locations-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Location\n              </span></a>\n          </span>\n        </mat-menu>\n      </li>  -->\n\n      <mat-tree [dataSource]=\"dataSource_Order\" [treeControl]=\"treeControl\" style=\"margin-right: 10px;\">\n        <!-- This is the tree node template for leaf nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n          <!-- use a disabled button to provide padding for tree leaf -->\n          <button mat-icon-button (click)=\"getOrder(node.name)\"> {{node.name}}</button>\n        </mat-tree-node>\n        <!-- This is the tree node template for expandable nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n          <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'add'}}\n            </mat-icon>\n          </button>\n          {{node.name}}\n        </mat-tree-node>\n      </mat-tree>\n\n      <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n        <!-- This is the tree node template for leaf nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n          <!-- use a disabled button to provide padding for tree leaf -->\n          <button mat-icon-button (click)=\"getComponent(node.name)\"> {{node.name}}</button>\n        </mat-tree-node>\n        <!-- This is the tree node template for expandable nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n          <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n            </mat-icon>\n          </button>\n          {{node.name}}\n        </mat-tree-node>\n      </mat-tree>\n      <!-- \n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/salesOrder\"  routerLinkActive=\"active\"><i class=\"fa fa-suitcase \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">SALES</span></a>\n      </li> -->\n\n      <!-- <li class=\"nav-item\" routerLinkActive=\"active\" (mouseover)=\"dispatchPlanmenu1Trigger.openMenu()\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/add\" #dispatchPlanmenu1Trigger=\"matMenuTrigger\"\n          [matMenuTriggerFor]=\"dispatchPlan\">\n          <i class=\"fa fa-plus \"></i> <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">MASTER</span>\n        </a>\n\n        <mat-menu #dispatchPlan=\"matMenu\" style=\"background-color: #1389fd;\">\n          <span (mouseleave)=\"dispatchPlanmenu1Trigger.closeMenu()\">\n=======\n        <mat-menu #dispatchPlan=\"matMenu\" style=\"background-color: #ababab;\">\n          <span (mouseleave)=\"dispatchPlanmenuTrigger.closeMenu()\">\n\n            <a class=\"nav-link\" routerLink=\"/dashboard/products\">\n              <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\"> Product </span>\n            </a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/categories-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Category\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/suppliers-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Supplier\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/customers-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Customer\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/companies-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Company\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/locations-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Location\n              </span></a>\n          </span>\n        </mat-menu>\n      </li>  -->\n\n      <mat-tree [dataSource]=\"dataSourceReports\" [treeControl]=\"treeControl\" style=\"margin-right: 10px;\">\n        <!-- This is the tree node template for leaf nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n          <!-- use a disabled button to provide padding for tree leaf -->\n          <button mat-icon-button (click)=\"getReports(node.name)\"> {{node.name}}</button>\n\n        </mat-tree-node>\n        <!-- This is the tree node template for expandable nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n          <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'add'}}\n            </mat-icon>\n          </button>\n          {{node.name}}\n        </mat-tree-node>\n      </mat-tree>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/balance-sheet\">\n          <i class=\"fa fa-inr \"></i> <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">BALANCE SHEET</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/user\"><i class=\"fa fa-users \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">USERS</span></a>\n      </li>\n\n    </ul>\n\n  </nav>\n</div>","const a = ['', 'One ', 'Two ', 'Three ', 'Four ', 'Five ', 'Six ', 'Seven ', 'Eight ', 'Nine ', 'Ten ', 'eleven ', 'twelve ', 'thirteen ', 'fourteen ', 'fifteen ', 'sixteen ', 'seventeen ', 'eighteen ', 'nineteen '];\nconst b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n\nexport function numberInWords(num) {\n    if ((num = num.toString()).length > 9) return 'overflow';\n    const n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\n    if (!n)\n        return '';\n    var str = '';\n    str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'Crore ' : '';\n    str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'Lakh ' : '';\n    str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'Thousand ' : '';\n    str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'Hundred ' : '';\n    str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'Only ' : '';\n    return str;\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CompanyService} from 'src/app/_services/company.service';\nimport {CustomerService} from 'src/app/_services/customer.service';\nimport {CreateCustomerComponent} from '../create-customer/create-customer.component';\n\n@Component({\n    selector: 'app-customers-list',\n    templateUrl: './customers-list.component.html',\n    styleUrls: ['./customers-list.component.css']\n})\nexport class CustomersListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    displayedColumns: string[] = ['customerName', 'GSTIN', 'location', 'phoneNumber', 'id'];\n    dataSource;\n\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private companyService: CompanyService) {\n    }\n\n    ngOnInit(): void {\n        this.getCustomerList();\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(CreateCustomerComponent, {\n            width: '550px',\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getCustomerList();\n        });\n    }\n\n    updateCustomer(updateCustomer): void {\n        const dialogRef = this.dialog.open(CreateCustomerComponent, {\n            width: '550px',\n            data: {data: updateCustomer}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getCustomerList();\n        });\n    }\n\n    getCustomerList() {\n        this.customerService.getCustomerList().subscribe(data => {\n            this.dataSource = data;\n            this.dataSource = new MatTableDataSource(data);\n            this.dataSource.paginator = this.paginator;\n        }, error => console.log(error));\n    }\n\n    deleteCustomer(event) {\n        this.customerService.deleteCustomer(event.id).subscribe(\n            response => {\n                this.getCustomerList();\n            },\n            error => console.log(error));\n    }\n}\n\n\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Customer\n        </button>\n    </div>\n</div>\n\n<div class=\"mat-elevation-z8\">\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position customer -->\n        <ng-container matColumnDef=\"customerName\">\n            <th *matHeaderCellDef mat-header-cell>Customer</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.customerName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"GSTIN\">\n            <th *matHeaderCellDef mat-header-cell>GSTIN</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.gstIn}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"location\">\n            <th *matHeaderCellDef mat-header-cell> Location</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.location?.cityName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-header-cell [hidden]=\"true\"> Action</th>\n            <td *matCellDef=\"let element\" [hidden]=\"true\" mat-cell>\n\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\"\n                        mat-icon-button>\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                    <div>\n                        <button (click)=\"updateCustomer(element)\" class=\"btn btn-info\"\n                                style=\"width: 80px;margin-left: 15px;\">\n                            Update\n                        </button>\n                        <br>\n                        <button (click)=\"deleteCustomer(element)\" class=\"btn btn-danger\"\n                                style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                        </button>\n                        <br>\n\n                    </div>\n                </mat-menu>\n                <!--  -->\n            </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"symbol\">\n            <th *matHeaderCellDef mat-header-cell> Symbol</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.symbol}} </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {SupplierService} from 'src/app/_services/supplier.service';\nimport {CreateSupplierComponent} from '../create-supplier/create-supplier.component';\n\n@Component({\n    selector: 'app-supplier-list',\n    templateUrl: './supplier-list.component.html',\n    styleUrls: ['./supplier-list.component.css'],\n\n})\nexport class SupplierListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    displayedColumns: string[] = ['supplierName', 'GSTIN', 'company', 'location', 'phoneNumber', 'id'];\n    dataSource;\n\n    constructor(public dialog: MatDialog, private supplierService: SupplierService) {\n    }\n\n    ngOnInit(): void {\n        this.getSupplierList();\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(CreateSupplierComponent, {\n            width: '550px',\n            // data: {name: this.name, animal: this.animal}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getSupplierList();\n        });\n    }\n\n    getSupplierList() {\n        this.supplierService.getSupplierList()\n            .subscribe(data => {\n                this.dataSource = new MatTableDataSource(data);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource = data;\n            }, error => console.log(error));\n    }\n\n    deleteSupllier(event) {\n        this.supplierService.deleteSupplier(event.id).subscribe(\n            response => {\n                this.getSupplierList();\n            },\n            error => console.log(error));\n    }\n\n    updateSuppliers(updateSupplier): void {\n        const dialogRef = this.dialog.open(CreateSupplierComponent, {\n            width: '550px',\n            data: {data: updateSupplier}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getSupplierList();\n        });\n    }\n}\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Supplier\n        </button>\n    </div>\n</div>\n<div class=\"mat-elevation-z8\">\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n\n        <!-- Position customer -->\n        <ng-container matColumnDef=\"supplierName\">\n            <th *matHeaderCellDef mat-header-cell>Supplier</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.supplierName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"GSTIN\">\n            <th *matHeaderCellDef mat-header-cell>GSTIN</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.gstIn}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"company\">\n            <th *matHeaderCellDef mat-header-cell> Company</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.company?.companyName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"location\">\n            <th *matHeaderCellDef mat-header-cell> Location</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.location?.cityName}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-header-cell [hidden]=\"true\"> Action</th>\n            <td *matCellDef=\"let element\" mat-cell [hidden]=\"true\">\n\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                    <div>\n                        <button (click)=\"updateSuppliers(element)\" class=\"btn btn-info\"\n                                style=\"width: 80px;margin-left: 15px;\">\n                            Update\n                        </button>\n                        <br>\n                        <button (click)=\"deleteSupllier(element)\" class=\"btn btn-danger\"\n                                style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                        </button>\n                        <br>\n\n                    </div>\n                </mat-menu>\n                <!--  -->\n\n            </td>\n        </ng-container>\n\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"symbol\">\n            <th *matHeaderCellDef mat-header-cell> Symbol</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.symbol}} </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Supplier} from './supplier';\n\nexport class SupplierBalanceSheet {\n    supplier: Supplier;\n    currentBalance: number;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-purchase-report',\n  templateUrl: './purchase-report.component.html',\n  styleUrls: ['./purchase-report.component.css']\n})\nexport class PurchaseReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>purchase-report works!</p>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/product';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getProduct(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createProduct(product: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, product);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createProductWithCategory(product: Object, id: number): Observable<Object> {\n        return this.http.post(`${this.baseUrl}/${id}`, product);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateProduct(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteProduct(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getProductsList(): Observable<any> {\n        return this.http.get(this.baseUrl);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (localStorage.getItem('accessToken')) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { TableComponent } from './ui_modules/table/table.component';\nimport { SalesTableComponent } from './ui_modules/table/sales-table.component';\nimport { BalanceSheetComponent } from './balance-sheet/balance-sheet.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { CreateProductComponent } from './create-product/create-product.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\n\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { AuthGuard } from './auth.guard';\nimport { DashboardCategoriesComponent } from './pages/dashboard-categories/dashboard-categories.component';\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\nimport { CompanyListComponent } from './companies/company-list/company-list.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { SupplierListComponent } from './suppliers/supplier-list/supplier-list.component';\nimport { LocationListComponent } from './locations/location-list/location-list.component';\nimport { CreateLocationComponent } from './locations/create-location/create-location.component';\nimport { CreateCategoryComponent } from './categories/create-category/create-category.component';\nimport { CreateSupplierComponent } from './suppliers/create-supplier/create-supplier.component';\nimport { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { SalesReportComponent } from './reports/sales-report/sales-report.component';\nimport { PurchaseReportComponent } from './reports/purchase-report/purchase-report.component';\n\nexport const routes: Routes = [\n  { path: '',   redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login',  component: LoginComponent,  },\n  { path: 'register', component: RegisterComponent },\n  { path: '404', component: NotfoundComponent },\n\n  {path: 'dashboard', pathMatch: 'prefix',  canActivate: [ AuthGuard ],\n    component: DashboardComponent, \n    children : [\n      { path: 'dashboard2', component: DashboardCategoriesComponent, canActivate: [ AuthGuard] },\n      { path: 'products', component: ProductListComponent, canActivate: [ AuthGuard] },\n      { path: 'add', component: CreateProductComponent },\n      { path: 'category', component: CreateCategoryComponent },\n      { path: 'purchaseOrder', component: PurchaseOrderComponent },\n      { path: 'salesOrder', component: SalesOrderComponent },\n      { path: 'location', component: CreateLocationComponent },\n      { path: 'customer', component: CreateCustomerComponent },\n      { path: 'supplier', component: CreateSupplierComponent },\n      { path: 'balance-sheet', component: BalanceSheetComponent },\n      { path: 'customers-list', component: CustomersListComponent },\n      { path: 'companies-list', component: CompanyListComponent },\n      { path: 'suppliers-list', component: SupplierListComponent },\n      { path: 'categories-list', component: CategoryListComponent },\n      { path: 'locations-list', component: LocationListComponent },\n      { path: 'home', component: HomeComponent },\n      { \n        path: 'reports', redirectTo: 'reports/sales-report'\n      },\n      { \n        path: 'reports', component: ReportsComponent,\n        children: [\n          { path: 'sales-report', component: SalesReportComponent },\n          { path: 'purchase-report', component: PurchaseReportComponent },\n        ] \n      },\n    ]\n    },\n  { path: 'table', component: TableComponent },\n  { path: 'salesTable', component: SalesTableComponent },\n  { path: '**', redirectTo: '404', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../_services/auth.service';\nimport {TokenStorageService} from '../_services/token-storage.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    form: any = {};\n    errorMessage = '';\n    roles: string[] = [];\n\n    constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (this.tokenStorage.getToken()) {\n            this.roles = this.tokenStorage.getUser().roles;\n        }\n    }\n\n    \n    onSubmit() {\n        this.authService.login(this.form).subscribe(\n            data => {\n                this.tokenStorage.saveToken(data.accessToken);\n                localStorage.setItem('accessToken', data.accessToken);\n                this.tokenStorage.saveUser(data);\n                this.roles = this.tokenStorage.getUser().roles;\n                this.router.navigate(['dashboard/home']);\n            },\n            err => {\n                this.errorMessage = err.error.message;\n            }\n        );\n    }\n\n\n}\n","<div class=\"col-md-12\">\n    <div class=\"card card-container\">\n        <img\n                class=\"profile-img-card\"\n                id=\"profile-img\"\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        />\n        <form\n                #f=\"ngForm\"\n                (ngSubmit)=\"f.form.valid && onSubmit()\"\n                name=\"form\"\n                novalidate\n        >\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input\n                        #username=\"ngModel\"\n                        [(ngModel)]=\"form.username\"\n                        class=\"form-control\"\n                        name=\"username\"\n                        required\n                        type=\"text\"\n                />\n                <div\n                        *ngIf=\"f.submitted && username.invalid\"\n                        class=\"alert alert-danger\"\n                        role=\"alert\"\n                >\n                    Username is required!\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input\n                        #password=\"ngModel\"\n                        [(ngModel)]=\"form.password\"\n                        class=\"form-control\"\n                        minlength=\"6\"\n                        name=\"password\"\n                        required\n                        type=\"password\"\n                />\n                <div\n                        *ngIf=\"f.submitted && password.invalid\"\n                        class=\"alert alert-danger\"\n                        role=\"alert\"\n                >\n                    <div *ngIf=\"password.errors.required\">Password is required</div>\n                    <div *ngIf=\"password.errors.minlength\">\n                        Password must be at least 6 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary btn-block\">\n                    Login\n                </button>\n            </div>\n\n        </form>\n\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2020 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {CustomerService} from 'src/app/_services/customer.service';\nimport {LocationService} from 'src/app/_services/location.service';\n\n@Component({\n    selector: 'app-create-customer',\n    templateUrl: './create-customer.component.html',\n    styleUrls: ['./create-customer.component.css']\n})\nexport class CreateCustomerComponent implements OnInit {\n\n    customerForm: FormGroup;\n    locationForm: FormGroup;\n    customerUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n    citiesList: any;\n\n    constructor(private customerService: CustomerService, private location: LocationService,\n                public dialogRef: MatDialogRef<CreateCustomerComponent>,\n                @Inject(MAT_DIALOG_DATA) private data) {\n        this.customerUpdateData = data;\n\n        this.customerForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n            customerName: new FormControl(null, [Validators.required]),\n            gstIn: new FormControl(null, [Validators.required]),\n            phoneNumber: new FormControl(null, [Validators.required, Validators.pattern(/^-?(0|[1-9]\\d*)?$/), Validators.minLength(10), Validators.maxLength(10)]),\n        });\n\n        this.locationForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n        });\n\n        if (data != null) {\n            this.customerForm.controls['customerName'].setValue(this.customerUpdateData.data.customerName);\n            this.customerForm.controls['gstIn'].setValue(this.customerUpdateData.data.gstIn);\n            this.customerForm.controls['phoneNumber'].setValue(this.customerUpdateData.data.phoneNumber);\n            this.customerForm.controls['cityName'].setValue(this.customerUpdateData.data.location.cityName);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n        this.getlocationList();\n    }\n\n    onSubmit() {\n        if (this.customerUpdateData?.data.id != null) {\n            // this.updateCustomer();\n        } else {\n            this.saveCustomer();\n        }\n    }\n\n    saveCustomer() {\n        let data = {\n            customerName: this.customerForm.controls.customerName.value,\n            gstIn: this.customerForm.controls.gstIn.value,\n            location: this.customerForm.controls.cityName.value,\n            phoneNumber: this.customerForm.controls.phoneNumber.value,\n        };\n\n        this.customerService.createCustomer(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Company Successfully Created..!';\n                // this.getCompanyList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    // updateCustomer() {\n    //   let data = {\n    //     companyID: this.companyUpdateData?.data.id,\n    //     companyName: this.customerForm.controls.companyName.value,\n    //     phoneNumber: this.customerForm.controls.phoneNumber.value\n    //   }\n    //   this.customerService.updateCompany(data).subscribe(res => {\n    //     if (res != null) {\n    //       this.successMsg = \"Company Successfully Updated..!\";\n    //       this.getCompanyList();\n    //       this.closeModal();\n    //     }\n    //   }, error => {\n    //     this.errorMsg = error.error.errorMessage; \"Company Unsuccessfully Updated..\";\n    //   })\n    // }\n\n    // getCompanyList() {\n    //   this.customerService.getCompanyList().subscribe(data => {\n    //   }, error => console.log(error));\n    // }\n\n    getlocationList() {\n        this.location.getLocationList().subscribe(res => {\n            this.citiesList = res;\n        });\n    }\n}\n","<div class=\"product-conatiner\">\n    <div class=\"title-header\">\n        <h4 class=\"title\">Add Customer</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"customerForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"customerName\" matInput placeholder=\"Customer Name\">\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"gstIn\" matInput placeholder=\"GSTIN\">\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <mat-select formControlName=\"cityName\" placeholder=\"City\">\n                    <mat-option *ngFor=\"let location of citiesList\" [value]=\"location\">{{location.cityName}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"phoneNumber\" matInput placeholder=\"Phone Number\" required>\n                <mat-error *ngIf=\"customerForm.get('phoneNumber').hasError('required')\">\n                    Phone Number required!\n                </mat-error>\n                <mat-error *ngIf=\"customerForm.get('phoneNumber').hasError('pattern')\">\n                    Only Numbers allowed.\n                </mat-error>\n                <mat-error *ngIf=\"customerForm.get('phoneNumber').hasError('maxlength')\">\n                    Max lenghth is 10 Number.\n                </mat-error>\n                <mat-error *ngIf=\"customerForm.get('phoneNumber').hasError('minlength')\">\n                    Min lenghth is 10 Number.\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"button-container\">\n            <button (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\n            </button>\n            <button (click)=\"saveCustomer()\" [disabled]=\"!customerForm.valid\" class=\"btn btn-primary\"\n                    style=\"width: 25%;margin-left: 5px;\">Save\n            </button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>\n","export class Location {\n    locationID: number;\n    cityName: string;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}