{"version":3,"sources":["webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/_model/purchaseOrder.ts","webpack:///src/app/menu/navigation-bar/navigation-bar.component.ts","webpack:///src/app/menu/navigation-bar/navigation-bar.component.html","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/purchase-order/purchase-order.component.ts","webpack:///src/app/purchase-order/purchase-order.component.html","webpack:///src/app/balance-sheet/balance-sheet.component.ts","webpack:///src/app/balance-sheet/balance-sheet.component.html","webpack:///src/app/_services/supplier.service.ts","webpack:///src/app/_model/sales-order.ts","webpack:///src/app/_services/category.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/_services/location.service.ts","webpack:///src/app/_model/customer-balance-sheet.ts","webpack:///src/app/_model/sales-order-detail.ts","webpack:///src/app/create-product/create-product.component.ts","webpack:///src/app/create-product/create-product.component.html","webpack:///src/app/_services/token-storage.service.ts","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/menu/action-bar-item/action-bar-item.component.ts","webpack:///src/app/menu/action-bar-item/action-bar-item.component.html","webpack:///src/app/supplier/supplier.component.ts","webpack:///src/app/supplier/supplier.component.html","webpack:///src/app/_model/company.ts","webpack:///src/app/customer/customer.component.ts","webpack:///src/app/customer/customer.component.html","webpack:///src/app/_services/purchase-order.service.ts","webpack:///src/app/company/company.component.ts","webpack:///src/app/company/company.component.html","webpack:///src/app/pipe/sort.pipe.ts","webpack:///src/app/_services/sales-order.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/menu/mobile-menu/mobile-menu.component.ts","webpack:///src/app/menu/mobile-menu/mobile-menu.component.html","webpack:///src/app/_services/customer.service.ts","webpack:///src/app/_model/product.ts","webpack:///src/app/pages/dashboard/dashboard.component.ts","webpack:///src/app/pages/dashboard/dashboard.component.html","webpack:///src/app/_model/customer.ts","webpack:///src/app/app.module.ts","webpack:///src/app/create-category/create-category.component.ts","webpack:///src/app/create-category/create-category.component.html","webpack:///src/app/sales-order/sales-order.component.ts","webpack:///src/app/sales-order/sales-order.component.html","webpack:///src/app/_model/category.ts","webpack:///src/app/_model/http-client-helper.ts","webpack:///src/app/pages/notfound/notfound.component.ts","webpack:///src/app/pages/notfound/notfound.component.html","webpack:///src/app/_model/supplier.ts","webpack:///src/app/_services/company.service.ts","webpack:///src/app/menu/action-bar/action-bar.component.ts","webpack:///src/app/menu/action-bar/action-bar.component.html","webpack:///src/app/_model/supplier-balance-sheet.ts","webpack:///src/app/_services/product.service.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/_model/purchaseOrderDetail.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/location/location.component.ts","webpack:///src/app/location/location.component.html","webpack:///src/app/product-details/product-details.component.ts","webpack:///src/app/product-details/product-details.component.html","webpack:///src/app/_model/location.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["RegisterComponent","authService","form","isSuccessful","isSignUpFailed","errorMessage","register","subscribe","data","console","log","err","error","message","selector","templateUrl","styleUrls","PurchaseOrder","NavigationBarComponent","auth","router","logout","navigateByUrl","AUTH_API","baseURL","httpOptions","headers","AuthService","http","credentials","post","username","password","user","email","localStorage","clear","providedIn","PurchaseOrderComponent","productService","supplierService","purchaseOrderService","product","purchaseOrder","purchaseOrderDetail","rows","currentBalance","previousBalance","totalAmount","totalBalance","reloadData","products","getProductsList","suppliers","getSupplierList","amountPaid","totalPrice","createPurchaseOrder","refreshAfterSave","total","forEach","obj","Number","price","qtyOrdered","index","amountBalance1","splice","length","prod","push","supplierID","getPurchaseOrderBalaceBySupplier","changeInQtyOrPrice","supplierBalanceData","supplier","selectedProduct","amountToBePaid","save","BalanceSheetComponent","salesOrderService","customerBalanceSheet","customer","location","SupplierBalanceSheet","customerBalanceSheets","getAllCustomerSalesOrderBalanceSheet","supplierBalanceSheets","getAllSupplierPurchaseOrderBalanceSheet","SupplierService","baseUrl","id","get","value","put","responseType","SalesOrder","CategoryService","category","environment","production","LocationService","Location","CustomerBalanceSheet","SalesOrderDetail","CreateProductComponent","categoryService","submitted","categories","getCategoryList","createProduct","gotoList","navigate","onSubmit","TOKEN_KEY","USER_KEY","TokenStorageService","window","sessionStorage","token","removeItem","setItem","getItem","JSON","stringify","parse","ProductListComponent","modalService","fb","title","dtOptions","pipeData","p","pagingType","editProfileForm","group","productID","productName","qty","response","deleteProduct","updateProduct","dismissAll","targetModal","open","centered","backdrop","e","ActionBarItemComponent","shadow","SupplierComponent","locationService","companyService","locations","getLocationList","companies","getCompanyList","createSupplier","deleteSupplier","getSupplier","updateSupplier","Company","CustomerComponent","customerService","myControl","options","filterValue","toLowerCase","filter","option","cityName","includes","dropDownAutoComplete","x","filteredOptions","valueChanges","pipe","_filter","customers","getCustomerList","createCustomer","alert","val","selectedgroup","deleteCustomer","getCustomer","updateCustomer","PurchaseOrderService","invoice","CompanyComponent","company","createCompany","deleteCompany","getCompany","updateCompany","SortPipe","sort","name","SalesOrderService","customerID","AppComponent","tokenStorageService","isLoggedIn","showAdminBoard","showModeratorBoard","MobileMenuComponent","CustomerService","Product","DashboardComponent","isVisible","urlPath","getCurrentPage","path","url","split","Customer","AppModule","declarations","imports","providers","bootstrap","CreateCategoryComponent","createCategory","deleteCategory","getCategory","updateCategory","SalesOrderComponent","salesOrder","salesOrderDetail","createSalesOrder","currentPrice","getSalesOrderBalanceByCustomer","customerBalanceData","Category","HttpClientHelper","NotfoundComponent","Supplier","CompanyService","ActionBarComponent","expanded","changeDetection","OnPush","ProductService","AuthGuard","route","state","routes","redirectTo","pathMatch","component","canActivate","children","AppRoutingModule","forRoot","exports","PurchaseOrderDetail","LoginComponent","tokenStorage","roles","getToken","getUser","login","saveToken","accessToken","saveUser","LocationComponent","createLocation","deleteLocation","getLocation","updateLocation","ProductDetailsComponent","snapshot","params","getProduct","list","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.authService.register(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isSuccessful\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          minlength=\"3\"\n          maxlength=\"20\"\n          #username=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username must be at most 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"email\"\n          [(ngModel)]=\"form.email\"\n          required\n          email\n          #email=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n          <div *ngIf=\"email.errors.required\">Email is required</div>\n          <div *ngIf=\"email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n  </div>\n</div>\n","import { PurchaseOrderDetail } from './purchaseOrderDetail';\nimport { Supplier } from './supplier';\n\nexport class PurchaseOrder {\n  status: string;\n  supplier: Supplier;\n  totalQty: number;\n  totalPrice: number;\n  amountPaid: number;\n  currentBalance: number;\n\tpreviousBalance: number;\n  purchaseOrderDetail: Array<PurchaseOrderDetail>;\n}\n","import {Router} from '@angular/router';\nimport {AuthService} from '../../_services/auth.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent {\n  constructor(private auth: AuthService, private router: Router)  {}\n\n  logout() {\n    this.auth.logout();\n    this.router.navigateByUrl('/login');\n  }\n}\n","<nav class=\"navbar navbar-light navbar-expand-sm bg-white shadow-sm\">\n\t<div class=\"container-fluid\">\n\t\t<span class=\"navbar-brand\">RK-Fertilizers</span>\n\t\t<div class=\"navbar-nav\">\n\t\t\t<span (click)=\"logout()\" class=\"nav-item nav-link\" style=\"cursor: pointer;\">Logout</span>\n\t\t</div>\n\t</div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\nconst AUTH_API = HttpClientHelper.baseURL+'/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    }, httpOptions);\n  }\n\n  logout() {\n    localStorage.clear();\n  }\n}\n","import { Product } from './../_model/product';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductService } from '../_services/product.service';\nimport { PurchaseOrder } from '../_model/purchaseOrder';\nimport { PurchaseOrderService } from '../_services/purchase-order.service';\nimport { PurchaseOrderDetail } from '../_model/purchaseOrderDetail';\nimport { Supplier } from '../_model/supplier';\nimport { SupplierService } from '../_services/supplier.service';\n\n@Component({\n  selector: 'app-purchase-order',\n  templateUrl: './purchase-order.component.html'\n})\nexport class PurchaseOrderComponent implements OnInit {\n  products: Observable<Product[]>;\n  product: Product = new Product();\n  purchaseOrder: PurchaseOrder = new PurchaseOrder();\n  purchaseOrderDetail: PurchaseOrderDetail = new PurchaseOrderDetail();\n  suppliers: Observable<Supplier[]>;\n\n  rows: Array<PurchaseOrderDetail> = [];\n  currentBalance = 0;\n  previousBalance = 0;\n  totalAmount = 0;\n  totalBalance = 0;\n\n  constructor(private productService: ProductService,\n    private supplierService: SupplierService,\n    private purchaseOrderService: PurchaseOrderService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.products = this.productService.getProductsList();\n    this.suppliers = this.supplierService.getSupplierList();\n    this.purchaseOrder.amountPaid = 0;\n  }\n\n  save() {\n    this.purchaseOrder.currentBalance = this.currentBalance;\n    this.purchaseOrder.purchaseOrderDetail = this.rows;\n    this.purchaseOrder.totalPrice = this.totalAmount;\n\n    this.purchaseOrderService\n      .createPurchaseOrder(this.purchaseOrder).subscribe(data => {\n        console.log(data);\n        this.refreshAfterSave();\n      },\n        error => console.log(error));\n  }\n\n  refreshAfterSave() {\n    this.purchaseOrder = new PurchaseOrder();\n    this.product = new Product();\n    this.purchaseOrder.amountPaid = 0;\n    this.previousBalance = 0;\n    this.currentBalance = 0;\n    this.totalBalance = 0;\n    this.rows = [];\n  }\n\n  getTotalPrice() {\n    let total = 0;\n    this.rows.forEach(obj => {\n      total += Number(obj.price);\n    });\n    return total;\n  }\n\n  getTotalQty() {\n    let total = 0;\n    this.rows.forEach(obj => {\n      total += Number(obj.qtyOrdered);\n    });\n    return total;\n  }\n\n  totalAmountToPaid() {\n    let totalAmount = 0;\n    this.rows.forEach(obj => {\n      totalAmount += Number(obj.qtyOrdered) * Number(obj.price);\n    });\n    this.totalAmount = totalAmount;\n    return totalAmount;\n  }\n\n  removeCart(index: number) {\n    const amountBalance1 = this.totalAmount - (this.rows[index].price * this.rows[index].qtyOrdered);\n    this.currentBalance = amountBalance1 - Number(this.purchaseOrder.amountPaid);\n    this.totalBalance = this.previousBalance + this.currentBalance;\n    this.rows.splice(index, 1);\n    this.purchaseOrder.amountPaid = this.rows.length === 0 ? 0 : this.purchaseOrder.amountPaid;\n  }\n\n  selectedProduct(prod: Product) {\n    this.rows.push({\n      product: prod,\n      qtyOrdered: 0,\n      price: 0\n    });\n  }\n\n  supplierBalanceData(supplierID: any) {\n    this.purchaseOrderService.getPurchaseOrderBalaceBySupplier(supplierID).subscribe((data: number) => {\n      console.log(data);\n      this.previousBalance = data;\n      this.changeInQtyOrPrice();\n    }, (error: any) => console.log(error));\n  }\n\n  amountToBePaid(amountPaid: number) {\n    this.currentBalance = this.totalAmount - amountPaid;\n    this.totalBalance = this.previousBalance + this.currentBalance;\n  }\n\n  changeInQtyOrPrice() {\n    this.currentBalance = this.totalAmount - this.purchaseOrder.amountPaid;\n    this.totalBalance = this.previousBalance + this.currentBalance;\n  }\n}\n","<div style=\"width: 400px;\">\n  <div class=\"form-group\">\n    <label for=\"name\">Supplier</label>\n    <select name=\"customer\" class=\"form-control\" required [(ngModel)]=\"purchaseOrder.supplier\"\n      (change)=\"supplierBalanceData(purchaseOrder.supplier.supplierID)\">\n      <option disabled>Select Supplierr</option>\n      <option [ngValue]=\"supplier\" *ngFor=\"let supplier of suppliers | async\">{{supplier.supplierName}}</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"name\">Product</label>\n    <select name=\"products\" class=\"form-control\" [(ngModel)]=\"product\" (change)=\"selectedProduct(product)\">\n      <option disabled>Select Product</option>\n      <option [ngValue]=\"product\" *ngFor=\"let product of products | async\">{{product.productName}}</option>\n    </select>\n  </div>\n</div>\n<div>\n  <table class=\"table table-hover table table-bordered table-striped\">\n    <thead>\n      <tr>\n        <th>S.No</th>\n        <th>Remove</th>\n        <th>Product</th>\n        <th>Price</th>\n        <th>Qty</th>\n        <th>Total Amout</th>\n      </tr>\n    </thead>\n    <tr *ngFor=\"let cart of rows; let i = index\">\n      <td>{{i+1}}</td>\n      <td><button (click)=\"removeCart(i)\">X</button></td>\n      <td>\n        <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.product.productName\" disabled>\n      </td>\n      <td><input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.price\" (change)=\"changeInQtyOrPrice()\"></td>\n      <td>\n        <div>\n          <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.qtyOrdered\" placeholder=\"{{cart.product.qty}}\"\n            (change)=\"changeInQtyOrPrice()\">\n        </div>\n      </td>\n      <td>{{cart.price*cart.qtyOrdered}}</td>\n    </tr>\n    <tr>\n      <td>Total:</td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>{{getTotalQty()}}</td>\n      <td>{{totalAmountToPaid().toLocaleString('en-IN')}}</td>\n    </tr>\n  </table>\n</div>\n\n<div style=\"text-align:right;\">\n  <div class=\"form-group\">\n    <label for=\"name\">Amount Paid</label>\n    <input type=\"text\" id=\"price\" required [(ngModel)]=\"purchaseOrder.amountPaid\"\n      (input)=\"amountToBePaid(purchaseOrder.amountPaid)\" name=\"price\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Current Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"currentBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Previous Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"previousBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Total Pay Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"totalBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"save()\">Submit</button>\n</div>\n","import { PurchaseOrderService } from '../_services/purchase-order.service';\nimport { Observable } from 'rxjs';\nimport { SalesOrderService } from '../_services/sales-order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { CustomerBalanceSheet } from '../_model/customer-balance-sheet';\nimport { Customer } from '../_model/customer';\nimport { SupplierBalanceSheet } from '../_model/supplier-balance-sheet';\nimport { Supplier } from '../_model/supplier';\nimport { Location } from '../_model/location';\n\n@Component({\n  selector: 'app-balance-sheet',\n  templateUrl: './balance-sheet.component.html',\n  styleUrls: ['./balance-sheet.component.css']\n})\nexport class BalanceSheetComponent implements OnInit {\n  customerBalanceSheets: Observable<CustomerBalanceSheet>;\n  customerBalanceSheet = new CustomerBalanceSheet();\n  customer = new Customer();\n  location = new Location();\n\n  supplierBalanceSheets: Observable<SupplierBalanceSheet>;\n  SupplierBalanceSheet = new SupplierBalanceSheet();\n  supplier = new Supplier();\n\n  constructor(private salesOrderService: SalesOrderService, private purchaseOrderService: PurchaseOrderService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.customerBalanceSheets = this.salesOrderService.getAllCustomerSalesOrderBalanceSheet();\n    this.supplierBalanceSheets = this.purchaseOrderService.getAllSupplierPurchaseOrderBalanceSheet();\n  }\n\n}\n","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Customer List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Customer</th>\n          <th>City</th>\n          <th>Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customerBalanceSheet of customerBalanceSheets | async\">\n          <td>{{customerBalanceSheet.customer.customerName}}</td>\n          <td>{{customerBalanceSheet.customer.location.cityName}}</td>\n          <td>{{customerBalanceSheet.currentBalance}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n<br>\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Supplier List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Supplier</th>\n          <th>Company</th>\n          <th>Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let supplierBalanceSheet of supplierBalanceSheets | async\">\n          <td>{{supplierBalanceSheet.supplier.supplierName}}</td>\n          <td>{{supplierBalanceSheet.supplier.company.companyName}}</td>\n          <td>{{supplierBalanceSheet.currentBalance}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/supplier';\n\n  constructor(private http: HttpClient) { }\n\n  getSupplier(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createSupplier(supplier: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, supplier);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateSupplier(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteSupplier(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getSupplierList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { SalesOrderDetail } from './sales-order-detail';\nimport { Customer } from './customer';\nexport class SalesOrder {\n  status: string;\n  customer: Customer;\n  totalQty: number;\n  totalPrice: number;\n  amountPaid: number;\n  currentBalance: number;\n\tpreviousBalance: number;\n  salesOrderDetail: Array<SalesOrderDetail>;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/category';\n\n  constructor(private http: HttpClient) { }\n\n  getCategory(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createCategory(category: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, category);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateCategory(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteCategory(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getCategoryList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/location';\n\n  constructor(private http: HttpClient) { }\n\n  getLocation(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createLocation(Location: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}`, Location);\n  }\n\n  updateLocation(value: any): Observable<any> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteLocation(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getLocationList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { Customer } from './customer';\n\nexport class CustomerBalanceSheet {\n  customer: Customer;\n\tcurrentBalance: number;\n}\n","import { Product } from './product';\nexport class SalesOrderDetail {\n  product: Product;\n  qtyOrdered: number;\n  price: number;\n}\n","import { Observable } from 'rxjs';\nimport { Category } from '../_model/category';\nimport { Product } from '../_model/product';\nimport { ProductService } from '../_services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoryService } from '../_services/category.service';\n\n@Component({\n  selector: 'app-create-productt',\n  templateUrl: './create-product.component.html'\n})\n\nexport class CreateProductComponent implements OnInit {\n  categories: Observable<Category[]>;\n\n  product: Product = new Product();\n  submitted = false;\n\n  constructor(private productService: ProductService,\n              private categoryService: CategoryService,\n              private router: Router) { }\n\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.categories = this.categoryService.getCategoryList();\n  }\n\n  newProduct(): void {\n    this.submitted = false;\n    this.product = new Product();\n  }\n\n  save() {\n    this.productService\n      .createProduct(this.product).subscribe(data => {\n        console.log(data);\n        this.product = new Product();\n        this.gotoList();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log(this.product)\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/products']);\n  }\n}\n\n","<h3>Create Product</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Product</label>\n      <input type=\"text\" class=\"form-control\" id=\"productName\" required [(ngModel)]=\"product.productName\"\n        name=\"productName\">\n    </div>\n\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <select formControlName=\"website\" class=\"form-control\">\n        <option disabled>Select Website</option>\n        <option *ngFor=\"let web of websiteList\">{{web}}</option>\n      </select>\n    </div> -->\n\n    <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <select name=\"categories\" class=\"form-control\" required [(ngModel)]= \"product.category\" >\n        <option disabled>Select Category</option>\n        <option [ngValue]=\"category\" *ngFor=\"let category of categories | async\">{{category.categoryName}}</option>\n      </select>\n    </div>\n\n   \n    <!-- <mat-form-field>\n      <input type=\"text\" placeholder=\"Enter Category\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let category of categories | async\" [value]=\"category.categoryName\">\n          {{category.categoryName}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field> -->\n\n    <div class=\"form-group\">\n      <label for=\"name\">Price</label>\n      <input type=\"text\" class=\"form-control\" id=\"price\" required [(ngModel)]=\"product.price\" name=\"price\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newProduct()\">Add</button> -->\n</div>\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser() {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}\n","import { Observable } from 'rxjs';\nimport { ProductService } from './../_services/product.service';\nimport { Product } from './../_model/product';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { CategoryService } from '../_services/category.service';\nimport { Category } from '../_model/category';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html'\n})\nexport class ProductListComponent implements OnInit {\n  [x: string]: any;\n  products = null;\n  categories: Observable<Category[]>;\n  title = 'modal2';\n  editProfileForm: FormGroup;\n  product: Product = new Product();\n  dtOptions = null;\n  pipeData = null;\n  p = 1;\n\n  constructor(private productService: ProductService,\n              private modalService: NgbModal,\n              private categoryService: CategoryService,\n              public fb: FormBuilder,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers'\n    };\n    this.reloadData();\n\n    this.editProfileForm = this.fb.group({\n      productID:'',\n      productName: '',\n      price: '',\n      qty: '',\n      category: ''\n    });\n  }\n\n  reloadData() {\n    this.productService.getProductsList().subscribe(response => {\n      this.products = response;\n    });\n    this.categories = this.categoryService.getCategoryList();\n  }\n\n  deleteProduct(id: number) {\n    this.productService.deleteProduct(id)\n      .subscribe(\n        data => {\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  productDetails(id: number) {\n    this.router.navigate(['details', id]);\n  }\n\n  updateProduct() {\n    this.productService.updateProduct(this.product)\n      .subscribe(data => {\n        console.log(data);\n        this.product = new Product();\n        this.modalService.dismissAll();\n      }, error => console.log(error));\n  }\n\n  openModal(targetModal: any, product) {\n    this.product = product;\n    this.modalService.open(targetModal, {\n      centered: true,\n      backdrop: 'static'\n    });\n   \n  }\n\n  sort(e) {\n    // this.product =  ?\n  }\n\n  closeModal() {\n    this.reloadData();\n    this.modalService.dismissAll();\n  }\n}\n","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Product List</h2>\n  </div>\n  <div class=\"panel-body\">\n\n    \n<p-table [value]=\"products\"  [(selection)]=\"selectedCustomers\" dataKey=\"id\" class=\"table table-bordered row-border hover\"  [rowHover]=\"true\"\n[rows]=\"10\" [showCurrentPageReport]=\"true\"  [loading]=\"loading\" [responsive]=\"true\"\n[paginator]=\"true\" sortMode=\"multiple\" > \n  <ng-template pTemplate=\"header\">\n      <tr>  \n          <th pSortableColumn=\"productID\">#Id</th>\n          <th pSortableColumn=\"productName\">Product Name</th>\n          <th pSortableColumn=\"category\">Category</th>\n          <th pSortableColumn=\"qty\">Qty Stock</th>   \n          <th pSortableColumn=\"price\">Price</th>   \n          <th colspan=\"3\">Actions</th>       \n      </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-product>\n      <tr>\n          <td>{{product.productID}}</td>\n          <td>{{product.productName}}</td>\n          <td>{{product.category.categoryName}}</td>\n          <td>{{product.qty}}</td>  \n          <td>{{product.price}}</td>      \n          <td> \n            <button (click)=\"openModal(editProfileModal, product)\" style=\"margin-top:5px;\" class=\"btn btn-info btn-sm\"\n            >  Update </button>\n          </td>      \n          <td> \n            <button (click)=\"deleteProduct(product.productID)\" class=\"btn btn-danger\">Delete</button>\n          </td>      \n           <td> \n            <button (click)=\"productDetails(product.productID)\" class=\"btn btn-info\"\n            style=\"margin-left: 10px\">Details</button>\n          </td>      \n      </tr>\n  </ng-template>\n</p-table>\n\n<!-- \n    <table class=\"table table-bordered row-border hover\" >\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Category</th>\n          <th (click)=\"sort('price')\">Price</th>\n          <th>Qty Stock</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody *ngIf=\"products?.length == 0\">\n        <tr>\n          <td colspan=\"3\" class=\"no-data-available\">No data!</td>\n        </tr>\n      <tbody>\n      <tbody *ngIf=\"products?.length != 0\">\n        <tr *ngFor=\"let product of products | paginate: { itemsPerPage: 10, currentPage: p }\">\n          <td>{{product.productName}}</td>\n          <td>{{product.category.categoryName}}</td>\n          <td>{{product.price}}</td>\n          <td>{{product.qty}}</td>\n          <td class=\"d-none d-sm-block\">\n            <button (click)=\"deleteProduct(product.productID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"openModal(editProfileModal, product)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n            <button (click)=\"productDetails(product.productID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Details</button>\n          </td>\n          <td class=\"d-block d-sm-none\" >\n\n                <button (click)=\"deleteProduct(product.productID)\"  class=\"btn btn-danger btn-sm\">\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n\n                <button (click)=\"openModal(editProfileModal, product)\" style=\"margin-top:5px;\" class=\"btn btn-info btn-sm\"\n                >  <i class=\"fa fa-edit\"></i></button>\n\n                <button (click)=\"productDetails(product.productID)\" style=\"margin-top:5px;\" class=\"btn btn-info btn-sm\">\n                  <i class=\"fa fa-eye\"></i></button>\n          </td>\n        </tr>\n        <tr>\n          <td colspan=\"8\" class=\"text-right\">\n            <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n          </td>\n        </tr>\n      </tbody>\n    </table> -->\n\n\n  </div>\n</div>\n\n<ng-template #editProfileModal let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\" id=\"editProfileLabel\">Update Product</h5>\n    <button type=\"button\" class=\"close\" (click)=\"closeModal()\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n\n  <div class=\"modal-body\">\n    <form  [formGroup]=\"editProfileForm\" (ngSubmit)=\"updateProduct()\">\n      <div class=\"form-group row\">\n        <label for=\"lastname\" class=\"col-sm-4 col-form-label\">Product</label>\n        <div class=\"col-sm-8\">\n          <input type=\"text\" class=\"form-control\" formControlName=\"productName\" name=\"productName\" id=\"productName\"\n            [(ngModel)]=\"product.productName\">\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"firstname\" class=\"col-sm-4 col-form-label\">Price</label>\n        <div class=\"col-sm-8\">\n          <input type=\"text\" class=\"form-control\" formControlName=\"price\" name=\"price\" id=\"price\"\n            [(ngModel)]=\"product.price\">\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"username\" class=\"col-sm-4 col-form-label\">Qty</label>\n        <div class=\"col-sm-8\">\n          <input type=\"text\" class=\"form-control\" name=\"qty\" formControlName=\"qty\" id=\"qty\" [(ngModel)]=\"product.qty\">\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"username\" class=\"col-sm-4 col-form-label\">Category</label>\n        <div class=\"col-sm-8\">\n          <select name=\"category\" id=\"category\" formControlName=\"category\" class=\"form-control\" required [(ngModel)]=\"product.category\">\n            <option disabled>Select Category</option>\n            <option *ngFor=\"let category of categories | async\">{{category.categoryName}}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal()\">Close</button>\n        <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n","import { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'app-action-bar-item',\n  templateUrl: './action-bar-item.component.html',\n  styleUrls: ['./action-bar-item.component.css']\n})\nexport class ActionBarItemComponent {\n  @Input() shadow: boolean = false;\n}","<button class=\"action-bar-item\" [class.shadow-sm]=\"shadow\">\n  <div class=\"hamburger-container\" >\n    <div class=\"bar1\"></div>\n    <div class=\"bar2\"></div>\n    <div class=\"bar3\"></div>\n  </div>\n  <span _ngcontent-c1=\"\" class=\"action-bar-item-text\">Menu</span>\n</button>\n\n","import { Component, OnInit } from '@angular/core';\nimport { SupplierService } from '../_services/supplier.service';\nimport { CompanyService } from '../_services/company.service';\nimport { Supplier } from '../_model/supplier';\nimport { Location } from '../_model/location';\nimport { Observable } from 'rxjs';\nimport { LocationService } from '../_services/location.service';\nimport { Company } from '../_model/company';\n\n@Component({\n  selector: 'app-supplier',\n  templateUrl: './supplier.component.html'\n})\nexport class SupplierComponent implements OnInit {\n  suppliers: Observable<Supplier[]>;\n  locations: Observable<Location[]>;\n  companies: Observable<Company[]>;\n  supplier: Supplier = new Supplier();\n  location: Location = new Location();\n  router: any;\n  submitted = false;\n\n  constructor(private supplierService: SupplierService, private locationService: LocationService,\n              private companyService: CompanyService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.suppliers = this.supplierService.getSupplierList();\n    this.locations = this.locationService.getLocationList();\n    this.companies = this.companyService.getCompanyList();\n  }\n\n  save() {\n    this.supplierService\n      .createSupplier(this.supplier).subscribe(data => {\n        console.log(data);\n        this.supplier = new Supplier();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  deleteSupplier(id: number) {\n    this.supplierService.deleteSupplier(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getSupplier(id: number) {\n    this.submitted = true;\n    this.supplierService.getSupplier(id)\n      .subscribe(data => {\n        console.log(data);\n        this.supplier = data;\n      }, error => console.log(error));\n  }\n\n  updateSupplier(supplier: Supplier) {\n    this.supplierService.updateSupplier(supplier)\n      .subscribe(data => {\n        console.log(data);\n        this.supplier = new Supplier();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>Create Supplier</h3>\n  <!-- <form (ngSubmit)=\"onSubmit()\"> -->\n  <div class=\"form-group\">\n    <label for=\"name\">Supplier</label>\n    <input type=\"text\" class=\"form-control\" id=\"supplierName\" required [(ngModel)]=\"supplier.supplierName\"\n      name=\"supplierName\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">City</label>\n    <select name=\"locations\" class=\"form-control\" [(ngModel)]=\"supplier.location\">\n      <option disabled selected>Select Location</option>\n      <option *ngFor=\"let location of locations | async\" [ngValue]=\"location\">{{location.cityName}}</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Company</label>\n    <select name=\"companies\" class=\"form-control\" [(ngModel)]=\"supplier.company\">\n      <option disabled selected>Select Location</option>\n      <option *ngFor=\"let company of companies | async\" [ngValue]=\"company\">{{company.companyName}}</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Phone number</label>\n    <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"supplier.phoneNumber\" name=\"phoneNumber\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSubmit()\">Submit</button>\n  <!-- </form> -->\n</div>\n\n\n<div [hidden]=\"!submitted\" style=\"width: 400px;\">\n  <h3>Update Supplier</h3>\n  <form (ngSubmit)=\"updateSupplier(supplier)\">\n    <div class=\"form-group\">\n      <label for=\"name\">Supplier</label>\n      <input type=\"text\" class=\"form-control\" id=\"supplierName\" required [(ngModel)]=\"supplier.supplierName\"\n        name=\"supplierName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">City</label>\n      <select name=\"locations\" class=\"form-control\" [(ngModel)]=\"supplier.location\">\n        <option disabled selected>Select Location</option>\n        <option *ngFor=\"let location of locations | async\" [ngValue]=\"location\">{{location.cityName}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Company</label>\n      <select name=\"companies\" class=\"form-control\" [(ngModel)]=\"supplier.company\">\n        <option disabled selected>Select Location</option>\n        <option *ngFor=\"let company of companies | async\" [ngValue]=\"company\">{{company.companyName}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Phone number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"supplier.phoneNumber\" name=\"phoneNumber\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Supplier List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Supplier</th>\n          <!-- <th>City</th> -->\n          <th>Phone number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let supplier of suppliers | async\">\n          <td>{{supplier.supplierName}}</td>\n          <!-- <td>{{supplier.location.cityName}}</td> -->\n          <td>{{supplier.phoneNumber}}</td>\n          <td><button (click)=\"deleteSupplier(supplier.supplierID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getSupplier(supplier.supplierID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","export class Company {\n  companyID: number;\n  companyName: string;\n  phoneNumber: string;\n}\n","import { Location } from './../_model/location';\nimport { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../_services/customer.service';\nimport { Customer } from '../_model/customer';\nimport { Observable } from 'rxjs';\nimport { LocationService } from '../_services/location.service';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html'\n})\nexport class CustomerComponent implements OnInit {\n  customers: Observable<Customer[]>;\n  locations: Observable<Location[]>;\n  customer: Customer = new Customer();\n  location: Location = new Location();\n  router: any;\n  submitted = false;\n  selectedgroup: any;\n  option: string;\n\n  //work in progress\n  myControl = new FormControl();\n  options: Array<Location> = [];\n  filteredOptions: Observable<Location[]>;\n\n  private _filter(value: string): Location[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.cityName.toLowerCase().includes(filterValue));\n  }\n  //\n\n  constructor(private customerService: CustomerService, private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.reloadData();\n    this.dropDownAutoComplete();\n  }\n\n  //work in progress\n  dropDownAutoComplete() {\n    this.locations.subscribe(data => {\n      console.log(data);\n      data.forEach(x => {\n        this.options.push(x);\n      });\n\n      this.filteredOptions = this.myControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => this._filter(value))\n        );\n    },\n      error => console.log(error));\n  }\n\n  reloadData() {\n    this.customers = this.customerService.getCustomerList();\n    this.locations = this.locationService.getLocationList();\n  }\n\n  save() {\n    this.customer.location.cityName = this.option;\n    this.customerService\n      .createCustomer(this.customer).subscribe(data => {\n        console.log(data);\n        this.customer = new Customer();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  changeOption(option) {\n    alert(option);\n  }\n\n  selectedValue(val: any) {\n    console.log(val);\n    this.selectedgroup = val;\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  deleteCustomer(id: number) {\n    this.customerService.deleteCustomer(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getCustomer(id: number) {\n    this.submitted = true;\n    this.customerService.getCustomer(id)\n      .subscribe(data => {\n        console.log(data);\n        this.customer = data;\n      }, error => console.log(error));\n  }\n\n  updateCustomer(customer: Customer) {\n    this.customerService.updateCustomer(customer)\n      .subscribe(data => {\n        console.log(data);\n        this.customer = new Customer();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>Create Customer</h3>\n  <!-- <form (ngSubmit)=\"onSubmit()\"> -->\n  <div class=\"form-group\">\n    <label for=\"name\">Customer</label>\n    <input type=\"text\" class=\"form-control\" id=\"customerName\" required [(ngModel)]=\"customer.customerName\"\n      name=\"customerName\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">City</label>\n    <select name=\"locations\" class=\"form-control\" [(ngModel)]=\"customer.location\">\n      <option disabled selected>Select Location</option>\n      <option *ngFor=\"let location of locations | async\" [ngValue]=\"location\">{{location.cityName}}</option>\n    </select>\n\n<!-- work in progress-->\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width\">\n        <input type=\"text\"\n               placeholder=\"Pick one\"\n               aria-label=\"Number\"\n               matInput\n               [formControl]=\"myControl\"\n               [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.cityName\" (change) = \"changeOption(option)\">\n            {{option.cityName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Phone number</label>\n    <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"customer.phoneNumber\" name=\"phoneNumber\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSubmit()\">Submit</button>\n  <!-- </form> -->\n</div>\n\n\n<div [hidden]=\"!submitted\" style=\"width: 400px;\">\n  <h3>Update Customer</h3>\n  <form (ngSubmit)=\"updateCustomer(customer)\">\n    <div class=\"form-group\">\n      <label for=\"name\">Customer</label>\n      <input type=\"text\" class=\"form-control\" id=\"customerName\" required [(ngModel)]=\"customer.customerName\"\n        name=\"customerName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">City</label>\n      <select name=\"locations\" class=\"form-control\">\n        <option disabled>Select City</option>\n        <option *ngFor=\"let location of locations | async\" [ngValue]=\"location\">{{location.cityName}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Phone number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"customer.phoneNumber\" name=\"phoneNumber\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Customer List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Customer</th>\n          <!-- <th>City</th> -->\n          <th>Phone number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of customers | async\">\n          <td>{{customer.customerName}}</td>\n          <!-- <td>{{customer.location.cityName}}</td> -->\n          <td>{{customer.phoneNumber}}</td>\n          <td><button (click)=\"deleteCustomer(customer.customerID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getCustomer(customer.customerID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseOrderService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/purchaseOrder';\n\n  constructor(private http: HttpClient) { }\n\n  createPurchaseOrder(invoice: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}`, invoice);\n  }\n\n  getPurchaseOrderList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n\n  getPurchaseOrderBalaceBySupplier(supplierID: any): any {\n    return this.http.get(`${this.baseUrl}/supplier/${supplierID}`);\n  }\n\n  getAllSupplierPurchaseOrderBalace(): any {\n    return this.http.get(`${this.baseUrl}/supplier`);\n  }\n\n  getAllSupplierPurchaseOrderBalanceSheet(): any {\n    return this.http.get(`${this.baseUrl}/supplier/balance`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CompanyService } from '../_services/company.service';\nimport { Company } from '../_model/company';\nimport { Location } from '../_model/location';\nimport { Observable } from 'rxjs';\nimport { LocationService } from '../_services/location.service';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html'\n})\nexport class CompanyComponent implements OnInit {\n  companies: Observable<Company[]>;\n  locations: Observable<Location[]>;\n  company: Company = new Company();\n  location: Location = new Location();\n  router: any;\n  submitted = false;\n  selectedgroup: any;\n\n  constructor(private companyService: CompanyService, private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.companies = this.companyService.getCompanyList();\n    this.locations = this.locationService.getLocationList();\n  }\n\n  save() {\n    this.companyService\n      .createCompany(this.company).subscribe(data => {\n        console.log(data);\n        this.company = new Company();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  selectedValue(val: any) {\n    console.log(val);\n    this.selectedgroup = val;\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  deleteCompany(id: number) {\n    this.companyService.deleteCompany(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getCompany(id: number) {\n    this.submitted = true;\n    this.companyService.getCompany(id)\n      .subscribe(data => {\n        console.log(data);\n        this.company = data;\n      }, error => console.log(error));\n  }\n\n  updateCompany(company: Company) {\n    this.companyService.updateCompany(company)\n      .subscribe(data => {\n        console.log(data);\n        this.company = new Company();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>Create Company</h3>\n  <!-- <form (ngSubmit)=\"onSubmit()\"> -->\n  <div class=\"form-group\">\n    <label for=\"name\">Company</label>\n    <input type=\"text\" class=\"form-control\" id=\"companyName\" required [(ngModel)]=\"company.companyName\"\n      name=\"companyName\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Phone number</label>\n    <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"company.phoneNumber\" name=\"phoneNumber\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSubmit()\">Submit</button>\n  <!-- </form> -->\n</div>\n\n\n<div [hidden]=\"!submitted\" style=\"width: 400px;\">\n  <h3>Update Company</h3>\n  <form (ngSubmit)=\"updateCompany(company)\">\n    <div class=\"form-group\">\n      <label for=\"name\">Company</label>\n      <input type=\"text\" class=\"form-control\" id=\"companyName\" required [(ngModel)]=\"company.companyName\"\n        name=\"companyName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Phone number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"company.phoneNumber\" name=\"phoneNumber\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Company List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Company</th>\n          <!-- <th>City</th> -->\n          <th>Phone number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let company of companies | async\">\n          <td>{{company.companyName}}</td>\n          <!-- <td>{{company.location.cityName}}</td> -->\n          <td>{{company.phoneNumber}}</td>\n          <td><button (click)=\"deleteCompany(company.companyID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getCompany(company.companyID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: any, ...args: unknown[]): unknown {\n    return value.sort();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesOrderService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/salesOrder';\n\n  constructor(private http: HttpClient) { }\n\n  createSalesOrder(invoice: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}`, invoice);\n  }\n\n  getSalesOrderList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n\n  getSalesOrderBalanceByCustomer(customerID: any): any {\n    return this.http.get(`${this.baseUrl}/customer/balance/${customerID}`);\n  }\n\n  getAllCustomerSalesOrderBalance(): any {\n    return this.http.get(`${this.baseUrl}/customer/`);\n  }\n\n  getAllCustomerSalesOrderBalanceSheet(): any {\n    return this.http.get(`${this.baseUrl}/customer/balance`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'RK FERTILIZER';\n\n  private roles: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username: string;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit() {\n    // this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    // if (this.isLoggedIn) {\n    //   const user = this.tokenStorageService.getUser();\n    //   this.roles = user.roles;\n\n    //   // this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n    //   // this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n    //   this.username = user.username;\n    // }\n  }\n\n\n}\n","<div id=\"app\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-menu',\n  templateUrl: './mobile-menu.component.html',\n  styleUrls: ['./mobile-menu.component.scss']\n})\nexport class MobileMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg bg-primary navbar-dark\">\n  <a class=\"navbar-brand\" href=\"#\">RK-FERTILIZER</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/dashboard\">\n          DASHBOARDS </a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/products\"  routerLinkActive=\"active\">PRODUCTS</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/salesOrder\"  routerLinkActive=\"active\">SALES</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/add\">ADD PRODUCT</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/addCategory\"> ADD CATEGORY</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/supplier\"> SUPPLIER</a>\n        </li>\n    </ul>\n\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/customer';\n\n  constructor(private http: HttpClient) { }\n\n  getCustomer(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createCustomer(customer: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, customer);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateCustomer(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteCustomer(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getCustomerList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { Category } from './category';\n\nexport class Product {\n  productID: number;\n  productName: string;\n  category: Category;\n  price: number;\n  currentPrice: number;\n  qty: number;\n  active: boolean;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  isVisible = false;\n  urlPath = [];\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n   this.getCurrentPage();\n  }\n\n  getCurrentPage() {\n    const path = this.router.url.split('/');\n    if (path.length === 2 && path[1] === 'dashboard') {\n      this.isVisible = true;\n    }\n    path.forEach((e) => {\n      if (e !== '') {\n        this.urlPath.push(e);\n      }\n    });\n  }\n}\n","<div class=\"app-container\">\n\n\t<app-action-bar class=\"d-none d-sm-block\">\t</app-action-bar>\n\n\t<div class=\"main-container flex-fill\">\n\t\t<app-navigation-bar class=\"d-none d-sm-block\"></app-navigation-bar>\n     <!-- only Mobile and Tab View -->\n  <app-mobile-menu class=\"d-block d-sm-none\"></app-mobile-menu>\n\t\t<div class=\"container-fluid mt-2\">\n      <div class=\"row\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\" *ngIf=\"urlPath.length < 2; else visibleCrum\">\n            <li  class=\"breadcrumb-item active\" >\n              <span >{{urlPath[0] | titlecase}}</span>\n           </li>\n          </ol>\n          <ng-template #visibleCrum>\n            <ol class=\"breadcrumb\">\n              <li class=\"breadcrumb-item\"  *ngFor=\"let item of urlPath\" >\n                {{urlPath.pop()}}  {{item}}\n                <!-- <a [routerLink]=\"[item]\" *ngIf=\"urlPath.pop() != item; else activeMenu\" >{{ item | titlecase}}</a>\n                <ng-template #activeMenu><span>{{ item | titlecase }}</span></ng-template> -->\n             </li>\n           </ol>\n          </ng-template>\n\n        </nav>\n      </div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-12\">\n\n            <div class=\"row\" *ngIf=\"isVisible\">\n\n            <div class=\"col-md-3\">\n              <div class=\"card-counter primary\">\n                <i class=\"fa fa-code-fork\"></i>\n                <span class=\"count-numbers\">12</span>\n                <span class=\"count-name\">Flowz</span>\n              </div>\n            </div>\n\n            <div class=\"col-md-3\">\n              <div class=\"card-counter danger\">\n                <i class=\"fa fa-ticket\"></i>\n                <span class=\"count-numbers\">599</span>\n                <span class=\"count-name\">Instances</span>\n              </div>\n            </div>\n\n            <div class=\"col-md-3\">\n              <div class=\"card-counter success\">\n                <i class=\"fa fa-database\"></i>\n                <span class=\"count-numbers\">6875</span>\n                <span class=\"count-name\">Data</span>\n              </div>\n            </div>\n\n            <div class=\"col-md-3\">\n              <div class=\"card-counter info\">\n                <i class=\"fa fa-users\"></i>\n                <span class=\"count-numbers\">35</span>\n                <span class=\"count-name\">Users</span>\n              </div>\n            </div>\n          </div>\n\t\t\t\t\t<router-outlet></router-outlet>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import { Location } from './location';\n\nexport class Customer {\n  customerID: number;\n  customerName: string;\n  location: Location;\n  phoneNumber: string;\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateProductComponent } from './create-product/create-product.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CreateCategoryComponent } from './create-category/create-category.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { SharedModule } from \"./menu/shared.module\";\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { SupplierComponent } from './supplier/supplier.component';\nimport { LocationComponent } from './location/location.component';\nimport { CompanyComponent } from './company/company.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { BalanceSheetComponent } from './balance-sheet/balance-sheet.component';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { SortPipe } from './pipe/sort.pipe';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MobileMenuComponent } from './menu/mobile-menu/mobile-menu.component';\nimport {TableModule} from 'primeng/table';\nimport { ActionBarComponent } from './menu/action-bar/action-bar.component';\nimport { ActionBarItemComponent } from './menu/action-bar-item/action-bar-item.component';\nimport { NavigationBarComponent } from './menu/navigation-bar/navigation-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateProductComponent,\n    ProductDetailsComponent,\n    ProductListComponent,\n    CreateCategoryComponent,\n    PurchaseOrderComponent,\n    CustomerComponent,\n    SupplierComponent,\n    LocationComponent,\n    CompanyComponent,\n    SalesOrderComponent,\n    BalanceSheetComponent,\n    ActionBarComponent,\n    ActionBarItemComponent,\n    NavigationBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    SortPipe,\n    NotfoundComponent,\n    MobileMenuComponent\n  ],\n  imports: [\n    TableModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    NgbModule,\n    NgxPaginationModule,\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../_services/category.service';\nimport { Category } from '../_model/category';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-create-category',\n  templateUrl: './create-category.component.html'\n})\nexport class CreateCategoryComponent implements OnInit {\n  categories: Observable<Category[]>;\n  id: number;\n  category: Category = new Category();\n  router: any;\n  submitted = false;\n\n  constructor(private categoryService: CategoryService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.categories = this.categoryService.getCategoryList();\n  }\n\n  newCategory(): void {\n    this.category = new Category();\n  }\n\n  save() {\n    this.categoryService\n      .createCategory(this.category).subscribe(data => {\n        console.log(data);\n        this.category = new Category();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/Categories']);\n  }\n\n  deleteCategory(id: number) {\n    this.categoryService.deleteCategory(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getCategory(id: number) {\n    this.submitted = true;\n    this.categoryService.getCategory(id)\n      .subscribe(data => {\n        console.log(data);\n        this.category = data;\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  updateCategory(category: Category) {\n    this.categoryService.updateCategory(category)\n      .subscribe(data => {\n        console.log(data);\n        this.category = new Category();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>CREATE CATEGORY</h3>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <input type=\"text\" class=\"form-control\" id=\"categoryName\" required [(ngModel)]=\"category.categoryName\"\n        name=\"categoryName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Description</label>\n      <input type=\"text\" class=\"form-control\" id=\"categoryDesc\" required [(ngModel)]=\"category.categoryDesc\"\n        name=\"category\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\" style=\"width: 400px;\">\n  <h3>UPDATE CATEGORY</h3>\n  <form (ngSubmit)=\"updateCategory(category)\">\n    <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <input type=\"text\" class=\"form-control\" id=\"categoryName\" required [(ngModel)]=\"category.categoryName\"\n        name=\"categoryName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Description</label>\n      <input type=\"text\" class=\"form-control\" id=\"categoryDesc\" required [(ngModel)]=\"category.categoryDesc\"\n        name=\"category\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>category List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Category</th>\n          <th>Decsription</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let category of categories | async\">\n          <td>{{category.categoryName}}</td>\n          <td>{{category.categoryDesc}}</td>\n          <td><button (click)=\"deleteCategory(category.categoryID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getCategory(category.categoryID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { SalesOrderDetail } from './../_model/sales-order-detail';\nimport { SalesOrder } from './../_model/sales-order';\nimport { Product } from './../_model/product';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductService } from '../_services/product.service';\nimport { SalesOrderService } from '../_services/sales-order.service';\nimport { Customer } from '../_model/customer';\nimport { CustomerService } from '../_services/customer.service';\n\n@Component({\n  selector: 'app-sales-order',\n  templateUrl: './sales-order.component.html'\n})\nexport class SalesOrderComponent implements OnInit {\n  products: Observable<Product[]>;\n  product: Product = new Product();\n  salesOrder: SalesOrder = new SalesOrder();\n  salesOrderDetail: SalesOrderDetail = new SalesOrderDetail();\n  customers: Observable<Customer[]>;\n\n  rows: Array<SalesOrderDetail> = [];\n  currentBalance = 0;\n  previousBalance = 0;\n  totalAmount = 0;\n  totalBalance = 0;\n\n  constructor(private productService: ProductService,\n    private customerService: CustomerService,\n    private salesOrderService: SalesOrderService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.products = this.productService.getProductsList();\n    this.customers = this.customerService.getCustomerList();\n    this.salesOrder.amountPaid = 0;\n  }\n\n  save() {\n    this.salesOrder.currentBalance = this.currentBalance;\n    this.salesOrder.salesOrderDetail = this.rows;\n    this.salesOrder.totalPrice = this.totalAmount;\n\n    this.salesOrderService\n      .createSalesOrder(this.salesOrder).subscribe(data => {\n        console.log(data);\n        this.refreshAfterSave();\n        this.reloadData();\n      },\n        error => {\n          console.log(error);\n          alert(error.error.errorMessage);\n        });\n  }\n\n  refreshAfterSave() {\n    this.salesOrder = new SalesOrder();\n    this.product = new Product();\n    this.salesOrder.amountPaid = 0;\n    this.previousBalance = 0;\n    this.currentBalance = 0;\n    this.totalBalance = 0;\n    this.rows = [];\n  }\n\n  getTotalPrice() {\n    let total = 0;\n    this.rows.forEach(obj => {\n      total += Number(obj.price);\n    });\n    return total;\n  }\n\n  getTotalQty() {\n    let total = 0;\n    this.rows.forEach(obj => {\n      total += Number(obj.qtyOrdered);\n    });\n    return total;\n  }\n\n  totalAmountToPaid() {\n    let totalAmount = 0;\n    this.rows.forEach(obj => {\n      totalAmount += Number(obj.qtyOrdered) * Number(obj.price);\n    });\n    this.totalAmount = totalAmount;\n    return totalAmount;\n  }\n\n  removeCart(index: number) {\n    if (this.rows.length === 1) {\n      alert('Atleast one product should be added');\n      return;\n    }\n    const amountBalance1 = this.totalAmount - (this.rows[index].price * this.rows[index].qtyOrdered);\n    this.currentBalance = amountBalance1 - Number(this.salesOrder.amountPaid);\n    this.totalBalance = this.previousBalance + this.currentBalance;\n    this.rows.splice(index, 1);\n    this.salesOrder.amountPaid = this.rows.length === 0 ? 0 : this.salesOrder.amountPaid;\n  }\n\n  selectedProduct(prod: Product) {\n    this.rows.push({\n      product: prod,\n      qtyOrdered: 0,\n      price: prod.currentPrice === 0 ? prod.price + 15 : prod.currentPrice\n    });\n  }\n\n  customerBalanceData(customerID: any) {\n    this.salesOrderService.getSalesOrderBalanceByCustomer(customerID).subscribe((data: number) => {\n      console.log(data);\n      this.previousBalance = data;\n      this.changeInQtyOrPrice();\n    }, (error: any) => console.log(error));\n  }\n\n  amountToBePaid(amountPaid: number) {\n    this.currentBalance = this.totalAmount - amountPaid;\n    this.totalBalance = this.previousBalance + this.currentBalance;\n  }\n\n  changeInQtyOrPrice() {\n    this.currentBalance = this.totalAmount - this.salesOrder.amountPaid;\n    this.totalBalance = this.previousBalance + this.currentBalance;\n  }\n}\n","<div style=\"width: 400px;\">\n  <div class=\"form-group\">\n    <label for=\"name\">Customer</label>\n    <select name=\"customer\" class=\"form-control\" required [(ngModel)]=\"salesOrder.customer\"\n      (change)=\"customerBalanceData(salesOrder.customer.customerID)\">\n      <option disabled>Select Customerr</option>\n      <option [ngValue]=\"customer\" *ngFor=\"let customer of customers | async\">{{customer.customerName}}</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"name\">Product</label>\n    <select name=\"products\" class=\"form-control\" [(ngModel)]=\"product\" (change)=\"selectedProduct(product)\">\n      <option disabled>Select Product</option>\n      <option [ngValue]=\"product\" *ngFor=\"let product of products | async\">{{product.productName}}</option>\n    </select>\n  </div>\n</div>\n<div>\n  <table class=\"table table-hover table table-bordered table-striped\">\n    <thead>\n      <tr>\n        <th>S.No</th>\n        <th>Remove</th>\n        <th>Product</th>\n        <th>Price</th>\n        <th>Qty</th>\n        <th>Total Amout</th>\n      </tr>\n    </thead>\n    <tr *ngFor=\"let cart of rows; let i = index\">\n      <td>{{i+1}}</td>\n      <td><button (click)=\"removeCart(i)\">X</button></td>\n      <td>\n        <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.product.productName\" disabled>\n      </td>\n      <td><input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.price\" (change)=\"changeInQtyOrPrice()\"></td>\n      <td>\n        <div>\n          <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.qtyOrdered\" placeholder=\"{{cart.product.qty}}\"\n            (change)=\"changeInQtyOrPrice()\">\n        </div>\n      </td>\n      <td>{{cart.price*cart.qtyOrdered}}</td>\n    </tr>\n    <tr>\n      <td>Total:</td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>{{getTotalQty()}}</td>\n      <td>{{totalAmountToPaid().toLocaleString('en-IN')}}</td>\n    </tr>\n  </table>\n</div>\n\n<div style=\"text-align:right;\">\n  <div class=\"form-group\">\n    <label for=\"name\">Amount Paid</label>\n    <input type=\"text\" id=\"price\" required [(ngModel)]=\"salesOrder.amountPaid\"\n      (input)=\"amountToBePaid(salesOrder.amountPaid)\" name=\"price\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Current Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"currentBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Previous Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"previousBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Total Pay Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"totalBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"save()\">Submit</button>\n</div>\n","export class Category {\n  categoryID: number;\n  categoryName: string;\n  categoryDesc: string;\n}\n","export class HttpClientHelper {\n  //static baseURL: string = 'http://ec2-18-222-37-157.us-east-2.compute.amazonaws.com:8080';\n\n  //static baseURL: string = 'http://localhost:8080/indian-kisan-care-backend';\n\n  static baseURL: string = 'http://ec2-3-138-201-112.us-east-2.compute.amazonaws.com:8080/indian-kisan-care-backend';\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.scss']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"error-wrapper\">\n      <div class=\"man-icon\"></div>\n      <h3 class=\"title\">404</h3>\n      <p class=\"info\">Oh! Page not found</p>\n      <button type=\"button\" routerLink=\"/dashboard\" class=\"home-btn\">HOME</button>\n  </div>\n</div>\n","import { Company } from './company';\nimport { Location } from './location';\n\nexport class Supplier {\n  supplierID: number;\n  supplierName: string;\n  company: Company;\n  location: Location;\n  phoneNumber: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/company';\n\n  constructor(private http: HttpClient) { }\n\n  getCompany(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createCompany(company: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, company);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateCompany(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteCompany(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getCompanyList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-action-bar',\n  templateUrl: './action-bar.component.html',\n  styleUrls: ['./action-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionBarComponent {\n\n  expanded = false;\n}\n","<div class=\"action-bar\" [class.action-bar-expanded]=\"expanded\">\n\n  <!-- Menu Button -->\n  <!-- <button class=\"action-bar-item shadow-sm\" (click)=\"expanded = !expanded\">\n\t\t<span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\n    <span class=\"action-bar-item-text\">Menu</span>\n\t</button> -->\n\n  <app-action-bar-item [shadow]=\"true\" (click)=\"expanded = !expanded\">\n    <span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\n    <span class=\"action-bar-item-text\">Menu</span>\n  </app-action-bar-item>\n\n  <!-- A vertical navbar -->\n  <nav class=\"navbar navbar-light\">\n\n    <!-- Links -->\n    <ul class=\"navbar-nav nav\">\n      <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\">   <i class=\"fa fa-home \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">DASHBOARDS</span> </a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/products\"  routerLinkActive=\"active\"><i class=\"fa fa-list \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">PRODUCTS</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/salesOrder\"  routerLinkActive=\"active\"><i class=\"fa fa-suitcase \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">SALES</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/add\"><i class=\"fa fa-plus \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">ADD PRODUCT</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/addCategory\"><i class=\"fa fa-list-alt \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">ADD CATEGORY</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/supplier\"><i class=\"fa fa-user \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">SUPPLIER</span></a>\n      </li>\n    </ul>\n\n  </nav>\n</div>\n","import { Supplier } from './supplier';\n\nexport class SupplierBalanceSheet {\n  supplier: Supplier;\n\tcurrentBalance: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/product';\n\n  constructor(private http: HttpClient) { }\n\n  getProduct(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createProduct(product: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, product);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createProductWithCategory(product: Object, id: number): Observable<Object> {\n    return this.http.post(`${this.baseUrl}/${id}`, product);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateProduct(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteProduct(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getProductsList(): Observable<any> {\n    return this.http.get(this.baseUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (localStorage.getItem('accessToken')) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { BalanceSheetComponent } from './balance-sheet/balance-sheet.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { CreateProductComponent } from './create-product/create-product.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\n\nimport { CreateCategoryComponent } from './create-category/create-category.component';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { LocationComponent } from './location/location.component';\nimport { CompanyComponent } from './company/company.component';\nimport { SupplierComponent } from './supplier/supplier.component';\nimport { CustomerComponent } from './customer/customer.component';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { AuthGuard } from './auth.guard';\n\nexport const routes: Routes = [\n  { path: '',   redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login',  component: LoginComponent,  },\n  { path: 'register', component: RegisterComponent },\n  { path: '404', component: NotfoundComponent },\n  {path: 'dashboard', pathMatch: 'prefix',  canActivate: [ AuthGuard ],\n    component: DashboardComponent, children : [\n      { path: 'products', component: ProductListComponent, canActivate: [ AuthGuard] },\n      { path: 'add', component: CreateProductComponent },\n      { path: 'details/:id', component: ProductDetailsComponent },\n      { path: 'addCategory', component: CreateCategoryComponent },\n      { path: 'purchaseOrder', component: PurchaseOrderComponent },\n      { path: 'salesOrder', component: SalesOrderComponent },\n      { path: 'location', component: LocationComponent },\n      { path: 'company', component: CompanyComponent },\n      { path: 'customer', component: CustomerComponent },\n      { path: 'supplier', component: SupplierComponent },\n      { path: 'balance-sheet', component: BalanceSheetComponent }]\n    },\n  { path: '**', redirectTo: '404', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Product } from './product';\n\nexport class PurchaseOrderDetail {\n    product: Product;\n    qtyOrdered: number;\n    price: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit() {\n    this.authService.login(this.form).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        localStorage.setItem('accessToken', data.accessToken);\n        this.tokenStorage.saveUser(data);\n        this.roles = this.tokenStorage.getUser().roles;\n        this.router.navigate(['dashboard']);\n      },\n      err => {\n        this.errorMessage = err.error.message;\n      }\n    );\n  }\n\n\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          #username=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && username.invalid\"\n        >\n          Username is required!\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && password.invalid\"\n        >\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\" >\n          Login\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted\"\n        >\n          Login failed: {{ errorMessage }}\n        </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LocationService } from '../_services/location.service';\nimport { Location } from '../_model/location';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html'\n})\nexport class LocationComponent implements OnInit {\n  locations: Observable<Location[]>;\n  id: number;\n  location: Location = new Location();\n  router: any;\n  submitted = false;\n\n  constructor(private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.locations = this.locationService.getLocationList();\n  }\n\n  newLocation(): void {\n    this.location = new Location();\n  }\n\n  save() {\n    this.locationService\n      .createLocation(this.location).subscribe(data => {\n        console.log(data);\n        this.location = new Location();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/locations']);\n  }\n\n  deleteLocation(id: number) {\n    this.locationService.deleteLocation(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getLocation(id: number) {\n    this.submitted = true;\n    this.locationService.getLocation(id)\n      .subscribe(data => {\n        console.log(data);\n        this.location = data;\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  updateLocation(location: Location) {\n    this.locationService.updateLocation(location)\n      .subscribe(data => {\n        console.log(data);\n        this.location = new Location();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>Create Location</h3>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">City</label>\n      <input type=\"text\" class=\"form-control\" id=\"city\" required [(ngModel)]=\"location.cityName\" name=\"city\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h3>Update Location</h3>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">City</label>\n      <input type=\"text\" class=\"form-control\" id=\"city\" required [(ngModel)]=\"location.cityName\" name=\"city\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Location List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>City</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let location of locations | async\">\n          <td>{{location.cityName}}</td>\n          <td><button (click)=\"deleteLocation(location.locationID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getLocation(location.locationID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Product } from '../_model/product';\nimport { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../_services/product.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html'\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  id: number;\n  product: Product;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private productService: ProductService) { }\n\n  ngOnInit() {\n    this.product = new Product();\n\n    this.id = this.route.snapshot.params.id;\n\n    this.productService.getProduct(this.id)\n      .subscribe(data => {\n        console.log(data);\n        this.product = data;\n      }, error => console.log(error));\n  }\n\n  list() {\n    this.router.navigate(['products']);\n  }\n}\n","<h2>Product Details</h2>\n\n<hr />\n<div *ngIf=\"product\">\n  <div>\n    <label><b>Product: </b></label> {{product.productName}}\n  </div>\n  <div>\n    <label><b>Category: </b></label> {{product.category.categoryName}}\n  </div>\n  <div>\n    <label><b>Price: </b></label> {{product.price}}\n  </div>\n</div>\n\n<br>\n<br>\n<button (click)=\"list()\" class=\"btn btn-primary\">Back to product List</button><br>\n","export class Location {\n  locationID: number;\n  cityName: string;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}