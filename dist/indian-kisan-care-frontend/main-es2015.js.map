{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_model/purchaseOrder.ts","./src/app/menu/navigation-bar/navigation-bar.component.ts","./src/app/menu/navigation-bar/navigation-bar.component.html","./src/app/_services/auth.service.ts","./src/app/purchase-order/purchase-order.component.ts","./src/app/purchase-order/purchase-order.component.html","./src/app/balance-sheet/balance-sheet.component.ts","./src/app/balance-sheet/balance-sheet.component.html","./src/app/_services/supplier.service.ts","./src/app/_model/sales-order.ts","./src/app/_services/category.service.ts","./src/environments/environment.ts","./src/app/_services/location.service.ts","./src/app/_model/customer-balance-sheet.ts","./src/app/_model/sales-order-detail.ts","./src/app/create-product/create-product.component.ts","./src/app/create-product/create-product.component.html","./src/app/_services/token-storage.service.ts","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/menu/action-bar-item/action-bar-item.component.ts","./src/app/menu/action-bar-item/action-bar-item.component.html","./src/app/supplier/supplier.component.ts","./src/app/supplier/supplier.component.html","./src/app/_model/company.ts","./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/_services/purchase-order.service.ts","./src/app/company/company.component.ts","./src/app/company/company.component.html","./src/app/pipe/sort.pipe.ts","./src/app/_services/sales-order.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/mobile-menu/mobile-menu.component.ts","./src/app/menu/mobile-menu/mobile-menu.component.html","./src/app/_services/customer.service.ts","./src/app/_model/product.ts","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/_model/customer.ts","./src/app/app.module.ts","./src/app/create-category/create-category.component.ts","./src/app/create-category/create-category.component.html","./src/app/sales-order/sales-order.component.ts","./src/app/sales-order/sales-order.component.html","./src/app/_model/category.ts","./src/app/_model/http-client-helper.ts","./src/app/pages/notfound/notfound.component.ts","./src/app/pages/notfound/notfound.component.html","./src/app/_model/supplier.ts","./src/app/_services/company.service.ts","./src/app/menu/action-bar/action-bar.component.ts","./src/app/menu/action-bar/action-bar.component.html","./src/app/_model/supplier-balance-sheet.ts","./src/app/_services/product.service.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/_model/purchaseOrderDetail.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/location/location.component.ts","./src/app/location/location.component.html","./src/app/product-details/product-details.component.ts","./src/app/product-details/product-details.component.html","./src/app/_model/location.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;IC2BxC,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IACN,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IAPR,0EACE;IAAA,2HAAgE;IAChE,2HAEM;IACN,2HAEM;IACR,4DAAM;;;;IAPE,0DAA8B;IAA9B,qFAA8B;IAC9B,0DAA+B;IAA/B,sFAA+B;IAG/B,0DAA+B;IAA/B,sFAA+B;;;IAiBrC,sEAAmC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC1D,sEACE;IAAA,gGACF;IAAA,4DAAM;;;IAJR,0EACE;IAAA,4HAA0D;IAC1D,4HAEM;IACR,4DAAM;;;;IAJE,0DAA2B;IAA3B,qFAA2B;IAC3B,0DAAwB;IAAxB,kFAAwB;;;IAiB9B,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IAJR,0EACE;IAAA,4HAAgE;IAChE,4HAEM;IACR,4DAAM;;;;IAJE,0DAA8B;IAA9B,qFAA8B;IAC9B,0DAA+B;IAA/B,sFAA+B;;;IASzC,0EACE;IAAA,0EAAc;IAAA,gEAAM;IAAA,uDACtB;IAAA,4DAAM;;;IADgB,0DACtB;IADsB,8FACtB;;;;IAvEF,6EAOE;IAJA,wZAAuC;IAIvC,yEACE;IAAA,2EAAsB;IAAA,mEAAQ;IAAA,4DAAQ;IACtC,+EAUA;IANE,yVAA2B;IAJ7B,4DAUA;IAAA,qHAQM;IACR,4DAAM;IACN,yEACE;IAAA,4EAAmB;IAAA,iEAAK;IAAA,4DAAQ;IAChC,iFASA;IALE,uVAAwB;IAJ1B,4DASA;IAAA,uHAKM;IACR,4DAAM;IACN,0EACE;IAAA,6EAAsB;IAAA,oEAAQ;IAAA,4DAAQ;IACtC,iFASA;IALE,0VAA2B;IAJ7B,4DASA;IAAA,uHAKM;IACR,4DAAM;IACN,0EACE;IAAA,8EAA0C;IAAA,mEAAO;IAAA,4DAAS;IAC5D,4DAAM;IAEN,uHAEM;IACR,4DAAO;;;;;;;IA3DD,0DAA2B;IAA3B,yFAA2B;IAMF,0DAAqC;IAArC,8FAAqC;IAgB9D,0DAAwB;IAAxB,sFAAwB;IAKC,0DAAkC;IAAlC,8FAAkC;IAa3D,0DAA2B;IAA3B,yFAA2B;IAKF,0DAAqC;IAArC,8FAAqC;IAWhC,0DAAmC;IAAnC,wGAAmC;;;IAKvE,0EACE;IAAA,6FACF;IAAA,4DAAM;;AD3EH,MAAM,iBAAiB;IAM5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAL5C,SAAI,GAAQ,EAAE,CAAC;QACf,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,EAAE,CAAC;IAE8B,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC5C,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;;kFAvBU,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEACE;QAAA,yEACE;QAAA,oEAKA;QAAA,gHAwEO;QAEP,6GAEM;QACR,4DAAM;QACR,4DAAM;;QA7EC,0DAAmB;QAAnB,mFAAmB;QAyEY,0DAAkB;QAAlB,kFAAkB;;6FDzE3C,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEJD;AAAA;AAAO,MAAM,aAAa;CASzB;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,sBAAsB;IACjC,YAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAElE,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;;4FANU,sBAAsB;sGAAtB,sBAAsB;QCTnC,yEACC;QAAA,yEACC;QAAA,0EAA2B;QAAA,yEAAc;QAAA,4DAAO;QAChD,yEACC;QAAA,0EAA4E;QAAtE,4IAAS,YAAQ,IAAC;QAAoD,iEAAM;QAAA,4DAAO;QAC1F,4DAAM;QACP,4DAAM;QACP,4DAAM;;6FDEO,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AAEC;;;AAEhE,MAAM,QAAQ,GAAG,0EAAgB,CAAC,OAAO,GAAC,QAAQ,CAAC;AAEnD,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAKK,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,KAAK,CAAC,WAAW;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACzC,QAAQ,EAAE,WAAW,CAAC,QAAQ;YAC9B,QAAQ,EAAE,WAAW,CAAC,QAAQ;SAC/B,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE;YACzC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,EAAE,WAAW,CAAC,CAAC;IAClB,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;;sEArBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACI;AAGM;AAEY;;;;;;;;ICA9D,6EAAwE;IAAA,uDAAyB;IAAA,4DAAS;;;IAAlG,gFAAoB;IAA4C,0DAAyB;IAAzB,yFAAyB;;;IAQjG,6EAAqE;IAAA,uDAAuB;IAAA,4DAAS;;;IAA7F,+EAAmB;IAA0C,0DAAuB;IAAvB,uFAAuB;;;;IAgB9F,qEACE;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,6EAAgC;IAAxB,uVAAuB;IAAC,4DAAC;IAAA,4DAAS;IAAA,4DAAK;IACnD,qEACE;IAAA,4EACF;IAD0C,gPAAsC;IAA9E,4DACF;IAAA,4DAAK;IACL,qEAAI;IAAA,4EAAiG;IAAzD,kOAAwB;IAAhE,4DAAiG;IAAA,4DAAK;IAC1G,sEACE;IAAA,uEACE;IAAA,6EAEF;IAF0C,wOAA6B;IAArE,4DAEF;IAAA,4DAAM;IACR,4DAAK;IACL,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IACzC,4DAAK;;;;IAbC,0DAAO;IAAP,yEAAO;IAG+B,0DAAsC;IAAtC,gGAAsC;IAEpC,0DAAwB;IAAxB,kFAAwB;IAGM,0DAAkC;IAAlC,uGAAkC;IAAhE,uFAA6B;IAIrE,0DAA8B;IAA9B,mGAA8B;;AD7BjC,MAAM,sBAAsB;IAajC,YAAoB,cAA8B,EACxC,eAAgC,EAChC,oBAA0C;QAFhC,mBAAc,GAAd,cAAc,CAAgB;QACxC,oBAAe,GAAf,eAAe,CAAiB;QAChC,yBAAoB,GAApB,oBAAoB,CAAsB;QAbpD,YAAO,GAAY,IAAI,sDAAO,EAAE,CAAC;QACjC,kBAAa,GAAkB,IAAI,kEAAa,EAAE,CAAC;QACnD,wBAAmB,GAAwB,IAAI,8EAAmB,EAAE,CAAC;QAGrE,SAAI,GAA+B,EAAE,CAAC;QACtC,mBAAc,GAAG,CAAC,CAAC;QACnB,oBAAe,GAAG,CAAC,CAAC;QACpB,gBAAW,GAAG,CAAC,CAAC;QAChB,iBAAY,GAAG,CAAC,CAAC;IAIuC,CAAC;IAEzD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAEjD,IAAI,CAAC,oBAAoB;aACtB,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACxD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,GAAG,IAAI,kEAAa,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,aAAa;QACX,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,WAAW;QACT,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,iBAAiB;QACf,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,WAAW,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC;QACjG,IAAI,CAAC,cAAc,GAAG,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC7E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;IAC7F,CAAC;IAED,eAAe,CAAC,IAAa;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,CAAC;YACb,KAAK,EAAE,CAAC;SACT,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,UAAe;QACjC,IAAI,CAAC,oBAAoB,CAAC,gCAAgC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YAChG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,cAAc,CAAC,UAAkB;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;IACjE,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;QACvE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;IACjE,CAAC;;4FA3GU,sBAAsB;sGAAtB,sBAAsB;QCdnC,yEACE;QAAA,yEACE;QAAA,2EAAkB;QAAA,mEAAQ;QAAA,4DAAQ;QAClC,4EAEE;QAFoD,2MAAoC,wFAC9E,8DAAsD,IADwB;QAExF,4EAAiB;QAAA,2EAAgB;QAAA,4DAAS;QAC1C,wHAA0G;;QAC5G,4DAAS;QACX,4DAAM;QAEN,yEACE;QAAA,4EAAkB;QAAA,mEAAO;QAAA,4DAAQ;QACjC,6EACE;QAD2C,6LAAqB,yFAAW,gCAAwB,IAAnC;QAChE,6EAAiB;QAAA,0EAAc;QAAA,4DAAS;QACxC,0HAAqG;;QACvG,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,uEACE;QAAA,4EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACtB,4DAAK;QACP,4DAAQ;QACR,mHAcK;QACL,sEACE;QAAA,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,sEAAI;QAAA,wDAAiB;QAAA,4DAAK;QAC1B,sEAAI;QAAA,wDAA+C;QAAA,4DAAK;QAC1D,4DAAK;QACP,4DAAQ;QACV,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,4EAAkB;QAAA,uEAAW;QAAA,4DAAQ;QACrC,6EAEF;QAFyC,6MAAsC,sFAClE,gDAAwC,IAD0B;QAA7E,4DAEF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,2EAAe;QAAA,4DAAQ;QACzC,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,4EAAgB;QAAA,4DAAQ;QAC1C,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,6EAAiB;QAAA,4DAAQ;QAC3C,wEACF;QAAA,4DAAM;QACN,8EAA+D;QAAjB,+IAAS,UAAM,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAChF,4DAAM;;QAxEoD,0DAAoC;QAApC,+FAAoC;QAGtC,0DAAoB;QAApB,oJAAoB;QAM3B,0DAAqB;QAArB,gFAAqB;QAEhB,0DAAmB;QAAnB,oJAAmB;QAgBhD,2DAAS;QAAT,6EAAS;QAoBxB,0DAAiB;QAAjB,kFAAiB;QACjB,0DAA+C;QAA/C,gHAA+C;QAQd,0DAAsC;QAAtC,iGAAsC;QAK/C,0DAAgD;QAAhD,6GAAgD;QAIhD,0DAAiD;QAAjD,8GAAiD;QAIjD,0DAA8C;QAA9C,2GAA8C;;6FD1DnE,sBAAsB;cAJlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;aAC/C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACsB;AAC1B;AAC0B;AAC1B;AACA;;;;;;ICMtC,qEACE;IAAA,qEAAI;IAAA,uDAA8C;IAAA,4DAAK;IACvD,qEAAI;IAAA,uDAAmD;IAAA,4DAAK;IAC5D,qEAAI;IAAA,uDAAuC;IAAA,4DAAK;IAClD,4DAAK;;;IAHC,0DAA8C;IAA9C,8GAA8C;IAC9C,0DAAmD;IAAnD,mHAAmD;IACnD,0DAAuC;IAAvC,uGAAuC;;;IAqB7C,qEACE;IAAA,qEAAI;IAAA,uDAA8C;IAAA,4DAAK;IACvD,qEAAI;IAAA,uDAAqD;IAAA,4DAAK;IAC9D,qEAAI;IAAA,uDAAuC;IAAA,4DAAK;IAClD,4DAAK;;;IAHC,0DAA8C;IAA9C,8GAA8C;IAC9C,0DAAqD;IAArD,qHAAqD;IACrD,0DAAuC;IAAvC,uGAAuC;;AD1B9C,MAAM,qBAAqB;IAUhC,YAAoB,iBAAoC,EAAU,oBAA0C;QAAxF,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAR5G,yBAAoB,GAAG,IAAI,kFAAoB,EAAE,CAAC;QAClD,aAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;QAC1B,aAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;QAG1B,yBAAoB,GAAG,IAAI,kFAAoB,EAAE,CAAC;QAClD,aAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;IAEsF,CAAC;IAEjH,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,iBAAiB,CAAC,oCAAoC,EAAE,CAAC;QAC3F,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,uCAAuC,EAAE,CAAC;IACnG,CAAC;;0FAnBU,qBAAqB;qGAArB,qBAAqB;QCflC,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACxB,4DAAM;QACN,yEACE;QAAA,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAClB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,iHAIK;;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACN,iEACA;QAAA,0EACE;QAAA,0EACE;QAAA,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACxB,4DAAM;QACN,0EACE;QAAA,4EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAClB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,iHAIK;;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;;QAhCuC,2DAAgC;QAAhC,gKAAgC;QAwBhC,2DAAgC;QAAhC,gKAAgC;;6FDvBhE,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGqB;;;AAKzD,MAAM,eAAe;IAI1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAC,WAAW,CAAC;IAEf,CAAC;IAEzC,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,QAAgB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,KAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;;8EA1BU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAO,MAAM,UAAU;CAStB;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGqB;;;AAKzD,MAAM,eAAe;IAI1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAC,WAAW,CAAC;IAEf,CAAC;IAEzC,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,QAAgB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,KAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;;8EA1BU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGqB;;;AAKzD,MAAM,eAAe;IAI1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAC,WAAW,CAAC;IAEf,CAAC;IAEzC,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,cAAc,CAAC,QAAa;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;;8EAxBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAO,MAAM,oBAAoB;CAGhC;;;;;;;;;;;;;ACJD;AAAA;AAAO,MAAM,gBAAgB;CAI5B;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAEM;;;;;;;;ICiB1C,6EAAyE;IAAA,uDAAyB;IAAA,4DAAS;;;IAAnG,gFAAoB;IAA6C,0DAAyB;IAAzB,yFAAyB;;ADRnG,MAAM,sBAAsB;IAMjC,YAAoB,cAA8B,EAC9B,eAAgC,EAChC,MAAc;QAFd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QALlC,YAAO,GAAY,IAAI,sDAAO,EAAE,CAAC;QACjC,cAAS,GAAG,KAAK,CAAC;IAIoB,CAAC;IAGvC,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;IAC3D,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;IAC/B,CAAC;IAED,IAAI;QACF,IAAI,CAAC,cAAc;aAChB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QACzB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;;4FA1CU,sBAAsB;sGAAtB,sBAAsB;QCbnC,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,yEACE;QAAA,0EACE;QADI,kJAAY,cAAU,IAAC;QAC3B,yEACE;QAAA,2EAAkB;QAAA,kEAAO;QAAA,4DAAQ;QACjC,2EAEF;QAFoE,uMAAiC;QAAnG,4DAEF;QAAA,4DAAM;QAUN,yEACE;QAAA,2EAAkB;QAAA,oEAAQ;QAAA,4DAAQ;QAClC,6EACE;QADsD,sMAA+B;QACrF,6EAAiB;QAAA,2EAAe;QAAA,4DAAS;QACzC,0HAA2G;;QAC7G,4DAAS;QACX,4DAAM;QAYN,0EACE;QAAA,4EAAkB;QAAA,iEAAK;QAAA,4DAAQ;QAC/B,4EACF;QAD8D,kMAA2B;QAAvF,4DACF;QAAA,4DAAM;QAEN,6EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QAEN,2EACE;QAAA,sEAAI;QAAA,uFAA2B;QAAA,4DAAK;QAEtC,4DAAM;;QA9CD,0DAAoB;QAApB,iFAAoB;QAI+C,0DAAiC;QAAjC,4FAAiC;QAc3C,0DAA+B;QAA/B,yFAA+B;QAEnC,0DAAqB;QAArB,qJAAqB;QAgBb,0DAA2B;QAA3B,sFAA2B;QAOxF,0DAAqB;QAArB,kFAAqB;;6FD/Bb,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,iCAAiC;aAC/C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAA2C;;AAE3C,MAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,MAAM,QAAQ,GAAG,WAAW,CAAC;AAKtB,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,OAAO;QACL,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAEM,SAAS,CAAC,KAAa;QAC5B,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IAEM,QAAQ;QACb,OAAO,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IAEM,QAAQ,CAAC,IAAI;QAClB,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IAChE,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,CAAC;;sFAxBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACI;;;;;;;;;;;ICQ5C,qEACI;IAAA,wEAAgC;IAAA,8DAAG;IAAA,4DAAK;IACxC,wEAAkC;IAAA,uEAAY;IAAA,4DAAK;IACnD,wEAA+B;IAAA,mEAAQ;IAAA,4DAAK;IAC5C,yEAA0B;IAAA,oEAAS;IAAA,4DAAK;IACxC,yEAA4B;IAAA,iEAAK;IAAA,4DAAK;IACtC,0EAAgB;IAAA,mEAAO;IAAA,4DAAK;IAChC,4DAAK;;;;IAGL,qEACI;IAAA,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAAiC;IAAA,4DAAK;IAC1C,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAC1B,sEACE;IAAA,8EACG;IADK,4bAA8C;IACnD,oEAAO;IAAA,4DAAS;IACrB,4DAAK;IACL,sEACE;IAAA,8EAA0E;IAAlE,2XAA0C;IAAwB,kEAAM;IAAA,4DAAS;IAC3F,4DAAK;IACJ,sEACC;IAAA,8EAC0B;IADlB,4XAA2C;IACzB,mEAAO;IAAA,4DAAS;IAC5C,4DAAK;IACT,4DAAK;;;IAhBG,0DAAqB;IAArB,qFAAqB;IACrB,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAiC;IAAjC,iGAAiC;IACjC,0DAAe;IAAf,+EAAe;IACf,0DAAiB;IAAjB,iFAAiB;;;IA0GnB,yEAAoD;IAAA,uDAAyB;IAAA,4DAAS;;;IAAlC,0DAAyB;IAAzB,0FAAyB;;;;IAnCvF,0EACE;IAAA,yEAA8C;IAAA,yEAAc;IAAA,4DAAK;IACjE,6EACE;IADkC,oUAAsB;IACxD,2EAAyB;IAAA,iEAAO;IAAA,4DAAO;IACzC,4DAAS;IACX,4DAAM;IAEN,0EACE;IAAA,2EACE;IADmC,2UAA4B;IAC/D,0EACE;IAAA,4EAAsD;IAAA,mEAAO;IAAA,4DAAQ;IACrE,2EACE;IAAA,6EAEF;IADI,0WAAiC;IADnC,4DAEF;IAAA,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,6EAAuD;IAAA,iEAAK;IAAA,4DAAQ;IACpE,2EACE;IAAA,6EAEF;IADI,oWAA2B;IAD7B,4DAEF;IAAA,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,6EAAsD;IAAA,+DAAG;IAAA,4DAAQ;IACjE,2EACE;IAAA,6EACF;IADoF,kWAAyB;IAA3G,4DACF;IAAA,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,6EAAsD;IAAA,oEAAQ;IAAA,4DAAQ;IACtE,2EACE;IAAA,8EACE;IAD6F,wWAA8B;IAC3H,8EAAiB;IAAA,2EAAe;IAAA,4DAAS;IACzC,uIAAsF;;IACxF,4DAAS;IACX,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,8EAAuE;IAAvB,qUAAsB;IAAC,iEAAK;IAAA,4DAAS;IACrF,8EAA8C;IAAA,wEAAY;IAAA,4DAAS;IACrE,4DAAM;IACR,4DAAO;IACT,4DAAM;;;IApCG,0DAA6B;IAA7B,6FAA6B;IAK5B,0DAAiC;IAAjC,+FAAiC;IAOjC,0DAA2B;IAA3B,yFAA2B;IAMqD,0DAAyB;IAAzB,uFAAyB;IAOZ,0DAA8B;IAA9B,4FAA8B;IAE9F,0DAAqB;IAArB,wJAAqB;;ADtHvD,MAAM,oBAAoB;IAW/B,YAAoB,cAA8B,EAC9B,YAAsB,EACtB,eAAgC,EACjC,EAAe,EACd,MAAc;QAJd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAU;QACtB,oBAAe,GAAf,eAAe,CAAiB;QACjC,OAAE,GAAF,EAAE,CAAa;QACd,WAAM,GAAN,MAAM,CAAQ;QAblC,aAAQ,GAAG,IAAI,CAAC;QAEhB,UAAK,GAAG,QAAQ,CAAC;QAEjB,YAAO,GAAY,IAAI,sDAAO,EAAE,CAAC;QACjC,cAAS,GAAG,IAAI,CAAC;QACjB,aAAQ,GAAG,IAAI,CAAC;QAChB,MAAC,GAAG,CAAC,CAAC;IAMgC,CAAC;IAEvC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,cAAc;SAC3B,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,SAAS,EAAC,EAAE;YACZ,WAAW,EAAE,EAAE;YACf,KAAK,EAAE,EAAE;YACT,GAAG,EAAE,EAAE;YACP,QAAQ,EAAE,EAAE;SACb,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;IAC3D,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC;aAClC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;aAC5C,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,SAAS,CAAC,WAAgB,EAAE,OAAO;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE;YAClC,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;IAEL,CAAC;IAED,IAAI,CAAC,CAAC;QACJ,oBAAoB;IACtB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;;wFA7EU,oBAAoB;oGAApB,oBAAoB;QCdjC,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACvB,4DAAM;QACN,yEAGF;QAAA,6EAGE;QAH2B,yMAAiC;QAG5D,iIASc;QACd,iIAmBc;QAChB,4DAAU;QAqDR,4DAAM;QACR,4DAAM;QAEN,6MA8Cc;;QAvIL,0DAAkB;QAAlB,+EAAkB;;6FDOd,oBAAoB;cAJhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;aAC7C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAA8D;;AAOvD,MAAM,sBAAsB;IALnC;QAMW,WAAM,GAAY,KAAK,CAAC;KAClC;;4FAFY,sBAAsB;sGAAtB,sBAAsB;QCPnC,4EACE;QAAA,yEACE;QAAA,oEAAwB;QACxB,oEAAwB;QACxB,oEAAwB;QAC1B,4DAAM;QACN,0EAAoD;QAAA,+DAAI;QAAA,4DAAO;QACjE,4DAAS;;QAPuB,kFAA0B;;6FDO7C,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;gBAEU,MAAM;kBAAd,mDAAK;;;;;;;;;;;;;;AERR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGJ;AACA;;;;;;;;ICQxC,6EAAwE;IAAA,uDAAqB;IAAA,4DAAS;;;IAAnD,gFAAoB;IAAC,0DAAqB;IAArB,qFAAqB;;;IAO7F,6EAAsE;IAAA,uDAAuB;IAAA,4DAAS;;;IAApD,+EAAmB;IAAC,0DAAuB;IAAvB,uFAAuB;;;IAwB3F,6EAAwE;IAAA,uDAAqB;IAAA,4DAAS;;;IAAnD,gFAAoB;IAAC,0DAAqB;IAArB,qFAAqB;;;IAO7F,6EAAsE;IAAA,uDAAuB;IAAA,4DAAS;;;IAApD,+EAAmB;IAAC,0DAAuB;IAAvB,uFAAuB;;;;IA0B7F,qEACE;IAAA,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAElC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,6EAA6E;IAArE,sXAA6C;IAAwB,iEAAM;IAAA,4DAAS;IAC9F,6EAC4B;IADpB,mXAA0C;IACtB,iEAAM;IAAA,4DAAS;IAC7C,4DAAK;IACP,4DAAK;;;IAPC,0DAAyB;IAAzB,yFAAyB;IAEzB,0DAAwB;IAAxB,wFAAwB;;ADlE/B,MAAM,iBAAiB;IAS5B,YAAoB,eAAgC,EAAU,eAAgC,EAC1E,cAA8B;QAD9B,oBAAe,GAAf,eAAe,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAC1E,mBAAc,GAAd,cAAc,CAAgB;QANlD,aAAQ,GAAa,IAAI,wDAAQ,EAAE,CAAC;QACpC,aAAQ,GAAa,IAAI,wDAAQ,EAAE,CAAC;QAEpC,cAAS,GAAG,KAAK,CAAC;IAGoC,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;IACxD,CAAC;IAED,IAAI;QACF,IAAI,CAAC,eAAe;aACjB,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC;aACpC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC;aACjC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,cAAc,CAAC,QAAkB;QAC/B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC;aAC1C,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;;kFA9DU,iBAAiB;iGAAjB,iBAAiB;QCb9B,yEACE;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAExB,yEACE;QAAA,2EAAkB;QAAA,mEAAQ;QAAA,4DAAQ;QAClC,2EAEF;QAFqE,oMAAmC;QAAtG,4DAEF;QAAA,4DAAM;QACN,yEACE;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,6EACE;QAD4C,kMAA+B;QAC3E,6EAA0B;QAAA,2EAAe;QAAA,4DAAS;QAClD,qHAAsG;;QACxG,4DAAS;QACX,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,mEAAO;QAAA,4DAAQ;QACjC,6EACE;QAD4C,iMAA8B;QAC1E,6EAA0B;QAAA,2EAAe;QAAA,4DAAS;QAClD,qHAAsG;;QACxG,4DAAS;QACX,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,wEAAY;QAAA,4DAAQ;QACtC,4EACF;QAD2D,oMAAkC;QAA3F,4DACF;QAAA,4DAAM;QACN,6EAAmE;QAArB,0IAAS,cAAU,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAEpF,4DAAM;QAGN,0EACE;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,4EACE;QADI,8IAAY,gCAAwB,IAAC;QACzC,0EACE;QAAA,4EAAkB;QAAA,oEAAQ;QAAA,4DAAQ;QAClC,4EAEF;QAFqE,qMAAmC;QAAtG,4DAEF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,6EACE;QAD4C,kMAA+B;QAC3E,6EAA0B;QAAA,2EAAe;QAAA,4DAAS;QAClD,qHAAsG;;QACxG,4DAAS;QACX,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,mEAAO;QAAA,4DAAQ;QACjC,6EACE;QAD4C,iMAA8B;QAC1E,6EAA0B;QAAA,2EAAe;QAAA,4DAAS;QAClD,qHAAsG;;QACxG,4DAAS;QACX,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,wEAAY;QAAA,4DAAQ;QACtC,4EACF;QAD2D,oMAAkC;QAA3F,4DACF;QAAA,4DAAM;QACN,8EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACxB,4DAAM;QACN,2EACE;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QAEjB,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAClB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,+GAQK;;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;;QAxFD,iFAAoB;QAK8C,0DAAmC;QAAnC,8FAAmC;QAKxD,0DAA+B;QAA/B,0FAA+B;QAE9C,0DAAoB;QAApB,qJAAoB;QAKL,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAoB;QAApB,qJAAoB;QAKO,0DAAkC;QAAlC,6FAAkC;QAO1F,0DAAqB;QAArB,kFAAqB;QAK+C,0DAAmC;QAAnC,8FAAmC;QAKxD,0DAA+B;QAA/B,0FAA+B;QAE9C,0DAAoB;QAApB,qJAAoB;QAKL,0DAA8B;QAA9B,yFAA8B;QAE9C,0DAAoB;QAApB,qJAAoB;QAKO,0DAAkC;QAAlC,6FAAkC;QAqBhE,2DAAoB;QAApB,qJAAoB;;6FD/DxC,iBAAiB;cAJ7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;aACzC;;;;;;;;;;;;;;AEZD;AAAA;AAAO,MAAM,OAAO;CAInB;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACE;AAEJ;AAGD;AACG;;;;;;;;;;;ICK1C,6EAAwE;IAAA,uDAAqB;IAAA,4DAAS;;;IAAnD,gFAAoB;IAAC,0DAAqB;IAArB,qFAAqB;;;;IAazF,iFACE;IADmF,gXAAiC;IACpH,uDACF;IAAA,4DAAa;;;IAF8C,qFAAyB;IAClF,0DACF;IADE,8FACF;;;IA2BF,6EAAwE;IAAA,uDAAqB;IAAA,4DAAS;;;IAAnD,gFAAoB;IAAC,0DAAqB;IAArB,qFAAqB;;;;IA0B7F,qEACE;IAAA,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAElC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,6EAA6E;IAArE,wXAA6C;IAAwB,iEAAM;IAAA,4DAAS;IAC9F,6EAC4B;IADpB,qXAA0C;IACtB,iEAAM;IAAA,4DAAS;IAC7C,4DAAK;IACP,4DAAK;;;IAPC,0DAAyB;IAAzB,0FAAyB;IAEzB,0DAAwB;IAAxB,yFAAwB;;ADtE/B,MAAM,iBAAiB;IAmB5B,EAAE;IAEF,YAAoB,eAAgC,EAAU,eAAgC;QAA1E,oBAAe,GAAf,eAAe,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAlB9F,aAAQ,GAAa,IAAI,wDAAQ,EAAE,CAAC;QACpC,aAAQ,GAAa,IAAI,wDAAQ,EAAE,CAAC;QAEpC,cAAS,GAAG,KAAK,CAAC;QAIlB,kBAAkB;QAClB,cAAS,GAAG,IAAI,0DAAW,EAAE,CAAC;QAC9B,YAAO,GAAoB,EAAE,CAAC;IASoE,CAAC;IAN3F,OAAO,CAAC,KAAa;QAC3B,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5F,CAAC;IAKD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,kBAAkB;IAClB,oBAAoB;QAClB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY;iBAC/C,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAClC,CAAC;QACN,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QACxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;IAC1D,CAAC;IAED,IAAI;QACF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9C,IAAI,CAAC,eAAe;aACjB,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,KAAK,CAAC,MAAM,CAAC,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,GAAQ;QACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;IAC3B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC;aACpC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC;aACjC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,cAAc,CAAC,QAAkB;QAC/B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC;aAC1C,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;;kFApGU,iBAAiB;iGAAjB,iBAAiB;QCb9B,yEACE;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAExB,yEACE;QAAA,2EAAkB;QAAA,mEAAQ;QAAA,4DAAQ;QAClC,2EAEF;QAFqE,oMAAmC;QAAtG,4DAEF;QAAA,4DAAM;QACN,yEACE;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,6EACE;QAD4C,kMAA+B;QAC3E,6EAA0B;QAAA,2EAAe;QAAA,4DAAS;QAClD,qHAAsG;;QACxG,4DAAS;QAGT,2EACE;QAAA,qFACE;QAAA,uEAMA;QAAA,8FACE;QAAA,8HAEa;;QACf,4DAAmB;QACrB,4DAAiB;QACnB,4DAAO;QAET,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,wEAAY;QAAA,4DAAQ;QACtC,6EACF;QAD2D,oMAAkC;QAA3F,4DACF;QAAA,4DAAM;QACN,8EAAmE;QAArB,0IAAS,cAAU,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAEpF,4DAAM;QAGN,0EACE;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,4EACE;QADI,8IAAY,gCAAwB,IAAC;QACzC,0EACE;QAAA,4EAAkB;QAAA,oEAAQ;QAAA,4DAAQ;QAClC,4EAEF;QAFqE,qMAAmC;QAAtG,4DAEF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,8EACE;QAAA,8EAAiB;QAAA,uEAAW;QAAA,4DAAS;QACrC,qHAAsG;;QACxG,4DAAS;QACX,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,wEAAY;QAAA,4DAAQ;QACtC,6EACF;QAD2D,oMAAkC;QAA3F,4DACF;QAAA,4DAAM;QACN,8EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACxB,4DAAM;QACN,2EACE;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QAEjB,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAClB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,+GAQK;;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;;;QA5FD,iFAAoB;QAK8C,0DAAmC;QAAnC,8FAAmC;QAKxD,0DAA+B;QAA/B,0FAA+B;QAE9C,0DAAoB;QAApB,qJAAoB;QAUxC,0DAAyB;QAAzB,sFAAyB;QAGC,0DAA0B;QAA1B,2JAA0B;QAUN,0DAAkC;QAAlC,6FAAkC;QAO1F,0DAAqB;QAArB,kFAAqB;QAK+C,0DAAmC;QAAnC,8FAAmC;QAOvE,0DAAoB;QAApB,qJAAoB;QAKM,0DAAkC;QAAlC,6FAAkC;QAqBhE,2DAAoB;QAApB,qJAAoB;;6FDnExC,iBAAiB;cAJ7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;aACzC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGqB;;;AAKzD,MAAM,oBAAoB;IAI/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAC,gBAAgB,CAAC;IAEpB,CAAC;IAEzC,mBAAmB,CAAC,OAAY;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,gCAAgC,CAAC,UAAe;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,aAAa,UAAU,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,iCAAiC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,WAAW,CAAC,CAAC;IACnD,CAAC;IAED,uCAAuC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,mBAAmB,CAAC,CAAC;IAC3D,CAAC;;wFAxBU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;6FAEP,oBAAoB;cAHhC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEN;AACE;;;;;;;;IC6CtC,qEACE;IAAA,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAEhC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,6EAA0E;IAAlE,8WAA0C;IAAwB,iEAAM;IAAA,4DAAS;IAC3F,6EAC4B;IADpB,2WAAuC;IACnB,iEAAM;IAAA,4DAAS;IAC7C,4DAAK;IACP,4DAAK;;;IAPC,0DAAuB;IAAvB,uFAAuB;IAEvB,0DAAuB;IAAvB,uFAAuB;;ADxC9B,MAAM,gBAAgB;IAS3B,YAAoB,cAA8B,EAAU,eAAgC;QAAxE,mBAAc,GAAd,cAAc,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAN5F,YAAO,GAAY,IAAI,sDAAO,EAAE,CAAC;QACjC,aAAQ,GAAa,IAAI,wDAAQ,EAAE,CAAC;QAEpC,cAAS,GAAG,KAAK,CAAC;IAG8E,CAAC;IAEjG,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;IAC1D,CAAC;IAED,IAAI;QACF,IAAI,CAAC,cAAc;aAChB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,aAAa,CAAC,GAAQ;QACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;IAC3B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC;aAClC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC;aAC/B,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,OAAgB;QAC5B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC;aACvC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;;gFAjEU,gBAAgB;gGAAhB,gBAAgB;QCX7B,yEACE;QAAA,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QAEvB,yEACE;QAAA,2EAAkB;QAAA,kEAAO;QAAA,4DAAQ;QACjC,2EAEF;QAFoE,iMAAiC;QAAnG,4DAEF;QAAA,4DAAM;QACN,yEACE;QAAA,2EAAkB;QAAA,uEAAY;QAAA,4DAAQ;QACtC,4EACF;QAD2D,kMAAiC;QAA1F,4DACF;QAAA,4DAAM;QACN,6EAAmE;QAArB,yIAAS,cAAU,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAEpF,4DAAM;QAGN,0EACE;QAAA,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,2EACE;QADI,6IAAY,8BAAsB,IAAC;QACvC,0EACE;QAAA,4EAAkB;QAAA,mEAAO;QAAA,4DAAQ;QACjC,4EAEF;QAFoE,kMAAiC;QAAnG,4DAEF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,wEAAY;QAAA,4DAAQ;QACtC,4EACF;QAD2D,kMAAiC;QAA1F,4DACF;QAAA,4DAAM;QACN,6EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACvB,4DAAM;QACN,2EACE;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAEhB,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAClB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,8GAQK;;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;;QA5DD,iFAAoB;QAK6C,0DAAiC;QAAjC,4FAAiC;QAK1C,0DAAiC;QAAjC,4FAAiC;QAOzF,0DAAqB;QAArB,kFAAqB;QAK8C,0DAAiC;QAAjC,4FAAiC;QAK1C,0DAAiC;QAAjC,4FAAiC;QAqBhE,2DAAoB;QAApB,oJAAoB;;6FDrCvC,gBAAgB;cAJ5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,QAAQ;IAEnB,SAAS,CAAC,KAAU,EAAE,GAAG,IAAe;QACtC,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;;gEAJU,QAAQ;kGAAR,QAAQ;6FAAR,QAAQ;cAHpB,kDAAI;eAAC;gBACJ,IAAI,EAAE,MAAM;aACb;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGqB;;;AAKzD,MAAM,iBAAiB;IAI5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAC,aAAa,CAAC;IAEjB,CAAC;IAEzC,gBAAgB,CAAC,OAAY;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,8BAA8B,CAAC,UAAe;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,qBAAqB,UAAU,EAAE,CAAC,CAAC;IACzE,CAAC;IAED,+BAA+B;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,YAAY,CAAC,CAAC;IACpD,CAAC;IAED,oCAAoC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,mBAAmB,CAAC,CAAC;IAC3D,CAAC;;kFAxBU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,YAAY;IASvB,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAR5D,UAAK,GAAG,eAAe,CAAC;QAGxB,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QACvB,uBAAkB,GAAG,KAAK,CAAC;IAGqC,CAAC;IAEjE,QAAQ;QACN,2DAA2D;QAE3D,yBAAyB;QACzB,qDAAqD;QACrD,6BAA6B;QAE7B,gEAAgE;QAChE,wEAAwE;QAExE,mCAAmC;QACnC,IAAI;IACN,CAAC;;wEAvBU,YAAY;4FAAZ,YAAY;QCRzB,yEACE;QAAA,2EAA+B;QACjC,4DAAM;;6FDMO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,yEACE;QAAA,uEAAiC;QAAA,wEAAa;QAAA,4DAAI;QAClD,4EACE;QAAA,qEAAyC;QAC3C,4DAAS;QAET,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,uEACE;QAAA,uEAAW;QAAA,4DAAI;QACjB,4DAAK;QAEL,yEACE;QAAA,wEAA0E;QAAA,oEAAQ;QAAA,4DAAI;QACxF,4DAAK;QAEL,yEACE;QAAA,wEAA4E;QAAA,iEAAK;QAAA,4DAAI;QACvF,4DAAK;QAEL,yEACE;QAAA,yEAA0C;QAAA,uEAAW;QAAA,4DAAI;QAC3D,4DAAK;QAEL,yEACE;QAAA,yEAAmD;QAAA,yEAAY;QAAA,4DAAI;QACrE,4DAAK;QAEL,yEACE;QAAA,yEAAgD;QAAA,qEAAQ;QAAA,4DAAI;QAC9D,4DAAK;QACT,4DAAK;QAEP,4DAAM;QACR,4DAAM;;6FD5BO,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGqB;;;AAKzD,MAAM,eAAe;IAI1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAC,WAAW,CAAC;IAEf,CAAC;IAEzC,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,QAAgB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED,sCAAsC;IACtC,cAAc,CAAC,KAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;;8EA1BU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAO,MAAM,OAAO;CAQnB;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICWxC,yEACE;IAAA,yEACE;IAAA,uEAAO;IAAA,uDAA0B;;IAAA,4DAAO;IAC3C,4DAAK;IACN,4DAAK;;;IAFM,0DAA0B;IAA1B,mJAA0B;;;IAKjC,yEACE;IAAA,uDACA;IAEH,4DAAK;;;;IAHF,0DACA;IADA,8GACA;;;IAHJ,yEACE;IAAA,2HAII;IACP,4DAAK;;;IAL4C,0DAAU;IAAV,mFAAU;;;IAa1D,yEAEA;IAAA,0EACE;IAAA,0EACE;IAAA,mEAA+B;IAC/B,2EAA4B;IAAA,6DAAE;IAAA,4DAAO;IACrC,2EAAyB;IAAA,gEAAK;IAAA,4DAAO;IACvC,4DAAM;IACR,4DAAM;IAEN,0EACE;IAAA,0EACE;IAAA,oEAA4B;IAC5B,4EAA4B;IAAA,+DAAG;IAAA,4DAAO;IACtC,4EAAyB;IAAA,qEAAS;IAAA,4DAAO;IAC3C,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,2EACE;IAAA,oEAA8B;IAC9B,4EAA4B;IAAA,gEAAI;IAAA,4DAAO;IACvC,4EAAyB;IAAA,gEAAI;IAAA,4DAAO;IACtC,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,2EACE;IAAA,oEAA2B;IAC3B,4EAA4B;IAAA,8DAAE;IAAA,4DAAO;IACrC,4EAAyB;IAAA,iEAAK;IAAA,4DAAO;IACvC,4DAAM;IACR,4DAAM;IACR,4DAAM;;ADvDT,MAAM,kBAAkB;IAG7B,YACU,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAHxB,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,EAAE,CAAC;IAGT,CAAC;IAEL,QAAQ;QACP,IAAI,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAED,cAAc;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;YAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;QACD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACjB,IAAI,CAAC,KAAK,EAAE,EAAE;gBACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;oFArBU,kBAAkB;kGAAlB,kBAAkB;QCT/B,yEAEC;QAAA,+EAA4D;QAE5D,yEACC;QAAA,mFAAmE;QAEnE,gFAA6D;QAC7D,yEACI;QAAA,yEACE;QAAA,yEACE;QAAA,4GAIK;QACL,0MAQc;QAEhB,4DAAM;QACR,4DAAM;QACT,0EACC;QAAA,0EAEQ;QAAA,kHAiCI;QACX,4EAA+B;QAChC,4DAAM;QACP,4DAAM;QACP,4DAAM;QACP,4DAAM;QACP,4DAAM;;;QA3D4B,0DAA0B;QAA1B,wFAA0B;QAoB9B,0DAAe;QAAf,+EAAe;;6FDtBhC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAO,MAAM,QAAQ;CAKpB;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AACT;AACoC;AACG;AACT;AACrB;AAC8B;AACP;AACxB;AACvD,uDAAuD;AAEgB;AACd;AACS;AACb;AAC8B;AACjB;AACA;AACA;AACH;AACW;AACM;AAEvB;AACS;AACS;AAC/B;AAC4B;AACzB;AACM;AAC0B;AACrC;AACkC;AACc;AACF;;AA4CjF,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAfJ;YACP,0DAAW;YACX,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;YAChB,6FAAuB;YACvB,kEAAmB;YACnB,qFAAqB;YACrB,gFAAkB;YAClB,uEAAc;YACd,qEAAS;YACT,mEAAmB;YACnB,6DAAY;SACb;mIAIU,SAAS,mBAxClB,2DAAY;QACZ,+FAAsB;QACtB,kGAAuB;QACvB,yFAAoB;QACpB,kGAAuB;QACvB,gGAAsB;QACtB,+EAAiB;QACjB,+EAAiB;QACjB,+EAAiB;QACjB,4EAAgB;QAChB,uFAAmB;QACnB,6FAAqB;QACrB,yFAAkB;QAClB,uGAAsB;QACtB,qGAAsB;QACtB,sEAAc;QACd,+EAAiB;QACjB,wFAAkB;QAClB,yDAAQ;QACR,qFAAiB;QACjB,4FAAmB,aAGnB,0DAAW;QACX,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;QAChB,6FAAuB;QACvB,kEAAmB;QACnB,qFAAqB;QACrB,gFAAkB;QAClB,uEAAc;QACd,qEAAS;QACT,mEAAmB;QACnB,6DAAY;6FAKH,SAAS;cA1CrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,+FAAsB;oBACtB,kGAAuB;oBACvB,yFAAoB;oBACpB,kGAAuB;oBACvB,gGAAsB;oBACtB,+EAAiB;oBACjB,+EAAiB;oBACjB,+EAAiB;oBACjB,4EAAgB;oBAChB,uFAAmB;oBACnB,6FAAqB;oBACrB,yFAAkB;oBAClB,uGAAsB;oBACtB,qGAAsB;oBACtB,sEAAc;oBACd,+EAAiB;oBACjB,wFAAkB;oBAClB,yDAAQ;oBACR,qFAAiB;oBACjB,4FAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,0DAAW;oBACX,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;oBAChB,6FAAuB;oBACvB,kEAAmB;oBACnB,qFAAqB;oBACrB,gFAAkB;oBAClB,uEAAc;oBACd,qEAAS;oBACT,mEAAmB;oBACnB,6DAAY;iBACb;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACjFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEJ;;;;;;;ICkDtC,qEACE;IAAA,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,6EAA6E;IAArE,yXAA6C;IAAwB,iEAAM;IAAA,4DAAS;IAC9F,6EAC4B;IADpB,sXAA0C;IACtB,iEAAM;IAAA,4DAAS;IAC7C,4DAAK;IACP,4DAAK;;;IANC,0DAAyB;IAAzB,yFAAyB;IACzB,0DAAyB;IAAzB,yFAAyB;;AD7ChC,MAAM,uBAAuB;IAOlC,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAJpD,aAAQ,GAAa,IAAI,wDAAQ,EAAE,CAAC;QAEpC,cAAS,GAAG,KAAK,CAAC;IAEsC,CAAC;IAEzD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;IAC3D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;IACjC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,eAAe;aACjB,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC;aACpC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC;aACjC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,cAAc,CAAC,QAAkB;QAC/B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC;aAC1C,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;;8FAlEU,uBAAuB;uGAAvB,uBAAuB;QCTpC,yEACE;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,0EACE;QADI,mJAAY,cAAU,IAAC;QAC3B,yEACE;QAAA,2EAAkB;QAAA,mEAAQ;QAAA,4DAAQ;QAClC,2EAEF;QAFqE,0MAAmC;QAAtG,4DAEF;QAAA,4DAAM;QAEN,yEACE;QAAA,2EAAkB;QAAA,uEAAW;QAAA,4DAAQ;QACrC,4EAEF;QAFqE,2MAAmC;QAAtG,4DAEF;QAAA,4DAAM;QAEN,6EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QAEN,0EACE;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,2EACE;QADI,oJAAY,gCAAwB,IAAC;QACzC,0EACE;QAAA,4EAAkB;QAAA,oEAAQ;QAAA,4DAAQ;QAClC,4EAEF;QAFqE,2MAAmC;QAAtG,4DAEF;QAAA,4DAAM;QAEN,0EACE;QAAA,4EAAkB;QAAA,uEAAW;QAAA,4DAAQ;QACrC,4EAEF;QAFqE,2MAAmC;QAAtG,4DAEF;QAAA,4DAAM;QAEN,6EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACxB,4DAAM;QACN,0EACE;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAClB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,qHAOK;;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;;QA/DD,iFAAoB;QAKgD,0DAAmC;QAAnC,8FAAmC;QAMnC,0DAAmC;QAAnC,8FAAmC;QAQvG,0DAAqB;QAArB,kFAAqB;QAK+C,0DAAmC;QAAnC,8FAAmC;QAMnC,0DAAmC;QAAnC,8FAAmC;QAsB3E,2DAAqB;QAArB,qJAAqB;;6FD3CzC,uBAAuB;cAJnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;aAChD;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AACb;AACP;AACI;;;;;;;;ICG5C,6EAAwE;IAAA,uDAAyB;IAAA,4DAAS;;;IAAlG,gFAAoB;IAA4C,0DAAyB;IAAzB,yFAAyB;;;IAQjG,6EAAqE;IAAA,uDAAuB;IAAA,4DAAS;;;IAA7F,+EAAmB;IAA0C,0DAAuB;IAAvB,uFAAuB;;;;IAgB9F,qEACE;IAAA,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAChB,qEAAI;IAAA,6EAAgC;IAAxB,oVAAuB;IAAC,4DAAC;IAAA,4DAAS;IAAA,4DAAK;IACnD,qEACE;IAAA,4EACF;IAD0C,6OAAsC;IAA9E,4DACF;IAAA,4DAAK;IACL,qEAAI;IAAA,4EAAiG;IAAzD,+NAAwB;IAAhE,4DAAiG;IAAA,4DAAK;IAC1G,sEACE;IAAA,uEACE;IAAA,6EAEF;IAF0C,qOAA6B;IAArE,4DAEF;IAAA,4DAAM;IACR,4DAAK;IACL,sEAAI;IAAA,wDAA8B;IAAA,4DAAK;IACzC,4DAAK;;;;IAbC,0DAAO;IAAP,yEAAO;IAG+B,0DAAsC;IAAtC,gGAAsC;IAEpC,0DAAwB;IAAxB,kFAAwB;IAGM,0DAAkC;IAAlC,uGAAkC;IAAhE,uFAA6B;IAIrE,0DAA8B;IAA9B,mGAA8B;;AD7BjC,MAAM,mBAAmB;IAa9B,YAAoB,cAA8B,EACxC,eAAgC,EAChC,iBAAoC;QAF1B,mBAAc,GAAd,cAAc,CAAgB;QACxC,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAb9C,YAAO,GAAY,IAAI,sDAAO,EAAE,CAAC;QACjC,eAAU,GAAe,IAAI,6DAAU,EAAE,CAAC;QAC1C,qBAAgB,GAAqB,IAAI,0EAAgB,EAAE,CAAC;QAG5D,SAAI,GAA4B,EAAE,CAAC;QACnC,mBAAc,GAAG,CAAC,CAAC;QACnB,oBAAe,GAAG,CAAC,CAAC;QACpB,gBAAW,GAAG,CAAC,CAAC;QAChB,iBAAY,GAAG,CAAC,CAAC;IAIiC,CAAC;IAEnD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;QACxD,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7C,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAE9C,IAAI,CAAC,iBAAiB;aACnB,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACC,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACT,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,6DAAU,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,aAAa;QACX,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,WAAW;QACT,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,KAAK,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;IAED,iBAAiB;QACf,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,WAAW,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,KAAK,CAAC,qCAAqC,CAAC,CAAC;YAC7C,OAAO;SACR;QACD,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC;QACjG,IAAI,CAAC,cAAc,GAAG,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC1E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;IACvF,CAAC;IAED,eAAe,CAAC,IAAa;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,CAAC;YACb,KAAK,EAAE,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY;SACrE,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,UAAe;QACjC,IAAI,CAAC,iBAAiB,CAAC,8BAA8B,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YAC3F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,EAAE,CAAC,KAAU,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,cAAc,CAAC,UAAkB;QAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;IACjE,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QACpE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;IACjE,CAAC;;sFAnHU,mBAAmB;mGAAnB,mBAAmB;QCdhC,yEACE;QAAA,yEACE;QAAA,2EAAkB;QAAA,mEAAQ;QAAA,4DAAQ;QAClC,4EAEE;QAFoD,qMAAiC,qFAC3E,2DAAmD,IADwB;QAErF,4EAAiB;QAAA,2EAAgB;QAAA,4DAAS;QAC1C,qHAA0G;;QAC5G,4DAAS;QACX,4DAAM;QAEN,yEACE;QAAA,4EAAkB;QAAA,mEAAO;QAAA,4DAAQ;QACjC,6EACE;QAD2C,0LAAqB,sFAAW,gCAAwB,IAAnC;QAChE,6EAAiB;QAAA,0EAAc;QAAA,4DAAS;QACxC,uHAAqG;;QACvG,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,uEACE;QAAA,4EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACtB,4DAAK;QACP,4DAAQ;QACR,gHAcK;QACL,sEACE;QAAA,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,iEAAS;QACT,iEAAS;QACT,iEAAS;QACT,sEAAI;QAAA,wDAAiB;QAAA,4DAAK;QAC1B,sEAAI;QAAA,wDAA+C;QAAA,4DAAK;QAC1D,4DAAK;QACP,4DAAQ;QACV,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,4EAAkB;QAAA,uEAAW;QAAA,4DAAQ;QACrC,6EAEF;QAFyC,uMAAmC,mFAC/D,6CAAqC,IAD0B;QAA1E,4DAEF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,2EAAe;QAAA,4DAAQ;QACzC,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,4EAAgB;QAAA,4DAAQ;QAC1C,wEACF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAkB;QAAA,6EAAiB;QAAA,4DAAQ;QAC3C,wEACF;QAAA,4DAAM;QACN,8EAA+D;QAAjB,4IAAS,UAAM,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAChF,4DAAM;;QAxEoD,0DAAiC;QAAjC,4FAAiC;QAGnC,0DAAoB;QAApB,oJAAoB;QAM3B,0DAAqB;QAArB,gFAAqB;QAEhB,0DAAmB;QAAnB,oJAAmB;QAgBhD,2DAAS;QAAT,6EAAS;QAoBxB,0DAAiB;QAAjB,kFAAiB;QACjB,0DAA+C;QAA/C,gHAA+C;QAQd,0DAAmC;QAAnC,8FAAmC;QAK5C,0DAAgD;QAAhD,6GAAgD;QAIhD,0DAAiD;QAAjD,8GAAiD;QAIjD,0DAA8C;QAA9C,2GAA8C;;6FD1DnE,mBAAmB;cAJ/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;aAC5C;;;;;;;;;;;;;;AEbD;AAAA;AAAO,MAAM,QAAQ;CAIpB;;;;;;;;;;;;;ACJD;AAAA;AAAO,MAAM,gBAAgB;;AAC3B,2FAA2F;AAE3F,6EAA6E;AAEtE,wBAAO,GAAW,yFAAyF,CAAC;;;;;;;;;;;;;ACLrH;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEACE;QAAA,yEACI;QAAA,oEAA4B;QAC5B,wEAAkB;QAAA,8DAAG;QAAA,4DAAK;QAC1B,uEAAgB;QAAA,6EAAkB;QAAA,4DAAI;QACtC,4EAA+D;QAAA,+DAAI;QAAA,4DAAS;QAChF,4DAAM;QACR,4DAAM;;6FDAO,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEHD;AAAA;AAAO,MAAM,QAAQ;CAMpB;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGqB;;;AAKzD,MAAM,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAC,UAAU,CAAC;IAEd,CAAC;IAEzC,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,sCAAsC;IACtC,aAAa,CAAC,OAAe;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,sCAAsC;IACtC,aAAa,CAAC,KAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1C,CAAC;;4EA1BU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;;;;;;;ICmB+B,2EAC3D;IAAA,qEAAU;IAAA,4DAAO;;;IAI4D,2EAC7E;IAAA,mEAAQ;IAAA,4DAAO;;;IAIoE,2EACnF;IAAA,gEAAK;IAAA,4DAAO;;;IAIiC,2EAC7C;IAAA,sEAAW;IAAA,4DAAO;;;IAIuC,2EACzD;IAAA,uEAAY;IAAA,4DAAO;;;IAI+B,2EAClD;IAAA,mEAAQ;IAAA,4DAAO;;ADrC/C,MAAM,kBAAkB;IAN/B;QAQE,aAAQ,GAAG,KAAK,CAAC;KAClB;;oFAHY,kBAAkB;kGAAlB,kBAAkB;QCR/B,yEAEE;QAMA,yFACE;QADmC,uLAA8B;QACjE,qEAAgF;QAChF,0EAAmC;QAAA,+DAAI;QAAA,4DAAO;QAChD,4DAAsB;QAGtB,yEAEE;QACA,wEACE;QAAA,wEACA;QAAA,uEAAgE;QAAA,kEAA2B;QAAC,kHAC1C;QAAC,4DAAI;QACvD,4DAAK;QAEL,yEACE;QAAA,yEAAgF;QAAA,oEAA2B;QAAC,kHAC9D;QAAA,4DAAI;QACpD,4DAAK;QAEL,yEACE;QAAA,yEAAkF;QAAA,oEAA+B;QAAC,kHACvE;QAAA,4DAAI;QACjD,4DAAK;QAEL,yEACE;QAAA,yEAAgD;QAAA,oEAA2B;QAAC,kHAC3B;QAAA,4DAAI;QACvD,4DAAK;QAEL,yEACE;QAAA,yEAAwD;QAAA,oEAA+B;QAAC,kHACtC;QAAA,4DAAI;QACxD,4DAAK;QAEL,yEACE;QAAA,yEAAqD;QAAA,oEAA2B;QAAC,kHACnC;QAAA,4DAAI;QACpD,4DAAK;QACP,4DAAK;QAEP,4DAAM;QACR,4DAAM;;QAlDkB,8FAAsC;QAQvC,0DAAe;QAAf,wEAAe;QAWmE,0DAAc;QAAd,8EAAc;QAKI,0DAAc;QAAd,8EAAc;QAKR,0DAAc;QAAd,8EAAc;QAKpD,0DAAc;QAAd,8EAAc;QAKF,0DAAc;QAAd,8EAAc;QAKrB,0DAAc;QAAd,8EAAc;;6FDpCjG,kBAAkB;cAN9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;gBAC1C,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;AELD;AAAA;AAAO,MAAM,oBAAoB;CAGhC;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGqB;;;AAKzD,MAAM,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAgB,CAAC,OAAO,GAAC,UAAU,CAAC;IAEd,CAAC;IAEzC,UAAU,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC;IAED,sCAAsC;IACtC,aAAa,CAAC,OAAe;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,sCAAsC;IACtC,yBAAyB,CAAC,OAAe,EAAE,EAAU;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IAED,sCAAsC;IACtC,aAAa,CAAC,KAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;;4EA/BU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAA2C;;AAOpC,MAAM,SAAS;IACpB,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAC1B,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;kEARU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AACN;AAEY;AACH;AAC1C;AACsB;AACc;AAES;AACH;AACjB;AACH;AACG;AACA;AAEA;AACT;AACkB;AACH;AAC/B;;;AAElC,MAAM,MAAM,GAAW;IAC5B,EAAE,IAAI,EAAE,EAAE,EAAI,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACtD,EAAE,IAAI,EAAE,OAAO,EAAG,SAAS,EAAE,sEAAc,GAAI;IAC/C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,qFAAiB,EAAE;IAC7C,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAG,WAAW,EAAE,CAAE,sDAAS,CAAE;QAClE,SAAS,EAAE,wFAAkB,EAAE,QAAQ,EAAG;YACxC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAoB,EAAE,WAAW,EAAE,CAAE,sDAAS,CAAC,EAAE;YAChF,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,+FAAsB,EAAE;YAClD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAuB,EAAE;YAC3D,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAuB,EAAE;YAC3D,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,+FAAsB,EAAE;YAC5D,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sFAAmB,EAAE;YACtD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4EAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,4FAAqB,EAAE;SAAC;KAC7D;IACH,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAC;CACpD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC7CD;AAAA;AAAO,MAAM,mBAAmB;CAI/B;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICuB1C,0EAKE;IAAA,kFACF;IAAA,4DAAM;;;IAkBJ,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACE;IAAA,mGACF;IAAA,4DAAM;;;IARR,0EAKE;IAAA,kHAAgE;IAChE,kHAEM;IACR,4DAAM;;;;IAJE,0DAA8B;IAA9B,qFAA8B;IAC9B,0DAA+B;IAA/B,sFAA+B;;;IAWvC,0EAKE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,6GACF;;ADvDD,MAAM,cAAc;IAKzB,YAAoB,WAAwB,EAAU,YAAiC,EAAU,MAAc;QAA3F,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJ/G,SAAI,GAAQ,EAAE,CAAC;QACf,iBAAY,GAAG,EAAE,CAAC;QAClB,UAAK,GAAa,EAAE,CAAC;IAE8F,CAAC;IAEpH,QAAQ;QACN,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;SAChD;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACzC,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9C,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACtD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;;4EA1BU,cAAc;8FAAd,cAAc;;QCV3B,yEACE;QAAA,yEACE;QAAA,oEAKA;QAAA,6EAME;QAJA,wSAA4B,cAAU,IAAC;QAIvC,yEACE;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,8EAQA;QAJE,yLAA2B;QAJ7B,4DAQA;QAAA,4GAMM;QACR,4DAAM;QACN,0EACE;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,iFASA;QALE,0LAA2B;QAJ7B,4DASA;QAAA,4GASM;QACR,4DAAM;QACN,0EACE;QAAA,8EACE;QAAA,mEACF;QAAA,4DAAS;QACX,4DAAM;QACN,0EACE;QAAA,4GAMM;QACR,4DAAM;QACR,4DAAO;QAET,4DAAM;QACR,4DAAM;;;;;QAnDI,0DAA2B;QAA3B,sFAA2B;QAO1B,0DAAqC;QAArC,8FAAqC;QAWtC,0DAA2B;QAA3B,sFAA2B;QAQ1B,0DAAqC;QAArC,8FAAqC;QAiBrC,0DAAiB;QAAjB,+EAAiB;;6FDpDf,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEJ;;;;;;;ICiCtC,qEACE;IAAA,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,6EAA6E;IAArE,mXAA6C;IAAwB,iEAAM;IAAA,4DAAS;IAC9F,6EAC4B;IADpB,gXAA0C;IACtB,iEAAM;IAAA,4DAAS;IAC7C,4DAAK;IACP,4DAAK;;;IALC,0DAAqB;IAArB,qFAAqB;;AD3B5B,MAAM,iBAAiB;IAO5B,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAJpD,aAAQ,GAAa,IAAI,wDAAQ,EAAE,CAAC;QAEpC,cAAS,GAAG,KAAK,CAAC;IAEsC,CAAC;IAEzD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;IAC1D,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;IACjC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,eAAe;aACjB,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC;aACpC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC;aACjC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,cAAc,CAAC,QAAkB;QAC/B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,CAAC;aAC1C,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;;kFAlEU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEACE;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,0EACE;QADI,6IAAY,cAAU,IAAC;QAC3B,yEACE;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,2EACF;QAD6D,gMAA+B;QAA1F,4DACF;QAAA,4DAAM;QACN,4EAA8C;QAAA,iEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QAEN,0EACE;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,2EACE;QADI,8IAAY,cAAU,IAAC;QAC3B,0EACE;QAAA,4EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,4EACF;QAD6D,iMAA+B;QAA1F,4DACF;QAAA,4DAAM;QACN,6EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACxB,4DAAM;QACN,0EACE;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAClB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,8GAMK;;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;;QA7CD,iFAAoB;QAKwC,0DAA+B;QAA/B,0FAA+B;QAM3F,0DAAqB;QAArB,kFAAqB;QAKuC,0DAA+B;QAA/B,0FAA+B;QAmB/D,2DAAoB;QAApB,oJAAoB;;6FD1BxC,iBAAiB;cAJ7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;aACzC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACM;;;;;;ICElD,sEACE;IAAA,sEACE;IAAA,wEAAO;IAAA,oEAAG;IAAA,oEAAS;IAAA,4DAAI;IAAA,4DAAQ;IAAC,uDAClC;IAAA,4DAAM;IACN,sEACE;IAAA,wEAAO;IAAA,oEAAG;IAAA,qEAAU;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDACnC;IAAA,4DAAM;IACN,uEACE;IAAA,yEAAO;IAAA,qEAAG;IAAA,mEAAO;IAAA,4DAAI;IAAA,4DAAQ;IAAC,wDAChC;IAAA,4DAAM;IACR,4DAAM;;;IAR8B,0DAClC;IADkC,sGAClC;IAEmC,0DACnC;IADmC,gHACnC;IAEgC,0DAChC;IADgC,gGAChC;;ADHK,MAAM,uBAAuB;IAKlC,YAAoB,KAAqB,EAAU,MAAc,EAC7C,cAA8B;QAD9B,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC7C,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,sDAAO,EAAE,CAAC;QAE7B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAExC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;aACpC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,IAAI;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;;8FAtBU,uBAAuB;uGAAvB,uBAAuB;QCTpC,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAExB,gEACA;QAAA,oHAUM;QAEN,gEACA;QAAA,gEACA;QAAA,4EAAiD;QAAzC,+IAAS,UAAM,IAAC;QAAyB,+EAAoB;QAAA,4DAAS;QAAA,gEAC9E;;QAfM,0DAAa;QAAb,6EAAa;;6FDMN,uBAAuB;cAJnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;aAChD;;;;;;;;;;;;;;AERD;AAAA;AAAO,MAAM,QAAQ;CAGpB;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.authService.register(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      *ngIf=\"!isSuccessful\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          minlength=\"3\"\n          maxlength=\"20\"\n          #username=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && username.invalid\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username must be at most 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"email\"\n          [(ngModel)]=\"form.email\"\n          required\n          email\n          #email=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n          <div *ngIf=\"email.errors.required\">Email is required</div>\n          <div *ngIf=\"email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n  </div>\n</div>\n","import { PurchaseOrderDetail } from './purchaseOrderDetail';\nimport { Supplier } from './supplier';\n\nexport class PurchaseOrder {\n  status: string;\n  supplier: Supplier;\n  totalQty: number;\n  totalPrice: number;\n  amountPaid: number;\n  currentBalance: number;\n\tpreviousBalance: number;\n  purchaseOrderDetail: Array<PurchaseOrderDetail>;\n}\n","import {Router} from '@angular/router';\nimport {AuthService} from '../../_services/auth.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent {\n  constructor(private auth: AuthService, private router: Router)  {}\n\n  logout() {\n    this.auth.logout();\n    this.router.navigateByUrl('/login');\n  }\n}\n","<nav class=\"navbar navbar-light navbar-expand-sm bg-white shadow-sm\">\n\t<div class=\"container-fluid\">\n\t\t<span class=\"navbar-brand\">RK-Fertilizers</span>\n\t\t<div class=\"navbar-nav\">\n\t\t\t<span (click)=\"logout()\" class=\"nav-item nav-link\" style=\"cursor: pointer;\">Logout</span>\n\t\t</div>\n\t</div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\nconst AUTH_API = HttpClientHelper.baseURL+'/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    }, httpOptions);\n  }\n\n  logout() {\n    localStorage.clear();\n  }\n}\n","import { Product } from './../_model/product';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductService } from '../_services/product.service';\nimport { PurchaseOrder } from '../_model/purchaseOrder';\nimport { PurchaseOrderService } from '../_services/purchase-order.service';\nimport { PurchaseOrderDetail } from '../_model/purchaseOrderDetail';\nimport { Supplier } from '../_model/supplier';\nimport { SupplierService } from '../_services/supplier.service';\n\n@Component({\n  selector: 'app-purchase-order',\n  templateUrl: './purchase-order.component.html'\n})\nexport class PurchaseOrderComponent implements OnInit {\n  products: Observable<Product[]>;\n  product: Product = new Product();\n  purchaseOrder: PurchaseOrder = new PurchaseOrder();\n  purchaseOrderDetail: PurchaseOrderDetail = new PurchaseOrderDetail();\n  suppliers: Observable<Supplier[]>;\n\n  rows: Array<PurchaseOrderDetail> = [];\n  currentBalance = 0;\n  previousBalance = 0;\n  totalAmount = 0;\n  totalBalance = 0;\n\n  constructor(private productService: ProductService,\n    private supplierService: SupplierService,\n    private purchaseOrderService: PurchaseOrderService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.products = this.productService.getProductsList();\n    this.suppliers = this.supplierService.getSupplierList();\n    this.purchaseOrder.amountPaid = 0;\n  }\n\n  save() {\n    this.purchaseOrder.currentBalance = this.currentBalance;\n    this.purchaseOrder.purchaseOrderDetail = this.rows;\n    this.purchaseOrder.totalPrice = this.totalAmount;\n\n    this.purchaseOrderService\n      .createPurchaseOrder(this.purchaseOrder).subscribe(data => {\n        console.log(data);\n        this.refreshAfterSave();\n      },\n        error => console.log(error));\n  }\n\n  refreshAfterSave() {\n    this.purchaseOrder = new PurchaseOrder();\n    this.product = new Product();\n    this.purchaseOrder.amountPaid = 0;\n    this.previousBalance = 0;\n    this.currentBalance = 0;\n    this.totalBalance = 0;\n    this.rows = [];\n  }\n\n  getTotalPrice() {\n    let total = 0;\n    this.rows.forEach(obj => {\n      total += Number(obj.price);\n    });\n    return total;\n  }\n\n  getTotalQty() {\n    let total = 0;\n    this.rows.forEach(obj => {\n      total += Number(obj.qtyOrdered);\n    });\n    return total;\n  }\n\n  totalAmountToPaid() {\n    let totalAmount = 0;\n    this.rows.forEach(obj => {\n      totalAmount += Number(obj.qtyOrdered) * Number(obj.price);\n    });\n    this.totalAmount = totalAmount;\n    return totalAmount;\n  }\n\n  removeCart(index: number) {\n    const amountBalance1 = this.totalAmount - (this.rows[index].price * this.rows[index].qtyOrdered);\n    this.currentBalance = amountBalance1 - Number(this.purchaseOrder.amountPaid);\n    this.totalBalance = this.previousBalance + this.currentBalance;\n    this.rows.splice(index, 1);\n    this.purchaseOrder.amountPaid = this.rows.length === 0 ? 0 : this.purchaseOrder.amountPaid;\n  }\n\n  selectedProduct(prod: Product) {\n    this.rows.push({\n      product: prod,\n      qtyOrdered: 0,\n      price: 0\n    });\n  }\n\n  supplierBalanceData(supplierID: any) {\n    this.purchaseOrderService.getPurchaseOrderBalaceBySupplier(supplierID).subscribe((data: number) => {\n      console.log(data);\n      this.previousBalance = data;\n      this.changeInQtyOrPrice();\n    }, (error: any) => console.log(error));\n  }\n\n  amountToBePaid(amountPaid: number) {\n    this.currentBalance = this.totalAmount - amountPaid;\n    this.totalBalance = this.previousBalance + this.currentBalance;\n  }\n\n  changeInQtyOrPrice() {\n    this.currentBalance = this.totalAmount - this.purchaseOrder.amountPaid;\n    this.totalBalance = this.previousBalance + this.currentBalance;\n  }\n}\n","<div style=\"width: 400px;\">\n  <div class=\"form-group\">\n    <label for=\"name\">Supplier</label>\n    <select name=\"customer\" class=\"form-control\" required [(ngModel)]=\"purchaseOrder.supplier\"\n      (change)=\"supplierBalanceData(purchaseOrder.supplier.supplierID)\">\n      <option disabled>Select Supplierr</option>\n      <option [ngValue]=\"supplier\" *ngFor=\"let supplier of suppliers | async\">{{supplier.supplierName}}</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"name\">Product</label>\n    <select name=\"products\" class=\"form-control\" [(ngModel)]=\"product\" (change)=\"selectedProduct(product)\">\n      <option disabled>Select Product</option>\n      <option [ngValue]=\"product\" *ngFor=\"let product of products | async\">{{product.productName}}</option>\n    </select>\n  </div>\n</div>\n<div>\n  <table class=\"table table-hover table table-bordered table-striped\">\n    <thead>\n      <tr>\n        <th>S.No</th>\n        <th>Remove</th>\n        <th>Product</th>\n        <th>Price</th>\n        <th>Qty</th>\n        <th>Total Amout</th>\n      </tr>\n    </thead>\n    <tr *ngFor=\"let cart of rows; let i = index\">\n      <td>{{i+1}}</td>\n      <td><button (click)=\"removeCart(i)\">X</button></td>\n      <td>\n        <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.product.productName\" disabled>\n      </td>\n      <td><input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.price\" (change)=\"changeInQtyOrPrice()\"></td>\n      <td>\n        <div>\n          <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.qtyOrdered\" placeholder=\"{{cart.product.qty}}\"\n            (change)=\"changeInQtyOrPrice()\">\n        </div>\n      </td>\n      <td>{{cart.price*cart.qtyOrdered}}</td>\n    </tr>\n    <tr>\n      <td>Total:</td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>{{getTotalQty()}}</td>\n      <td>{{totalAmountToPaid().toLocaleString('en-IN')}}</td>\n    </tr>\n  </table>\n</div>\n\n<div style=\"text-align:right;\">\n  <div class=\"form-group\">\n    <label for=\"name\">Amount Paid</label>\n    <input type=\"text\" id=\"price\" required [(ngModel)]=\"purchaseOrder.amountPaid\"\n      (input)=\"amountToBePaid(purchaseOrder.amountPaid)\" name=\"price\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Current Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"currentBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Previous Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"previousBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Total Pay Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"totalBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"save()\">Submit</button>\n</div>\n","import { PurchaseOrderService } from '../_services/purchase-order.service';\nimport { Observable } from 'rxjs';\nimport { SalesOrderService } from '../_services/sales-order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { CustomerBalanceSheet } from '../_model/customer-balance-sheet';\nimport { Customer } from '../_model/customer';\nimport { SupplierBalanceSheet } from '../_model/supplier-balance-sheet';\nimport { Supplier } from '../_model/supplier';\nimport { Location } from '../_model/location';\n\n@Component({\n  selector: 'app-balance-sheet',\n  templateUrl: './balance-sheet.component.html',\n  styleUrls: ['./balance-sheet.component.css']\n})\nexport class BalanceSheetComponent implements OnInit {\n  customerBalanceSheets: Observable<CustomerBalanceSheet>;\n  customerBalanceSheet = new CustomerBalanceSheet();\n  customer = new Customer();\n  location = new Location();\n\n  supplierBalanceSheets: Observable<SupplierBalanceSheet>;\n  SupplierBalanceSheet = new SupplierBalanceSheet();\n  supplier = new Supplier();\n\n  constructor(private salesOrderService: SalesOrderService, private purchaseOrderService: PurchaseOrderService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.customerBalanceSheets = this.salesOrderService.getAllCustomerSalesOrderBalanceSheet();\n    this.supplierBalanceSheets = this.purchaseOrderService.getAllSupplierPurchaseOrderBalanceSheet();\n  }\n\n}\n","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Customer List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Customer</th>\n          <th>City</th>\n          <th>Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customerBalanceSheet of customerBalanceSheets | async\">\n          <td>{{customerBalanceSheet.customer.customerName}}</td>\n          <td>{{customerBalanceSheet.customer.location.cityName}}</td>\n          <td>{{customerBalanceSheet.currentBalance}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n<br>\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Supplier List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Supplier</th>\n          <th>Company</th>\n          <th>Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let supplierBalanceSheet of supplierBalanceSheets | async\">\n          <td>{{supplierBalanceSheet.supplier.supplierName}}</td>\n          <td>{{supplierBalanceSheet.supplier.company.companyName}}</td>\n          <td>{{supplierBalanceSheet.currentBalance}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplierService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/supplier';\n\n  constructor(private http: HttpClient) { }\n\n  getSupplier(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createSupplier(supplier: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, supplier);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateSupplier(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteSupplier(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getSupplierList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { SalesOrderDetail } from './sales-order-detail';\nimport { Customer } from './customer';\nexport class SalesOrder {\n  status: string;\n  customer: Customer;\n  totalQty: number;\n  totalPrice: number;\n  amountPaid: number;\n  currentBalance: number;\n\tpreviousBalance: number;\n  salesOrderDetail: Array<SalesOrderDetail>;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/category';\n\n  constructor(private http: HttpClient) { }\n\n  getCategory(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createCategory(category: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, category);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateCategory(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteCategory(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getCategoryList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/location';\n\n  constructor(private http: HttpClient) { }\n\n  getLocation(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createLocation(Location: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}`, Location);\n  }\n\n  updateLocation(value: any): Observable<any> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteLocation(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getLocationList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { Customer } from './customer';\n\nexport class CustomerBalanceSheet {\n  customer: Customer;\n\tcurrentBalance: number;\n}\n","import { Product } from './product';\nexport class SalesOrderDetail {\n  product: Product;\n  qtyOrdered: number;\n  price: number;\n}\n","import { Observable } from 'rxjs';\nimport { Category } from '../_model/category';\nimport { Product } from '../_model/product';\nimport { ProductService } from '../_services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoryService } from '../_services/category.service';\n\n@Component({\n  selector: 'app-create-productt',\n  templateUrl: './create-product.component.html'\n})\n\nexport class CreateProductComponent implements OnInit {\n  categories: Observable<Category[]>;\n\n  product: Product = new Product();\n  submitted = false;\n\n  constructor(private productService: ProductService,\n              private categoryService: CategoryService,\n              private router: Router) { }\n\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.categories = this.categoryService.getCategoryList();\n  }\n\n  newProduct(): void {\n    this.submitted = false;\n    this.product = new Product();\n  }\n\n  save() {\n    this.productService\n      .createProduct(this.product).subscribe(data => {\n        console.log(data);\n        this.product = new Product();\n        this.gotoList();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log(this.product)\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/products']);\n  }\n}\n\n","<h3>Create Product</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Product</label>\n      <input type=\"text\" class=\"form-control\" id=\"productName\" required [(ngModel)]=\"product.productName\"\n        name=\"productName\">\n    </div>\n\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <select formControlName=\"website\" class=\"form-control\">\n        <option disabled>Select Website</option>\n        <option *ngFor=\"let web of websiteList\">{{web}}</option>\n      </select>\n    </div> -->\n\n    <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <select name=\"categories\" class=\"form-control\" required [(ngModel)]= \"product.category\" >\n        <option disabled>Select Category</option>\n        <option [ngValue]=\"category\" *ngFor=\"let category of categories | async\">{{category.categoryName}}</option>\n      </select>\n    </div>\n\n   \n    <!-- <mat-form-field>\n      <input type=\"text\" placeholder=\"Enter Category\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let category of categories | async\" [value]=\"category.categoryName\">\n          {{category.categoryName}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field> -->\n\n    <div class=\"form-group\">\n      <label for=\"name\">Price</label>\n      <input type=\"text\" class=\"form-control\" id=\"price\" required [(ngModel)]=\"product.price\" name=\"price\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newProduct()\">Add</button> -->\n</div>\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser() {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}\n","import { Observable } from 'rxjs';\nimport { ProductService } from './../_services/product.service';\nimport { Product } from './../_model/product';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { CategoryService } from '../_services/category.service';\nimport { Category } from '../_model/category';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html'\n})\nexport class ProductListComponent implements OnInit {\n  [x: string]: any;\n  products = null;\n  categories: Observable<Category[]>;\n  title = 'modal2';\n  editProfileForm: FormGroup;\n  product: Product = new Product();\n  dtOptions = null;\n  pipeData = null;\n  p = 1;\n\n  constructor(private productService: ProductService,\n              private modalService: NgbModal,\n              private categoryService: CategoryService,\n              public fb: FormBuilder,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers'\n    };\n    this.reloadData();\n\n    this.editProfileForm = this.fb.group({\n      productID:'',\n      productName: '',\n      price: '',\n      qty: '',\n      category: ''\n    });\n  }\n\n  reloadData() {\n    this.productService.getProductsList().subscribe(response => {\n      this.products = response;\n    });\n    this.categories = this.categoryService.getCategoryList();\n  }\n\n  deleteProduct(id: number) {\n    this.productService.deleteProduct(id)\n      .subscribe(\n        data => {\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  productDetails(id: number) {\n    this.router.navigate(['details', id]);\n  }\n\n  updateProduct() {\n    this.productService.updateProduct(this.product)\n      .subscribe(data => {\n        console.log(data);\n        this.product = new Product();\n        this.modalService.dismissAll();\n      }, error => console.log(error));\n  }\n\n  openModal(targetModal: any, product) {\n    this.product = product;\n    this.modalService.open(targetModal, {\n      centered: true,\n      backdrop: 'static'\n    });\n   \n  }\n\n  sort(e) {\n    // this.product =  ?\n  }\n\n  closeModal() {\n    this.reloadData();\n    this.modalService.dismissAll();\n  }\n}\n","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Product List</h2>\n  </div>\n  <div class=\"panel-body\">\n\n    \n<p-table [value]=\"products\"  [(selection)]=\"selectedCustomers\" dataKey=\"id\" class=\"table table-bordered row-border hover\"  [rowHover]=\"true\"\n[rows]=\"10\" [showCurrentPageReport]=\"true\"  [loading]=\"loading\" [responsive]=\"true\"\n[paginator]=\"true\" sortMode=\"multiple\" > \n  <ng-template pTemplate=\"header\">\n      <tr>  \n          <th pSortableColumn=\"productID\">#Id</th>\n          <th pSortableColumn=\"productName\">Product Name</th>\n          <th pSortableColumn=\"category\">Category</th>\n          <th pSortableColumn=\"qty\">Qty Stock</th>   \n          <th pSortableColumn=\"price\">Price</th>   \n          <th colspan=\"3\">Actions</th>       \n      </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-product>\n      <tr>\n          <td>{{product.productID}}</td>\n          <td>{{product.productName}}</td>\n          <td>{{product.category.categoryName}}</td>\n          <td>{{product.qty}}</td>  \n          <td>{{product.price}}</td>      \n          <td> \n            <button (click)=\"openModal(editProfileModal, product)\" style=\"margin-top:5px;\" class=\"btn btn-info btn-sm\"\n            >  Update </button>\n          </td>      \n          <td> \n            <button (click)=\"deleteProduct(product.productID)\" class=\"btn btn-danger\">Delete</button>\n          </td>      \n           <td> \n            <button (click)=\"productDetails(product.productID)\" class=\"btn btn-info\"\n            style=\"margin-left: 10px\">Details</button>\n          </td>      \n      </tr>\n  </ng-template>\n</p-table>\n\n<!-- \n    <table class=\"table table-bordered row-border hover\" >\n      <thead>\n        <tr>\n          <th>Product</th>\n          <th>Category</th>\n          <th (click)=\"sort('price')\">Price</th>\n          <th>Qty Stock</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody *ngIf=\"products?.length == 0\">\n        <tr>\n          <td colspan=\"3\" class=\"no-data-available\">No data!</td>\n        </tr>\n      <tbody>\n      <tbody *ngIf=\"products?.length != 0\">\n        <tr *ngFor=\"let product of products | paginate: { itemsPerPage: 10, currentPage: p }\">\n          <td>{{product.productName}}</td>\n          <td>{{product.category.categoryName}}</td>\n          <td>{{product.price}}</td>\n          <td>{{product.qty}}</td>\n          <td class=\"d-none d-sm-block\">\n            <button (click)=\"deleteProduct(product.productID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"openModal(editProfileModal, product)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n            <button (click)=\"productDetails(product.productID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Details</button>\n          </td>\n          <td class=\"d-block d-sm-none\" >\n\n                <button (click)=\"deleteProduct(product.productID)\"  class=\"btn btn-danger btn-sm\">\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n\n                <button (click)=\"openModal(editProfileModal, product)\" style=\"margin-top:5px;\" class=\"btn btn-info btn-sm\"\n                >  <i class=\"fa fa-edit\"></i></button>\n\n                <button (click)=\"productDetails(product.productID)\" style=\"margin-top:5px;\" class=\"btn btn-info btn-sm\">\n                  <i class=\"fa fa-eye\"></i></button>\n          </td>\n        </tr>\n        <tr>\n          <td colspan=\"8\" class=\"text-right\">\n            <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n          </td>\n        </tr>\n      </tbody>\n    </table> -->\n\n\n  </div>\n</div>\n\n<ng-template #editProfileModal let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\" id=\"editProfileLabel\">Update Product</h5>\n    <button type=\"button\" class=\"close\" (click)=\"closeModal()\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n\n  <div class=\"modal-body\">\n    <form  [formGroup]=\"editProfileForm\" (ngSubmit)=\"updateProduct()\">\n      <div class=\"form-group row\">\n        <label for=\"lastname\" class=\"col-sm-4 col-form-label\">Product</label>\n        <div class=\"col-sm-8\">\n          <input type=\"text\" class=\"form-control\" formControlName=\"productName\" name=\"productName\" id=\"productName\"\n            [(ngModel)]=\"product.productName\">\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"firstname\" class=\"col-sm-4 col-form-label\">Price</label>\n        <div class=\"col-sm-8\">\n          <input type=\"text\" class=\"form-control\" formControlName=\"price\" name=\"price\" id=\"price\"\n            [(ngModel)]=\"product.price\">\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"username\" class=\"col-sm-4 col-form-label\">Qty</label>\n        <div class=\"col-sm-8\">\n          <input type=\"text\" class=\"form-control\" name=\"qty\" formControlName=\"qty\" id=\"qty\" [(ngModel)]=\"product.qty\">\n        </div>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"username\" class=\"col-sm-4 col-form-label\">Category</label>\n        <div class=\"col-sm-8\">\n          <select name=\"category\" id=\"category\" formControlName=\"category\" class=\"form-control\" required [(ngModel)]=\"product.category\">\n            <option disabled>Select Category</option>\n            <option *ngFor=\"let category of categories | async\">{{category.categoryName}}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal()\">Close</button>\n        <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n","import { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'app-action-bar-item',\n  templateUrl: './action-bar-item.component.html',\n  styleUrls: ['./action-bar-item.component.css']\n})\nexport class ActionBarItemComponent {\n  @Input() shadow: boolean = false;\n}","<button class=\"action-bar-item\" [class.shadow-sm]=\"shadow\">\n  <div class=\"hamburger-container\" >\n    <div class=\"bar1\"></div>\n    <div class=\"bar2\"></div>\n    <div class=\"bar3\"></div>\n  </div>\n  <span _ngcontent-c1=\"\" class=\"action-bar-item-text\">Menu</span>\n</button>\n\n","import { Component, OnInit } from '@angular/core';\nimport { SupplierService } from '../_services/supplier.service';\nimport { CompanyService } from '../_services/company.service';\nimport { Supplier } from '../_model/supplier';\nimport { Location } from '../_model/location';\nimport { Observable } from 'rxjs';\nimport { LocationService } from '../_services/location.service';\nimport { Company } from '../_model/company';\n\n@Component({\n  selector: 'app-supplier',\n  templateUrl: './supplier.component.html'\n})\nexport class SupplierComponent implements OnInit {\n  suppliers: Observable<Supplier[]>;\n  locations: Observable<Location[]>;\n  companies: Observable<Company[]>;\n  supplier: Supplier = new Supplier();\n  location: Location = new Location();\n  router: any;\n  submitted = false;\n\n  constructor(private supplierService: SupplierService, private locationService: LocationService,\n              private companyService: CompanyService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.suppliers = this.supplierService.getSupplierList();\n    this.locations = this.locationService.getLocationList();\n    this.companies = this.companyService.getCompanyList();\n  }\n\n  save() {\n    this.supplierService\n      .createSupplier(this.supplier).subscribe(data => {\n        console.log(data);\n        this.supplier = new Supplier();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  deleteSupplier(id: number) {\n    this.supplierService.deleteSupplier(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getSupplier(id: number) {\n    this.submitted = true;\n    this.supplierService.getSupplier(id)\n      .subscribe(data => {\n        console.log(data);\n        this.supplier = data;\n      }, error => console.log(error));\n  }\n\n  updateSupplier(supplier: Supplier) {\n    this.supplierService.updateSupplier(supplier)\n      .subscribe(data => {\n        console.log(data);\n        this.supplier = new Supplier();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>Create Supplier</h3>\n  <!-- <form (ngSubmit)=\"onSubmit()\"> -->\n  <div class=\"form-group\">\n    <label for=\"name\">Supplier</label>\n    <input type=\"text\" class=\"form-control\" id=\"supplierName\" required [(ngModel)]=\"supplier.supplierName\"\n      name=\"supplierName\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">City</label>\n    <select name=\"locations\" class=\"form-control\" [(ngModel)]=\"supplier.location\">\n      <option disabled selected>Select Location</option>\n      <option *ngFor=\"let location of locations | async\" [ngValue]=\"location\">{{location.cityName}}</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Company</label>\n    <select name=\"companies\" class=\"form-control\" [(ngModel)]=\"supplier.company\">\n      <option disabled selected>Select Location</option>\n      <option *ngFor=\"let company of companies | async\" [ngValue]=\"company\">{{company.companyName}}</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Phone number</label>\n    <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"supplier.phoneNumber\" name=\"phoneNumber\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSubmit()\">Submit</button>\n  <!-- </form> -->\n</div>\n\n\n<div [hidden]=\"!submitted\" style=\"width: 400px;\">\n  <h3>Update Supplier</h3>\n  <form (ngSubmit)=\"updateSupplier(supplier)\">\n    <div class=\"form-group\">\n      <label for=\"name\">Supplier</label>\n      <input type=\"text\" class=\"form-control\" id=\"supplierName\" required [(ngModel)]=\"supplier.supplierName\"\n        name=\"supplierName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">City</label>\n      <select name=\"locations\" class=\"form-control\" [(ngModel)]=\"supplier.location\">\n        <option disabled selected>Select Location</option>\n        <option *ngFor=\"let location of locations | async\" [ngValue]=\"location\">{{location.cityName}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Company</label>\n      <select name=\"companies\" class=\"form-control\" [(ngModel)]=\"supplier.company\">\n        <option disabled selected>Select Location</option>\n        <option *ngFor=\"let company of companies | async\" [ngValue]=\"company\">{{company.companyName}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Phone number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"supplier.phoneNumber\" name=\"phoneNumber\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Supplier List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Supplier</th>\n          <!-- <th>City</th> -->\n          <th>Phone number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let supplier of suppliers | async\">\n          <td>{{supplier.supplierName}}</td>\n          <!-- <td>{{supplier.location.cityName}}</td> -->\n          <td>{{supplier.phoneNumber}}</td>\n          <td><button (click)=\"deleteSupplier(supplier.supplierID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getSupplier(supplier.supplierID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","export class Company {\n  companyID: number;\n  companyName: string;\n  phoneNumber: string;\n}\n","import { Location } from './../_model/location';\nimport { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../_services/customer.service';\nimport { Customer } from '../_model/customer';\nimport { Observable } from 'rxjs';\nimport { LocationService } from '../_services/location.service';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html'\n})\nexport class CustomerComponent implements OnInit {\n  customers: Observable<Customer[]>;\n  locations: Observable<Location[]>;\n  customer: Customer = new Customer();\n  location: Location = new Location();\n  router: any;\n  submitted = false;\n  selectedgroup: any;\n  option: string;\n\n  //work in progress\n  myControl = new FormControl();\n  options: Array<Location> = [];\n  filteredOptions: Observable<Location[]>;\n\n  private _filter(value: string): Location[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.cityName.toLowerCase().includes(filterValue));\n  }\n  //\n\n  constructor(private customerService: CustomerService, private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.reloadData();\n    this.dropDownAutoComplete();\n  }\n\n  //work in progress\n  dropDownAutoComplete() {\n    this.locations.subscribe(data => {\n      console.log(data);\n      data.forEach(x => {\n        this.options.push(x);\n      });\n\n      this.filteredOptions = this.myControl.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => this._filter(value))\n        );\n    },\n      error => console.log(error));\n  }\n\n  reloadData() {\n    this.customers = this.customerService.getCustomerList();\n    this.locations = this.locationService.getLocationList();\n  }\n\n  save() {\n    this.customer.location.cityName = this.option;\n    this.customerService\n      .createCustomer(this.customer).subscribe(data => {\n        console.log(data);\n        this.customer = new Customer();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  changeOption(option) {\n    alert(option);\n  }\n\n  selectedValue(val: any) {\n    console.log(val);\n    this.selectedgroup = val;\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  deleteCustomer(id: number) {\n    this.customerService.deleteCustomer(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getCustomer(id: number) {\n    this.submitted = true;\n    this.customerService.getCustomer(id)\n      .subscribe(data => {\n        console.log(data);\n        this.customer = data;\n      }, error => console.log(error));\n  }\n\n  updateCustomer(customer: Customer) {\n    this.customerService.updateCustomer(customer)\n      .subscribe(data => {\n        console.log(data);\n        this.customer = new Customer();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>Create Customer</h3>\n  <!-- <form (ngSubmit)=\"onSubmit()\"> -->\n  <div class=\"form-group\">\n    <label for=\"name\">Customer</label>\n    <input type=\"text\" class=\"form-control\" id=\"customerName\" required [(ngModel)]=\"customer.customerName\"\n      name=\"customerName\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">City</label>\n    <select name=\"locations\" class=\"form-control\" [(ngModel)]=\"customer.location\">\n      <option disabled selected>Select Location</option>\n      <option *ngFor=\"let location of locations | async\" [ngValue]=\"location\">{{location.cityName}}</option>\n    </select>\n\n<!-- work in progress-->\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width\">\n        <input type=\"text\"\n               placeholder=\"Pick one\"\n               aria-label=\"Number\"\n               matInput\n               [formControl]=\"myControl\"\n               [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.cityName\" (change) = \"changeOption(option)\">\n            {{option.cityName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Phone number</label>\n    <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"customer.phoneNumber\" name=\"phoneNumber\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSubmit()\">Submit</button>\n  <!-- </form> -->\n</div>\n\n\n<div [hidden]=\"!submitted\" style=\"width: 400px;\">\n  <h3>Update Customer</h3>\n  <form (ngSubmit)=\"updateCustomer(customer)\">\n    <div class=\"form-group\">\n      <label for=\"name\">Customer</label>\n      <input type=\"text\" class=\"form-control\" id=\"customerName\" required [(ngModel)]=\"customer.customerName\"\n        name=\"customerName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">City</label>\n      <select name=\"locations\" class=\"form-control\">\n        <option disabled>Select City</option>\n        <option *ngFor=\"let location of locations | async\" [ngValue]=\"location\">{{location.cityName}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Phone number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"customer.phoneNumber\" name=\"phoneNumber\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Customer List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Customer</th>\n          <!-- <th>City</th> -->\n          <th>Phone number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customer of customers | async\">\n          <td>{{customer.customerName}}</td>\n          <!-- <td>{{customer.location.cityName}}</td> -->\n          <td>{{customer.phoneNumber}}</td>\n          <td><button (click)=\"deleteCustomer(customer.customerID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getCustomer(customer.customerID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchaseOrderService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/purchaseOrder';\n\n  constructor(private http: HttpClient) { }\n\n  createPurchaseOrder(invoice: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}`, invoice);\n  }\n\n  getPurchaseOrderList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n\n  getPurchaseOrderBalaceBySupplier(supplierID: any): any {\n    return this.http.get(`${this.baseUrl}/supplier/${supplierID}`);\n  }\n\n  getAllSupplierPurchaseOrderBalace(): any {\n    return this.http.get(`${this.baseUrl}/supplier`);\n  }\n\n  getAllSupplierPurchaseOrderBalanceSheet(): any {\n    return this.http.get(`${this.baseUrl}/supplier/balance`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CompanyService } from '../_services/company.service';\nimport { Company } from '../_model/company';\nimport { Location } from '../_model/location';\nimport { Observable } from 'rxjs';\nimport { LocationService } from '../_services/location.service';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html'\n})\nexport class CompanyComponent implements OnInit {\n  companies: Observable<Company[]>;\n  locations: Observable<Location[]>;\n  company: Company = new Company();\n  location: Location = new Location();\n  router: any;\n  submitted = false;\n  selectedgroup: any;\n\n  constructor(private companyService: CompanyService, private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.companies = this.companyService.getCompanyList();\n    this.locations = this.locationService.getLocationList();\n  }\n\n  save() {\n    this.companyService\n      .createCompany(this.company).subscribe(data => {\n        console.log(data);\n        this.company = new Company();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  selectedValue(val: any) {\n    console.log(val);\n    this.selectedgroup = val;\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  deleteCompany(id: number) {\n    this.companyService.deleteCompany(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getCompany(id: number) {\n    this.submitted = true;\n    this.companyService.getCompany(id)\n      .subscribe(data => {\n        console.log(data);\n        this.company = data;\n      }, error => console.log(error));\n  }\n\n  updateCompany(company: Company) {\n    this.companyService.updateCompany(company)\n      .subscribe(data => {\n        console.log(data);\n        this.company = new Company();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>Create Company</h3>\n  <!-- <form (ngSubmit)=\"onSubmit()\"> -->\n  <div class=\"form-group\">\n    <label for=\"name\">Company</label>\n    <input type=\"text\" class=\"form-control\" id=\"companyName\" required [(ngModel)]=\"company.companyName\"\n      name=\"companyName\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Phone number</label>\n    <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"company.phoneNumber\" name=\"phoneNumber\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"onSubmit()\">Submit</button>\n  <!-- </form> -->\n</div>\n\n\n<div [hidden]=\"!submitted\" style=\"width: 400px;\">\n  <h3>Update Company</h3>\n  <form (ngSubmit)=\"updateCompany(company)\">\n    <div class=\"form-group\">\n      <label for=\"name\">Company</label>\n      <input type=\"text\" class=\"form-control\" id=\"companyName\" required [(ngModel)]=\"company.companyName\"\n        name=\"companyName\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Phone number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"company.phoneNumber\" name=\"phoneNumber\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Company List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Company</th>\n          <!-- <th>City</th> -->\n          <th>Phone number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let company of companies | async\">\n          <td>{{company.companyName}}</td>\n          <!-- <td>{{company.location.cityName}}</td> -->\n          <td>{{company.phoneNumber}}</td>\n          <td><button (click)=\"deleteCompany(company.companyID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getCompany(company.companyID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: any, ...args: unknown[]): unknown {\n    return value.sort();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesOrderService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/salesOrder';\n\n  constructor(private http: HttpClient) { }\n\n  createSalesOrder(invoice: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}`, invoice);\n  }\n\n  getSalesOrderList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n\n  getSalesOrderBalanceByCustomer(customerID: any): any {\n    return this.http.get(`${this.baseUrl}/customer/balance/${customerID}`);\n  }\n\n  getAllCustomerSalesOrderBalance(): any {\n    return this.http.get(`${this.baseUrl}/customer/`);\n  }\n\n  getAllCustomerSalesOrderBalanceSheet(): any {\n    return this.http.get(`${this.baseUrl}/customer/balance`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'RK FERTILIZER';\n\n  private roles: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username: string;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit() {\n    // this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    // if (this.isLoggedIn) {\n    //   const user = this.tokenStorageService.getUser();\n    //   this.roles = user.roles;\n\n    //   // this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n    //   // this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n    //   this.username = user.username;\n    // }\n  }\n\n\n}\n","<div id=\"app\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-menu',\n  templateUrl: './mobile-menu.component.html',\n  styleUrls: ['./mobile-menu.component.scss']\n})\nexport class MobileMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg bg-primary navbar-dark\">\n  <a class=\"navbar-brand\" href=\"#\">RK-FERTILIZER</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/dashboard\">\n          DASHBOARDS </a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/products\"  routerLinkActive=\"active\">PRODUCTS</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/salesOrder\"  routerLinkActive=\"active\">SALES</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/add\">ADD PRODUCT</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/addCategory\"> ADD CATEGORY</a>\n        </li>\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard/supplier\"> SUPPLIER</a>\n        </li>\n    </ul>\n\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/customer';\n\n  constructor(private http: HttpClient) { }\n\n  getCustomer(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createCustomer(customer: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, customer);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateCustomer(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteCustomer(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getCustomerList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { Category } from './category';\n\nexport class Product {\n  productID: number;\n  productName: string;\n  category: Category;\n  price: number;\n  currentPrice: number;\n  qty: number;\n  active: boolean;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  isVisible = false;\n  urlPath = [];\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n   this.getCurrentPage();\n  }\n\n  getCurrentPage() {\n    const path = this.router.url.split('/');\n    if (path.length === 2 && path[1] === 'dashboard') {\n      this.isVisible = true;\n    }\n    path.forEach((e) => {\n      if (e !== '') {\n        this.urlPath.push(e);\n      }\n    });\n  }\n}\n","<div class=\"app-container\">\n\n\t<app-action-bar class=\"d-none d-sm-block\">\t</app-action-bar>\n\n\t<div class=\"main-container flex-fill\">\n\t\t<app-navigation-bar class=\"d-none d-sm-block\"></app-navigation-bar>\n     <!-- only Mobile and Tab View -->\n  <app-mobile-menu class=\"d-block d-sm-none\"></app-mobile-menu>\n\t\t<div class=\"container-fluid mt-2\">\n      <div class=\"row\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\" *ngIf=\"urlPath.length < 2; else visibleCrum\">\n            <li  class=\"breadcrumb-item active\" >\n              <span >{{urlPath[0] | titlecase}}</span>\n           </li>\n          </ol>\n          <ng-template #visibleCrum>\n            <ol class=\"breadcrumb\">\n              <li class=\"breadcrumb-item\"  *ngFor=\"let item of urlPath\" >\n                {{urlPath.pop()}}  {{item}}\n                <!-- <a [routerLink]=\"[item]\" *ngIf=\"urlPath.pop() != item; else activeMenu\" >{{ item | titlecase}}</a>\n                <ng-template #activeMenu><span>{{ item | titlecase }}</span></ng-template> -->\n             </li>\n           </ol>\n          </ng-template>\n\n        </nav>\n      </div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-md-12\">\n\n            <div class=\"row\" *ngIf=\"isVisible\">\n\n            <div class=\"col-md-3\">\n              <div class=\"card-counter primary\">\n                <i class=\"fa fa-code-fork\"></i>\n                <span class=\"count-numbers\">12</span>\n                <span class=\"count-name\">Flowz</span>\n              </div>\n            </div>\n\n            <div class=\"col-md-3\">\n              <div class=\"card-counter danger\">\n                <i class=\"fa fa-ticket\"></i>\n                <span class=\"count-numbers\">599</span>\n                <span class=\"count-name\">Instances</span>\n              </div>\n            </div>\n\n            <div class=\"col-md-3\">\n              <div class=\"card-counter success\">\n                <i class=\"fa fa-database\"></i>\n                <span class=\"count-numbers\">6875</span>\n                <span class=\"count-name\">Data</span>\n              </div>\n            </div>\n\n            <div class=\"col-md-3\">\n              <div class=\"card-counter info\">\n                <i class=\"fa fa-users\"></i>\n                <span class=\"count-numbers\">35</span>\n                <span class=\"count-name\">Users</span>\n              </div>\n            </div>\n          </div>\n\t\t\t\t\t<router-outlet></router-outlet>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","import { Location } from './location';\n\nexport class Customer {\n  customerID: number;\n  customerName: string;\n  location: Location;\n  phoneNumber: string;\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateProductComponent } from './create-product/create-product.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CreateCategoryComponent } from './create-category/create-category.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { SharedModule } from \"./menu/shared.module\";\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { SupplierComponent } from './supplier/supplier.component';\nimport { LocationComponent } from './location/location.component';\nimport { CompanyComponent } from './company/company.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { BalanceSheetComponent } from './balance-sheet/balance-sheet.component';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { SortPipe } from './pipe/sort.pipe';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MobileMenuComponent } from './menu/mobile-menu/mobile-menu.component';\nimport {TableModule} from 'primeng/table';\nimport { ActionBarComponent } from './menu/action-bar/action-bar.component';\nimport { ActionBarItemComponent } from './menu/action-bar-item/action-bar-item.component';\nimport { NavigationBarComponent } from './menu/navigation-bar/navigation-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateProductComponent,\n    ProductDetailsComponent,\n    ProductListComponent,\n    CreateCategoryComponent,\n    PurchaseOrderComponent,\n    CustomerComponent,\n    SupplierComponent,\n    LocationComponent,\n    CompanyComponent,\n    SalesOrderComponent,\n    BalanceSheetComponent,\n    ActionBarComponent,\n    ActionBarItemComponent,\n    NavigationBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    SortPipe,\n    NotfoundComponent,\n    MobileMenuComponent\n  ],\n  imports: [\n    TableModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    NgbModule,\n    NgxPaginationModule,\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../_services/category.service';\nimport { Category } from '../_model/category';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-create-category',\n  templateUrl: './create-category.component.html'\n})\nexport class CreateCategoryComponent implements OnInit {\n  categories: Observable<Category[]>;\n  id: number;\n  category: Category = new Category();\n  router: any;\n  submitted = false;\n\n  constructor(private categoryService: CategoryService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.categories = this.categoryService.getCategoryList();\n  }\n\n  newCategory(): void {\n    this.category = new Category();\n  }\n\n  save() {\n    this.categoryService\n      .createCategory(this.category).subscribe(data => {\n        console.log(data);\n        this.category = new Category();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/Categories']);\n  }\n\n  deleteCategory(id: number) {\n    this.categoryService.deleteCategory(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getCategory(id: number) {\n    this.submitted = true;\n    this.categoryService.getCategory(id)\n      .subscribe(data => {\n        console.log(data);\n        this.category = data;\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  updateCategory(category: Category) {\n    this.categoryService.updateCategory(category)\n      .subscribe(data => {\n        console.log(data);\n        this.category = new Category();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>CREATE CATEGORY</h3>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <input type=\"text\" class=\"form-control\" id=\"categoryName\" required [(ngModel)]=\"category.categoryName\"\n        name=\"categoryName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Description</label>\n      <input type=\"text\" class=\"form-control\" id=\"categoryDesc\" required [(ngModel)]=\"category.categoryDesc\"\n        name=\"category\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\" style=\"width: 400px;\">\n  <h3>UPDATE CATEGORY</h3>\n  <form (ngSubmit)=\"updateCategory(category)\">\n    <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <input type=\"text\" class=\"form-control\" id=\"categoryName\" required [(ngModel)]=\"category.categoryName\"\n        name=\"categoryName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Description</label>\n      <input type=\"text\" class=\"form-control\" id=\"categoryDesc\" required [(ngModel)]=\"category.categoryDesc\"\n        name=\"category\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>category List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Category</th>\n          <th>Decsription</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let category of categories | async\">\n          <td>{{category.categoryName}}</td>\n          <td>{{category.categoryDesc}}</td>\n          <td><button (click)=\"deleteCategory(category.categoryID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getCategory(category.categoryID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { SalesOrderDetail } from './../_model/sales-order-detail';\nimport { SalesOrder } from './../_model/sales-order';\nimport { Product } from './../_model/product';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProductService } from '../_services/product.service';\nimport { SalesOrderService } from '../_services/sales-order.service';\nimport { Customer } from '../_model/customer';\nimport { CustomerService } from '../_services/customer.service';\n\n@Component({\n  selector: 'app-sales-order',\n  templateUrl: './sales-order.component.html'\n})\nexport class SalesOrderComponent implements OnInit {\n  products: Observable<Product[]>;\n  product: Product = new Product();\n  salesOrder: SalesOrder = new SalesOrder();\n  salesOrderDetail: SalesOrderDetail = new SalesOrderDetail();\n  customers: Observable<Customer[]>;\n\n  rows: Array<SalesOrderDetail> = [];\n  currentBalance = 0;\n  previousBalance = 0;\n  totalAmount = 0;\n  totalBalance = 0;\n\n  constructor(private productService: ProductService,\n    private customerService: CustomerService,\n    private salesOrderService: SalesOrderService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.products = this.productService.getProductsList();\n    this.customers = this.customerService.getCustomerList();\n    this.salesOrder.amountPaid = 0;\n  }\n\n  save() {\n    this.salesOrder.currentBalance = this.currentBalance;\n    this.salesOrder.salesOrderDetail = this.rows;\n    this.salesOrder.totalPrice = this.totalAmount;\n\n    this.salesOrderService\n      .createSalesOrder(this.salesOrder).subscribe(data => {\n        console.log(data);\n        this.refreshAfterSave();\n        this.reloadData();\n      },\n        error => {\n          console.log(error);\n          alert(error.error.errorMessage);\n        });\n  }\n\n  refreshAfterSave() {\n    this.salesOrder = new SalesOrder();\n    this.product = new Product();\n    this.salesOrder.amountPaid = 0;\n    this.previousBalance = 0;\n    this.currentBalance = 0;\n    this.totalBalance = 0;\n    this.rows = [];\n  }\n\n  getTotalPrice() {\n    let total = 0;\n    this.rows.forEach(obj => {\n      total += Number(obj.price);\n    });\n    return total;\n  }\n\n  getTotalQty() {\n    let total = 0;\n    this.rows.forEach(obj => {\n      total += Number(obj.qtyOrdered);\n    });\n    return total;\n  }\n\n  totalAmountToPaid() {\n    let totalAmount = 0;\n    this.rows.forEach(obj => {\n      totalAmount += Number(obj.qtyOrdered) * Number(obj.price);\n    });\n    this.totalAmount = totalAmount;\n    return totalAmount;\n  }\n\n  removeCart(index: number) {\n    if (this.rows.length === 1) {\n      alert('Atleast one product should be added');\n      return;\n    }\n    const amountBalance1 = this.totalAmount - (this.rows[index].price * this.rows[index].qtyOrdered);\n    this.currentBalance = amountBalance1 - Number(this.salesOrder.amountPaid);\n    this.totalBalance = this.previousBalance + this.currentBalance;\n    this.rows.splice(index, 1);\n    this.salesOrder.amountPaid = this.rows.length === 0 ? 0 : this.salesOrder.amountPaid;\n  }\n\n  selectedProduct(prod: Product) {\n    this.rows.push({\n      product: prod,\n      qtyOrdered: 0,\n      price: prod.currentPrice === 0 ? prod.price + 15 : prod.currentPrice\n    });\n  }\n\n  customerBalanceData(customerID: any) {\n    this.salesOrderService.getSalesOrderBalanceByCustomer(customerID).subscribe((data: number) => {\n      console.log(data);\n      this.previousBalance = data;\n      this.changeInQtyOrPrice();\n    }, (error: any) => console.log(error));\n  }\n\n  amountToBePaid(amountPaid: number) {\n    this.currentBalance = this.totalAmount - amountPaid;\n    this.totalBalance = this.previousBalance + this.currentBalance;\n  }\n\n  changeInQtyOrPrice() {\n    this.currentBalance = this.totalAmount - this.salesOrder.amountPaid;\n    this.totalBalance = this.previousBalance + this.currentBalance;\n  }\n}\n","<div style=\"width: 400px;\">\n  <div class=\"form-group\">\n    <label for=\"name\">Customer</label>\n    <select name=\"customer\" class=\"form-control\" required [(ngModel)]=\"salesOrder.customer\"\n      (change)=\"customerBalanceData(salesOrder.customer.customerID)\">\n      <option disabled>Select Customerr</option>\n      <option [ngValue]=\"customer\" *ngFor=\"let customer of customers | async\">{{customer.customerName}}</option>\n    </select>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"name\">Product</label>\n    <select name=\"products\" class=\"form-control\" [(ngModel)]=\"product\" (change)=\"selectedProduct(product)\">\n      <option disabled>Select Product</option>\n      <option [ngValue]=\"product\" *ngFor=\"let product of products | async\">{{product.productName}}</option>\n    </select>\n  </div>\n</div>\n<div>\n  <table class=\"table table-hover table table-bordered table-striped\">\n    <thead>\n      <tr>\n        <th>S.No</th>\n        <th>Remove</th>\n        <th>Product</th>\n        <th>Price</th>\n        <th>Qty</th>\n        <th>Total Amout</th>\n      </tr>\n    </thead>\n    <tr *ngFor=\"let cart of rows; let i = index\">\n      <td>{{i+1}}</td>\n      <td><button (click)=\"removeCart(i)\">X</button></td>\n      <td>\n        <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.product.productName\" disabled>\n      </td>\n      <td><input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.price\" (change)=\"changeInQtyOrPrice()\"></td>\n      <td>\n        <div>\n          <input class=\"form-control\" type=\"text\" [(ngModel)]=\"cart.qtyOrdered\" placeholder=\"{{cart.product.qty}}\"\n            (change)=\"changeInQtyOrPrice()\">\n        </div>\n      </td>\n      <td>{{cart.price*cart.qtyOrdered}}</td>\n    </tr>\n    <tr>\n      <td>Total:</td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td>{{getTotalQty()}}</td>\n      <td>{{totalAmountToPaid().toLocaleString('en-IN')}}</td>\n    </tr>\n  </table>\n</div>\n\n<div style=\"text-align:right;\">\n  <div class=\"form-group\">\n    <label for=\"name\">Amount Paid</label>\n    <input type=\"text\" id=\"price\" required [(ngModel)]=\"salesOrder.amountPaid\"\n      (input)=\"amountToBePaid(salesOrder.amountPaid)\" name=\"price\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Current Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"currentBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Previous Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"previousBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"name\">Total Pay Balance</label>\n    <input type=\"text\" id=\"price\" [value]=\"totalBalance.toLocaleString('en-IN')\" name=\"price\" disabled>\n  </div>\n  <button type=\"submit\" class=\"btn btn-success\" (click)=\"save()\">Submit</button>\n</div>\n","export class Category {\n  categoryID: number;\n  categoryName: string;\n  categoryDesc: string;\n}\n","export class HttpClientHelper {\n  //static baseURL: string = 'http://ec2-18-222-37-157.us-east-2.compute.amazonaws.com:8080';\n\n  //static baseURL: string = 'http://localhost:8080/indian-kisan-care-backend';\n\n  static baseURL: string = 'http://ec2-3-138-201-112.us-east-2.compute.amazonaws.com:8080/indian-kisan-care-backend';\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.scss']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"error-wrapper\">\n      <div class=\"man-icon\"></div>\n      <h3 class=\"title\">404</h3>\n      <p class=\"info\">Oh! Page not found</p>\n      <button type=\"button\" routerLink=\"/dashboard\" class=\"home-btn\">HOME</button>\n  </div>\n</div>\n","import { Company } from './company';\nimport { Location } from './location';\n\nexport class Supplier {\n  supplierID: number;\n  supplierName: string;\n  company: Company;\n  location: Location;\n  phoneNumber: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/company';\n\n  constructor(private http: HttpClient) { }\n\n  getCompany(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createCompany(company: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, company);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateCompany(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteCompany(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getCompanyList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-action-bar',\n  templateUrl: './action-bar.component.html',\n  styleUrls: ['./action-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionBarComponent {\n\n  expanded = false;\n}\n","<div class=\"action-bar\" [class.action-bar-expanded]=\"expanded\">\n\n  <!-- Menu Button -->\n  <!-- <button class=\"action-bar-item shadow-sm\" (click)=\"expanded = !expanded\">\n\t\t<span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\n    <span class=\"action-bar-item-text\">Menu</span>\n\t</button> -->\n\n  <app-action-bar-item [shadow]=\"true\" (click)=\"expanded = !expanded\">\n    <span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\n    <span class=\"action-bar-item-text\">Menu</span>\n  </app-action-bar-item>\n\n  <!-- A vertical navbar -->\n  <nav class=\"navbar navbar-light\">\n\n    <!-- Links -->\n    <ul class=\"navbar-nav nav\">\n      <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\">   <i class=\"fa fa-home \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">DASHBOARDS</span> </a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/products\"  routerLinkActive=\"active\"><i class=\"fa fa-list \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">PRODUCTS</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/salesOrder\"  routerLinkActive=\"active\"><i class=\"fa fa-suitcase \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">SALES</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/add\"><i class=\"fa fa-plus \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">ADD PRODUCT</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/addCategory\"><i class=\"fa fa-list-alt \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">ADD CATEGORY</span></a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/supplier\"><i class=\"fa fa-user \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">SUPPLIER</span></a>\n      </li>\n    </ul>\n\n  </nav>\n</div>\n","import { Supplier } from './supplier';\n\nexport class SupplierBalanceSheet {\n  supplier: Supplier;\n\tcurrentBalance: number;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClientHelper } from '../_model/http-client-helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private baseUrl = HttpClientHelper.baseURL+'/product';\n\n  constructor(private http: HttpClient) { }\n\n  getProduct(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createProduct(product: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, product);\n  }\n\n  // tslint:disable-next-line: ban-types\n  createProductWithCategory(product: Object, id: number): Observable<Object> {\n    return this.http.post(`${this.baseUrl}/${id}`, product);\n  }\n\n  // tslint:disable-next-line: ban-types\n  updateProduct(value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, value);\n  }\n\n  deleteProduct(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getProductsList(): Observable<any> {\n    return this.http.get(this.baseUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (localStorage.getItem('accessToken')) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { BalanceSheetComponent } from './balance-sheet/balance-sheet.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { CreateProductComponent } from './create-product/create-product.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\nimport { ProductListComponent } from './product-list/product-list.component';\n\nimport { CreateCategoryComponent } from './create-category/create-category.component';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { LocationComponent } from './location/location.component';\nimport { CompanyComponent } from './company/company.component';\nimport { SupplierComponent } from './supplier/supplier.component';\nimport { CustomerComponent } from './customer/customer.component';\n\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { AuthGuard } from './auth.guard';\n\nexport const routes: Routes = [\n  { path: '',   redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login',  component: LoginComponent,  },\n  { path: 'register', component: RegisterComponent },\n  { path: '404', component: NotfoundComponent },\n  {path: 'dashboard', pathMatch: 'prefix',  canActivate: [ AuthGuard ],\n    component: DashboardComponent, children : [\n      { path: 'products', component: ProductListComponent, canActivate: [ AuthGuard] },\n      { path: 'add', component: CreateProductComponent },\n      { path: 'details/:id', component: ProductDetailsComponent },\n      { path: 'addCategory', component: CreateCategoryComponent },\n      { path: 'purchaseOrder', component: PurchaseOrderComponent },\n      { path: 'salesOrder', component: SalesOrderComponent },\n      { path: 'location', component: LocationComponent },\n      { path: 'company', component: CompanyComponent },\n      { path: 'customer', component: CustomerComponent },\n      { path: 'supplier', component: SupplierComponent },\n      { path: 'balance-sheet', component: BalanceSheetComponent }]\n    },\n  { path: '**', redirectTo: '404', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Product } from './product';\n\nexport class PurchaseOrderDetail {\n    product: Product;\n    qtyOrdered: number;\n    price: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit() {\n    this.authService.login(this.form).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        localStorage.setItem('accessToken', data.accessToken);\n        this.tokenStorage.saveUser(data);\n        this.roles = this.tokenStorage.getUser().roles;\n        this.router.navigate(['dashboard']);\n      },\n      err => {\n        this.errorMessage = err.error.message;\n      }\n    );\n  }\n\n\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <img\n      id=\"profile-img\"\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n      class=\"profile-img-card\"\n    />\n    <form\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          #username=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && username.invalid\"\n        >\n          Username is required!\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"6\"\n          #password=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && password.invalid\"\n        >\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\" >\n          Login\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted\"\n        >\n          Login failed: {{ errorMessage }}\n        </div>\n      </div>\n    </form>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LocationService } from '../_services/location.service';\nimport { Location } from '../_model/location';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html'\n})\nexport class LocationComponent implements OnInit {\n  locations: Observable<Location[]>;\n  id: number;\n  location: Location = new Location();\n  router: any;\n  submitted = false;\n\n  constructor(private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.locations = this.locationService.getLocationList();\n  }\n\n  newLocation(): void {\n    this.location = new Location();\n  }\n\n  save() {\n    this.locationService\n      .createLocation(this.location).subscribe(data => {\n        console.log(data);\n        this.location = new Location();\n        this.reloadData();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/locations']);\n  }\n\n  deleteLocation(id: number) {\n    this.locationService.deleteLocation(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  getLocation(id: number) {\n    this.submitted = true;\n    this.locationService.getLocation(id)\n      .subscribe(data => {\n        console.log(data);\n        this.location = data;\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  updateLocation(location: Location) {\n    this.locationService.updateLocation(location)\n      .subscribe(data => {\n        console.log(data);\n        this.location = new Location();\n        this.reloadData();\n      }, error => console.log(error));\n  }\n}\n","<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <h3>Create Location</h3>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">City</label>\n      <input type=\"text\" class=\"form-control\" id=\"city\" required [(ngModel)]=\"location.cityName\" name=\"city\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h3>Update Location</h3>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">City</label>\n      <input type=\"text\" class=\"form-control\" id=\"city\" required [(ngModel)]=\"location.cityName\" name=\"city\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Location List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>City</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let location of locations | async\">\n          <td>{{location.cityName}}</td>\n          <td><button (click)=\"deleteLocation(location.locationID)\" class=\"btn btn-danger\">Delete</button>\n            <button (click)=\"getLocation(location.locationID)\" class=\"btn btn-info\"\n              style=\"margin-left: 10px\">Update</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Product } from '../_model/product';\nimport { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../_services/product.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html'\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  id: number;\n  product: Product;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private productService: ProductService) { }\n\n  ngOnInit() {\n    this.product = new Product();\n\n    this.id = this.route.snapshot.params.id;\n\n    this.productService.getProduct(this.id)\n      .subscribe(data => {\n        console.log(data);\n        this.product = data;\n      }, error => console.log(error));\n  }\n\n  list() {\n    this.router.navigate(['products']);\n  }\n}\n","<h2>Product Details</h2>\n\n<hr />\n<div *ngIf=\"product\">\n  <div>\n    <label><b>Product: </b></label> {{product.productName}}\n  </div>\n  <div>\n    <label><b>Category: </b></label> {{product.category.categoryName}}\n  </div>\n  <div>\n    <label><b>Price: </b></label> {{product.price}}\n  </div>\n</div>\n\n<br>\n<br>\n<button (click)=\"list()\" class=\"btn btn-primary\">Back to product List</button><br>\n","export class Location {\n  locationID: number;\n  cityName: string;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}