{"version":3,"sources":["./src/app/validators/category.validator.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_model/purchaseOrder.ts","./src/app/ui_modules/table/sales-table.component.ts","./src/app/ui_modules/table/sales-table.component.html","./src/app/menu/navigation-bar/navigation-bar.component.ts","./src/app/menu/navigation-bar/navigation-bar.component.html","./src/app/_services/token-storage.service.js","./src/app/products/create-product/create-product.component.ts","./src/app/products/create-product/create-product.component.html","./src/app/_services/auth.service.ts","./src/app/purchase-order/purchase-order.component.ts","./src/app/purchase-order/purchase-order.component.html","./src/app/balance-sheet/balance-sheet.component.ts","./src/app/balance-sheet/balance-sheet.component.html","./src/app/_services/supplier.service.ts","./src/app/_model/sales-order.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_services/category.service.ts","./src/app/locations/location-list/location-list.component.ts","./src/app/locations/location-list/location-list.component.html","./src/environments/environment.ts","./src/app/_services/location.service.ts","./src/app/_model/customer-balance-sheet.ts","./src/app/products/product-list/product-list.component.ts","./src/app/products/product-list/product-list.component.html","./src/app/create-product/create-product.component.ts","./src/app/create-product/create-product.component.html","./src/app/_services/token-storage.service.ts","./src/app/reports/sales-report/sales-report.component.ts","./src/app/reports/sales-report/sales-report.component.html","./src/app/menu/action-bar-item/action-bar-item.component.ts","./src/app/menu/action-bar-item/action-bar-item.component.html","./src/app/suppliers/create-supplier/create-supplier.component.ts","./src/app/suppliers/create-supplier/create-supplier.component.html","./src/app/_model/company.ts","./src/app/ui_modules/table/table.component.ts","./src/app/ui_modules/table/table.component.html","./src/app/_services/purchase-order.service.ts","./src/app/companies/company-list/company-list.component.ts","./src/app/companies/company-list/company-list.component.html","./src/app/_services/sales-order.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/mobile-menu/mobile-menu.component.ts","./src/app/menu/mobile-menu/mobile-menu.component.html","./src/app/_services/customer.service.ts","./src/app/_model/product.ts","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/categories/create-category/create-category.component.ts","./src/app/categories/create-category/create-category.component.html","./src/app/_model/customer.ts","./src/app/reports/reports.component.ts","./src/app/reports/reports.component.html","./src/app/app.module.ts","./src/app/categories/category-list/category-list.component.ts","./src/app/categories/category-list/category-list.component.html","./src/app/sales-order/sales-order.component.ts","./src/app/sales-order/sales-order.component.html","./src/app/_model/category.ts","./src/app/_model/http-client-helper.ts","./src/app/pages/notfound/notfound.component.ts","./src/app/pages/notfound/notfound.component.html","./src/app/locations/create-location/create-location.component.ts","./src/app/locations/create-location/create-location.component.html","./src/app/_model/supplier.ts","./src/app/pages/dashboard-categories/dashboard-categories.component.ts","./src/app/pages/dashboard-categories/dashboard-categories.component.html","./src/app/_services/company.service.ts","./src/app/companies/create-company/create-company.component.ts","./src/app/companies/create-company/create-company.component.html","./src/app/menu/action-bar/action-bar.component.ts","./src/app/menu/action-bar/action-bar.component.html","./src/app/utils/numToWords.js","./src/app/customers/customers-list/customers-list.component.ts","./src/app/customers/customers-list/customers-list.component.html","./src/app/suppliers/supplier-list/supplier-list.component.ts","./src/app/suppliers/supplier-list/supplier-list.component.html","./src/app/_model/supplier-balance-sheet.ts","./src/app/reports/purchase-report/purchase-report.component.ts","./src/app/reports/purchase-report/purchase-report.component.html","./src/app/_services/product.service.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material.module.ts","./src/app/customers/create-customer/create-customer.component.ts","./src/app/customers/create-customer/create-customer.component.html","./src/app/_model/location.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Category } from './../_model/category';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport function autocompleteStringValidator(validOptions: Array<Category>): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    const option = validOptions.find(option => option?.categoryName === control.value);\n    \n    if (option) {\n      return null  /* valid option selected */\n    }\n    return { 'invalidAutocompleteString': { value: control.value } }\n  }\n}","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../_services/auth.service';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    form: any = {};\n    isSuccessful = false;\n    isSignUpFailed = false;\n    errorMessage = '';\n\n    constructor(private authService: AuthService) {\n    }\n\n    ngOnInit() {\n    }\n\n    onSubmit() {\n        this.authService.register(this.form).subscribe(\n            data => {\n                console.log(data);\n                this.isSuccessful = true;\n                this.isSignUpFailed = false;\n            },\n            err => {\n                this.errorMessage = err.error.message;\n                this.isSignUpFailed = true;\n            }\n        );\n    }\n}\n","<div class=\"col-md-12\">\n    <div class=\"card card-container\">\n        <img\n                class=\"profile-img-card\"\n                id=\"profile-img\"\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        />\n        <form\n                #f=\"ngForm\"\n                (ngSubmit)=\"f.form.valid && onSubmit()\"\n                *ngIf=\"!isSuccessful\"\n                name=\"form\"\n                novalidate\n        >\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input\n                        #username=\"ngModel\"\n                        [(ngModel)]=\"form.username\"\n                        class=\"form-control\"\n                        maxlength=\"20\"\n                        minlength=\"3\"\n                        name=\"username\"\n                        required\n                        type=\"text\"\n                />\n                <div *ngIf=\"f.submitted && username.invalid\" class=\"alert-danger\">\n                    <div *ngIf=\"username.errors.required\">Username is required</div>\n                    <div *ngIf=\"username.errors.minlength\">\n                        Username must be at least 3 characters\n                    </div>\n                    <div *ngIf=\"username.errors.maxlength\">\n                        Username must be at most 20 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input\n                        #email=\"ngModel\"\n                        [(ngModel)]=\"form.email\"\n                        class=\"form-control\"\n                        email\n                        name=\"email\"\n                        required\n                        type=\"email\"\n                />\n                <div *ngIf=\"f.submitted && email.invalid\" class=\"alert-danger\">\n                    <div *ngIf=\"email.errors.required\">Email is required</div>\n                    <div *ngIf=\"email.errors.email\">\n                        Email must be a valid email address\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input\n                        #password=\"ngModel\"\n                        [(ngModel)]=\"form.password\"\n                        class=\"form-control\"\n                        minlength=\"6\"\n                        name=\"password\"\n                        required\n                        type=\"password\"\n                />\n                <div *ngIf=\"f.submitted && password.invalid\" class=\"alert-danger\">\n                    <div *ngIf=\"password.errors.required\">Password is required</div>\n                    <div *ngIf=\"password.errors.minlength\">\n                        Password must be at least 6 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary btn-block\">Sign Up</button>\n            </div>\n\n            <div *ngIf=\"f.submitted && isSignUpFailed\" class=\"alert alert-warning\">\n                Signup failed!<br/>{{ errorMessage }}\n            </div>\n        </form>\n\n        <div *ngIf=\"isSuccessful\" class=\"alert alert-success\">\n            Your registration is successful!\n        </div>\n    </div>\n</div>\n","import {PurchaseOrderDetail} from './purchaseOrderDetail';\nimport {Supplier} from './supplier';\n\nexport class PurchaseOrder {\n    status: string;\n    supplier: Supplier;\n    totalQty: number;\n    totalPrice: number;\n    amountPaid: number;\n    currentBalance: number;\n    previousBalance: number;\n    purchaseOrderDetail: Array<PurchaseOrderDetail>;\n    vehicleNo: string;\n    dueDate: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from 'src/app/_services/token-storage.service.js';\nimport { numberInWords } from '../../utils/numToWords.js';\n@Component({\n  selector: 'app-table',\n  templateUrl: './sales-table.component.html',\n  styleUrls: ['./sales-table.component.css']\n})\nexport class SalesTableComponent implements OnInit {\n  response: any;\n  totalPrice: number = 0;\n  amountInWords: string = '';\n  user: any = null;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n    console.log('this.response', JSON.stringify((window['response'])));\n    let salesOrder = window['response'];\n    if (!salesOrder) {\n      const invoiceData = sessionStorage.getItem('invoiceData');\n      if (invoiceData) {\n        salesOrder = JSON.parse(invoiceData);\n      }\n    } else {\n      sessionStorage.setItem('invoiceData', JSON.stringify(salesOrder));\n    }\n\n    this.response = salesOrder;\n    document.title = 'Tax Invoice';\n    this._calculateTotals();\n    this.user = this.tokenStorageService.getUser();\n  }\n\n  printPDF() {\n    window.print();\n  }\n\n  private _calculateTotals() {\n    let totalPrice = 0;\n    console.log('response?.salesOrderDetail', this.response?.salesOrderDetail);\n    this.response?.salesOrderDetail?.forEach((salesOrder) => {\n      const amount = salesOrder?.price * salesOrder?.qtyOrdered;\n      const taxAmount = amount * salesOrder?.product?.gst / 100;\n      totalPrice += amount + taxAmount;\n    });\n\n    this.totalPrice = Math.round(totalPrice);\n\n    this.amountInWords = numberInWords(this.totalPrice);\n  }\n}\n","<div class=\"page-content container\">\n    <div class=\"page-header text-blue-d2\">\n        <div class=\"container px-0\">\n            <div class=\"row pt-4\">\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\n                    <div class=\"d-flex\">\n                        <img src=\"/assets/images/logo.png\" alt=\"image\" class=\"logo\">\n                        <div style=\"text-align: center; width: 55%\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">\n                                    <h2> {{user?.brandName}} </h2>\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle\">GST: {{user?.gstNo}} | PAN:\n                                    {{user?.panNo}}\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle\">P: {{user?.phoneNumber}} | E:\n                                    {{user?.email}}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"row brc-default-l1 mx-n1 mb-4\" />\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Customer Name:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.customer?.customerName}}\n                                </span>\n                            </div>\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    GSTIN/UIN:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.customer?.gstIn}}\n                                </span>\n                            </div>\n\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Mobile Number:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.customer?.phoneNumber}}\n                                </span>\n                            </div>\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Address:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.customer?.location?.cityName}}\n                                </span>\n                            </div>\n                        </div>\n                        <!-- /.col -->\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\n                            <hr class=\"d-sm-none\" />\n                            <div class=\"text-grey-m2\">\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Date:</span>\n                                    {{(response?.createdDate | date: 'dd/MM/yyyy hh:mm:ss')}}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Due Date:</span>\n                                    {{response?.dueDate | date: 'dd/MM/yyyy hh:mm:ss'}}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Status:</span>\n                                    <span class=\"text-600 text-90\">\n                                        {{response?.status}}\n                                    </span>\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Motor Vehicle no:</span>\n                                    <span class=\"text-600 text-90\">\n                                        {{response?.vehicleNo}}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <!-- ----------------------------------------- -->\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">SI.<br>NO</th>\n                                <th scope=\"col\">Item & Description</th>\n                                <th scope=\"col\">HSN/SAC</th>\n                                <th scope=\"col\">Rate</th>\n                                <th scope=\"col\">Quantity</th>\n                                <th scope=\"col\">Amount</th>\n                                <th scope=\"col\">\n                                    <div style=\"text-align: center;\">CGST/SGST <br> IGST Rate</div>\n                                </th>\n                                <th scope=\"col\">Tax Amount</th>\n                                <th scope=\"col\">Total Amount</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let cart of response?.salesOrderDetail; index as i;\">\n                                <td>{{i + 1}}.</td>\n                                <td>{{cart?.product?.productName}}</td>\n                                <td>{{cart?.product?.hsnNo}}</td>\n                                <td>₹{{cart?.price.toLocaleString('en-IN') || 0}}</td>\n                                <td>{{cart?.qtyOrdered || 0}}</td>\n                                <td>₹{{(cart?.price * cart?.qtyOrdered).toLocaleString('en-IN') || 0}}</td>\n                                <td>{{cart?.product?.gst}}%</td>\n                                <td>₹{{(cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\n                                </td>\n                                <td>\n                                    ₹{{(cart.price * cart.qtyOrdered + cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\n                                </td>\n                            </tr>\n                            <tr>\n                                <th colspan=\"8\">Total</th>\n                                <th>₹{{totalPrice.toLocaleString('en-IN')}}</th>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <span class=\"text-sm text-grey-m2 align-middle\">Amount chargeable(in words):</span>\n                    <span class=\"text-lg text-grey-m2 align-middle font-weight-bold\">\n                        {{ amountInWords }}\n                    </span>\n                    <hr>\n                    <!-- ---------------- -->\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Payment Mode:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    Cash\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">PhonePe:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    NA\n                                </span>\n                            </div>\n                            <br>\n\n                            <div *ngIf=\"user.bankAccount != null\">\n                                <div>\n                                    <span\n                                        class=\"text-sm text-grey-m2 align-middle font-weight-bold\">{{user?.bankAccount?.bankName}}</span>\n                                </div>\n                                <div>\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">A/c no:</span>\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\n                                        {{user?.bankAccount?.accountNo}}\n                                    </span>\n                                </div>\n\n                                <div>\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Branch:</span>\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\n                                        {{user?.bankAccount?.branchName}}\n                                    </span>\n                                </div>\n                                <div>\n                                    <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">IFSC code:</span>\n                                    <span class=\"text-600 text-110 text-blue align-middle\">\n                                        {{user?.bankAccount?.ifscCode}}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- /.col -->\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\n                            <hr class=\"d-sm-none\" />\n                            <div class=\"text-grey-m2\">\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Amount Paid: </span>\n                                    ₹{{response?.amountPaid.toLocaleString('en-IN') || 0 }}\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Current Balance: </span>\n                                    ₹{{response?.currentBalance.toLocaleString('en-IN') || 0 }}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Previous Balance: </span>\n                                    <span class=\"text-600 text-90\">\n                                        ₹{{((response?.previousBalance - (response?.currentBalance)) >= 0 ? (response?.previousBalance - (response?.currentBalance)) : 0).toLocaleString('en-IN') || 0 }}\n                                    </span>\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Total Pay Balance:</span>\n                                    <span class=\"text-600 text-90\">\n                                        ₹{{response?.previousBalance.toLocaleString('en-IN') || 0 }}\n                                    </span>\n                                </div>\n\n                                <br><br><br>\n                                <div style=\"text-align: center;\">\n                                    <div class=\"my-2\">\n                                        <span class=\"text-600 text-90 font-weight-bold\">Authorised Signatory</span>\n                                    </div>\n                                    <div class=\"my-2\">\n                                        <span class=\"text-600 text-90 font-weight-bold\">({{user?.brandName}})</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- --------------------- -->\n                </div>\n            </div>\n\n            <div class=\"col-12 col-lg-10 offset-lg-1\">\n                <hr>\n                <div style=\"text-align: center;\">\n                    <span class=\"text-300 text-30\">This is a computer generated invoice</span>\n                </div>\n                <div style=\"text-align: center;\" class=\"print-btn\">\n                    <button (click)=\"printPDF()\">Print</button>\n                </div>\n            </div>\n        </div>\n    </div>","import {Router} from '@angular/router';\nimport {AuthService} from '../../_services/auth.service';\nimport {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-navigation-bar',\n    templateUrl: './navigation-bar.component.html',\n    styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent {\n    constructor(private auth: AuthService, private router: Router) {\n    }\n\n    logout() {\n        this.auth.logout();\n        this.router.navigateByUrl('/login');\n    }\n}\n","<nav class=\"navbar navbar-light navbar-expand-sm bg-white shadow-sm\">\n    <div class=\"container-fluid\">\n        <span class=\"navbar-brand\">IKC</span>\n        <div class=\"navbar-nav\">\n            <span (click)=\"logout()\" class=\"nav-item nav-link\" style=\"cursor: pointer;\">Logout</span>\n        </div>\n    </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nexport class TokenStorageService {\n    constructor() {\n    }\n    signOut() {\n        window.sessionStorage.clear();\n    }\n    saveToken(token) {\n        window.sessionStorage.removeItem(TOKEN_KEY);\n        window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n    getToken() {\n        return sessionStorage.getItem(TOKEN_KEY);\n    }\n    saveUser(user) {\n        window.sessionStorage.removeItem(USER_KEY);\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n    getUser() {\n        return JSON.parse(sessionStorage.getItem(USER_KEY));\n    }\n}\nTokenStorageService.ɵfac = function TokenStorageService_Factory(t) { return new (t || TokenStorageService)(); };\nTokenStorageService.ɵprov = i0.ɵɵdefineInjectable({ token: TokenStorageService, factory: TokenStorageService.ɵfac, providedIn: 'root' });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TokenStorageService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n//# sourceMappingURL=token-storage.service.js.map","import { Category } from './../../_model/category';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { autocompleteStringValidator } from 'src/app/validators/category.validator';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { LocationService } from 'src/app/_services/location.service';\nimport { ProductService } from 'src/app/_services/product.service';\n\n@Component({\n    selector: 'app-create-product',\n    templateUrl: './create-product.component.html',\n    styleUrls: ['./create-product.component.css']\n})\nexport class CreateProductComponent implements OnInit {\n    myControl = new FormControl();\n    options: Category[] = [];\n    filteredOptions: Observable<Category[]>;\n    listOfCategories = [];\n    productForm: FormGroup;\n    locationForm: FormGroup;\n    productUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n    citiesList: any;\n    companies: any;\n\n    constructor(private location: LocationService,\n        private productService: ProductService,\n        private categoryService: CategoryService,\n        public dialogRef: MatDialogRef<CreateProductComponent>,\n        @Inject(MAT_DIALOG_DATA) private data) {\n        this.productForm = new FormGroup({\n            categoryName: new FormControl(null, [Validators.required]),\n            productName: new FormControl(null, [Validators.required]),\n            //price: new FormControl(null, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.min(0)]),\n            gst: new FormControl(null, [Validators.required, Validators.pattern('^[0-9]*$'), Validators.min(0)]),\n            hsnNo: new FormControl(null, [Validators.required]),\n            //qty: new FormControl(null, [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.min(0)]),\n        });\n\n        this.locationForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n        });\n\n        if (data != null) {\n            this.productUpdateData = data?.data;\n            this.productForm.controls['categoryName'].setValue(this.productUpdateData.category.categoryName);\n            this.productForm.controls['productName'].setValue(this.productUpdateData.productName);\n            //this.productForm.controls['price'].setValue(this.productUpdateData.price);\n            this.productForm.controls['gst'].setValue(this.productUpdateData.gst);\n            this.productForm.controls['hsnNo'].setValue(this.productUpdateData.hsnNo);\n            //this.productForm.controls['qty'].setValue(this.productUpdateData.qty);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n        this.fetchData();\n    }\n\n    onSubmit() {\n        if (this.productUpdateData?.id != null) {\n            this.updateProduct();\n        } else {\n            this.addProduct();\n        }\n    }\n\n    addProduct() {\n        const selectedCategoryName = this.productForm.controls.categoryName.value;\n        const category = this._findCategory(selectedCategoryName);\n\n        if (category === undefined) {\n            alert('Please select valid Category');\n            return;\n        }\n\n        let data = {\n            productName: this.productForm.controls.productName.value,\n            //price: this.productForm.controls.price.value,\n            gst: this.productForm.controls.gst.value,\n            hsnNo: this.productForm.controls.hsnNo.value,\n            //qty: this.productForm.controls.qty.value,\n            category\n        };\n        this.productService.createProduct(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Product Successfully Updated..!';\n                // this.getCategoryList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    updateProduct() {\n        const selectedCategoryName = this.productForm.controls.categoryName.value;\n        const category = this._findCategory(selectedCategoryName);\n        let data = {\n            id: this.productUpdateData.id,\n            productName: this.productForm.controls.productName.value,\n            //price: this.productForm.controls.price.value,\n            gst: this.productForm.controls.gst.value,\n            hsnNo: this.productForm.controls.hsnNo.value,\n            //qty: this.productForm.controls.qty.value,\n            category,\n        };\n        this.productService.updateProduct(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Product Successfully Created..!';\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n\n    }\n\n    getCategoryList() {\n        this.categoryService.getCategoryList().subscribe(data => {\n            this.options = data;\n            this.productForm.get('categoryName').setValidators([autocompleteStringValidator(data), Validators.required]);\n        });\n    }\n\n    fetchData() {\n        this.categoryService.getCategoryList().subscribe(data => {\n            this.listOfCategories = data;\n            this._valueChangesListner();\n        });\n    }\n\n    private _filter(value: string): Category[] {\n        if (!value) {\n            return this.listOfCategories;\n        }\n        const filterValue = value.toLowerCase();\n        const supplierList = this.listOfCategories.filter(option => option.categoryName.toLowerCase().indexOf(filterValue) === 0)\n        return supplierList;\n    }\n\n    private _findCategory(categoryName: string) {\n        return this.listOfCategories.find(option => option?.categoryName === categoryName);\n    }\n\n    private _valueChangesListner() {\n        this.filteredOptions = this.productForm.controls['categoryName'].valueChanges.pipe(\n            startWith(''),\n            map(value => this._filter(value))\n        );\n    }\n}\n","<div class=\"product-conatiner\">\n    <div class=\"title-header\" *ngIf=\"productUpdateData?.id==null\">\n        <h4 class=\"title\">Add Product</h4>\n    </div>\n    <div class=\"title-header\" *ngIf=\"productUpdateData?.id!=null\">\n        <h4 class=\"title\">Update Product</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"productForm\">\n        <div class=\"addproduct-container\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"categoryName\" [matAutocomplete]=\"supplierAuto\" aria-label=\"Number\" matInput\n                    placeholder=\"Category\" type=\"text\">\n                <mat-autocomplete #supplierAuto=\"matAutocomplete\" autoActiveFirstOption>\n                    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option?.categoryName\">\n                        {{option?.categoryName}}\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n        </div>\n        <div class=\"addproduct-container\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"productName\" matInput placeholder=\"Product Name\">\n            </mat-form-field>\n            <br>\n        </div>\n        <div class=\"addproduct-container\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"hsnNo\" matInput placeholder=\"HSN/SAC\">\n            </mat-form-field>\n            <br>\n        </div>\n        <div class=\"addproduct-container\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"gst\" matInput placeholder=\"GST%\">\n            </mat-form-field>\n            <br>\n        </div>\n        <div class=\"button-container\">\n            <button (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\n                style=\"width: 25%;margin-left: 5px;\">Cancel\n            </button>\n            <button (click)=\"onSubmit()\" [disabled]=\"!productForm.valid\" class=\"btn btn-primary\"\n                style=\"width: 25%;margin-left: 5px;border-radius: 10px;\">Save\n            </button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\nconst AUTH_API = HttpClientHelper.baseURL + '/auth/';\n\nconst httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    login(credentials): Observable<any> {\n        return this.http.post(AUTH_API + 'signin', {\n            username: credentials.username,\n            password: credentials.password\n        }, httpOptions);\n    }\n\n    register(user): Observable<any> {\n        return this.http.post(AUTH_API + 'signup', {\n            username: user.username,\n            email: user.email,\n            password: user.password\n        }, httpOptions);\n    }\n\n    logout() {\n        localStorage.clear();\n    }\n}\n","import { MatTableDataSource } from '@angular/material/table';\nimport { FormArray, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { Product } from './../_model/product';\nimport { Observable } from 'rxjs';\nimport { ProductService } from '../_services/product.service';\nimport { PurchaseOrder } from '../_model/purchaseOrder';\nimport { PurchaseOrderService } from '../_services/purchase-order.service';\nimport { Supplier } from '../_model/supplier';\nimport { SupplierService } from '../_services/supplier.service';\n\n@Component({\n  selector: 'app-purchase-order',\n  templateUrl: './purchase-order.component.html',\n  styleUrls: ['./purchase-order.component.css']\n})\nexport class PurchaseOrderComponent implements OnInit {\n  purchaseOrderDetailData: any;\n  displayedColumns: string[] = ['sno', 'action', 'item', 'price', 'quantity', 'amount', 'taxType', 'taxAmount', 'totalAmount'];\n  filteredSuppliers: Observable<Supplier[]>;\n  filteredProducts: Observable<Product[]>;\n\n  suppliers: Supplier[];\n  products: Product[];\n\n  previousBalance = 0;\n  totalAmount = 0;\n\n  purchaserOrderForm: FormGroup;\n\n  constructor(\n    private _fb: FormBuilder,\n    private productService: ProductService,\n    private supplierService: SupplierService,\n    private purchaseOrderService: PurchaseOrderService) {\n\n    this.suppliers = [];\n    this.products = [];\n  }\n\n  ngOnInit() {\n    this.fetchData();\n    this._createForm();\n    console.log('this.purchaserOrderForm', this.purchaserOrderForm);\n  }\n\n  removeProduct(index: number) {\n    this.purchaseOrderDetailArr.removeAt(index);\n    this.purchaseOrderDetailData = new MatTableDataSource(this.purchaseOrderDetailArr.controls);\n  }\n\n  selectedProduct(selectedProduct: string) {\n    const product = this._findProduct(selectedProduct);\n    this._addProduct(product);\n  }\n\n  selectedSupplier(selectedSupplier: string) {\n    const supplier = this._findSupplier(selectedSupplier);\n    this._supplierBalanceData(supplier?.id);\n  }\n\n  fetchData() {\n    this.supplierService.getSupplierList().subscribe(data => {\n      this.suppliers = data;\n    });\n\n    this.productService.getProductsList().subscribe(data => {\n      this.products = data;\n      this._valueChangesListner();\n    });\n  }\n\n  getCurrentBalance() {\n    return this.totalAmount - this.amountPaid.value;\n  }\n\n  getTotalBalance() {\n    return this.previousBalance + this.getCurrentBalance();\n  }\n\n  save() {\n    // console.log('this.purchaserOrderForm', this.purchaserOrderForm.value);\n    const purchaseOrder: PurchaseOrder = new PurchaseOrder();\n    const supplierName = this.purchaserOrderForm.get('supplierName').value;\n    const supplier = this._findSupplier(supplierName);\n    purchaseOrder.supplier = supplier;\n    purchaseOrder.currentBalance = this.getCurrentBalance();\n    purchaseOrder.purchaseOrderDetail = this.purchaseOrderDetailArr.value;\n    purchaseOrder.totalPrice = this.totalAmount;\n    purchaseOrder.vehicleNo = this.purchaserOrderForm.get('motorVehicleNo').value;\n    purchaseOrder.amountPaid = this.purchaserOrderForm.get('amountPaid').value;\n    purchaseOrder.dueDate = this.purchaserOrderForm.get('dueDate').value;\n\n    if (purchaseOrder.currentBalance <= 0) {\n      purchaseOrder.status = 'PAID';\n    } else if (purchaseOrder.amountPaid > 0) {\n      purchaseOrder.status = 'PARTIAL';\n    } else {\n      purchaseOrder.status = 'DUE';\n    }\n\n    this.purchaseOrderService\n      .createPurchaseOrder(purchaseOrder).subscribe(data => {\n        console.log(data);\n        this._printPdf(data);\n        this.refreshAfterSave();\n      },\n        error => console.log(error));\n  }\n\n  refreshAfterSave() {\n    window.location.reload();\n    // this.previousBalance = 0;\n    // this.purchaseOrderDetailData = [];\n    // this._createForm();\n  }\n\n  private _supplierBalanceData(supplierID: any) {\n    this.purchaseOrderService.getPurchaseOrderBalaceBySupplier(supplierID).subscribe((data: number) => {\n      this.previousBalance = data;\n    }, (error: any) => console.log(error));\n  }\n\n  private _printPdf(response) {\n    const url = `${location.origin}/#table`;\n    const myWindow = window.open(url);\n    myWindow['response'] = response;\n  }\n\n  private _filterSupplier(value: string): Supplier[] {\n    if (!value) {\n      return this.suppliers;\n    }\n    const filterValue = value.toLowerCase();\n    const supplierList = this.suppliers.filter(option => option.supplierName.toLowerCase().indexOf(filterValue) === 0)\n    return supplierList;\n  }\n\n  private _filterProduct(value: string): Product[] {\n    if (!value) {\n      return this.products;\n    }\n    const filterValue = value.toLowerCase();\n    return this.products.filter(option => option.productName.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  private _findProduct(value: string): Product {\n    return this.products.find(option => option.productName === value);\n  }\n\n  private _findSupplier(value: string): Supplier {\n    return this.suppliers.find(option => option.supplierName === value);\n  }\n\n  private _initRow(product) {\n    return this._fb.group({\n      price: [0, [Validators.required, Validators.min(1), Validators.max(100000)]],\n      qtyOrdered: [0, [Validators.required, Validators.min(1), Validators.max(10000)]],\n      product: [product]\n    });\n  }\n\n  private _addProduct(product: Product) {\n    const newRow = this._initRow(product);\n    this.purchaseOrderDetailArr.push(newRow);\n    this.purchaseOrderDetailData = new MatTableDataSource(this.purchaseOrderDetailArr.controls);\n  }\n\n  private _valueChangesListner() {\n    this.filteredSuppliers = this.purchaserOrderForm.controls['supplierName'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterSupplier(value))\n    );\n\n    this.filteredProducts = this.purchaserOrderForm.controls['productName'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterProduct(value))\n    );\n\n    this.purchaseOrderDetailArr.valueChanges.subscribe((productList) => {\n      let totalAmount = 0;\n      productList.forEach(product => {\n        const amount = Number(product.qtyOrdered) * Number(product.price);\n        const taxAmount = amount * (product.product?.gst || 0) / 100;\n        totalAmount += amount + taxAmount;\n      });\n      this.totalAmount = Math.round(totalAmount);\n    });\n  }\n\n  private _createForm() {\n    this.purchaserOrderForm = this._fb.group({\n      supplierName: [''],\n      productName: [''],\n      motorVehicleNo: [''],\n      dueDate: [new Date()],\n      purchaseOrderDetail: this._fb.array([]),\n      amountPaid: [0],\n    });\n  }\n\n  get purchaseOrderDetailArr() {\n    return this.purchaserOrderForm.get('purchaseOrderDetail') as FormArray;\n  }\n\n  get amountPaid() {\n    return this.purchaserOrderForm.get('amountPaid') as FormControl;\n  }\n\n}\n","<form [formGroup]=\"purchaserOrderForm\">\n  <div class=\"d-flex\">\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Supplier</mat-label>\n        <input type=\"text\" placeholder=\"Select Supplier\" aria-label=\"Supplier\" matInput formControlName=\"supplierName\"\n          [matAutocomplete]=\"supplierAuto\">\n        <mat-autocomplete #supplierAuto=\"matAutocomplete\" autoActiveFirstOption\n          (optionSelected)=\"selectedSupplier($event.option.value)\">\n          <mat-option *ngFor=\"let supplier of filteredSuppliers | async\" [value]=\"supplier.supplierName\">\n            {{supplier.supplierName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Product</mat-label>\n        <input type=\"text\" placeholder=\"Select Product\" aria-label=\"Product\" matInput formControlName=\"productName\"\n          required [matAutocomplete]=\"productAuto\">\n        <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption\n          (optionSelected)=\"selectedProduct($event.option.value)\">\n          <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\n            {{product.productName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Motor Vehicle no</mat-label>\n        <input type=\"text\" placeholder=\"Motor Vehicle No\" aria-label=\"Motor Vehicle no\" matInput\n          formControlName=\"motorVehicleNo\">\n      </mat-form-field>\n    </div>\n\n    <mat-form-field class=\"form-group col-2\">\n      <mat-label>Due date</mat-label>\n      <input matInput [matDatepicker]=\"picker\" formControlName=\"dueDate\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n  </div>\n  <div class=\"mat-elevation-z8 purchase-order-container\">\n    <table formArrayName=\"purchaseOrderDetail\" [dataSource]=\"purchaseOrderDetailData\" mat-table>\n      <ng-container matColumnDef=\"sno\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">S. No</th>\n        <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\n        <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"action\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\n        <td *matCellDef=\"let element; let i = index;\" mat-cell>\n          <button (click)=\"removeProduct(i)\" mat-icon-button aria-label=\"Remove product\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"item\">\n        <th *matHeaderCellDef mat-header-cell>Item & Description</th>\n        <td *matCellDef=\"let element\" mat-cell>{{element.get('product').value?.productName}}</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Rate</th>\n        <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\n          <mat-form-field floatLabel=\"never\">\n            <input matInput placeholder=\"Price\" type=\"number\" formControlName=\"price\" required class=\"text-right\">\n            <span matPrefix>₹&nbsp;</span>\n          </mat-form-field>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Quantity</th>\n        <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\n          <mat-form-field floatLabel=\"never\" class=\"text-right\">\n            <input matInput [placeholder]=\"element.get('product')?.value?.qty\" type=\"number\"\n              formControlName=\"qtyOrdered\" required>\n          </mat-form-field>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"amount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value}}</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"taxType\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">\n          CGST/SGST <br> IGST Rate\n        </th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          {{element.get('product')?.value.gst}}%</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"taxAmount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Tax Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100}}\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"totalAmount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Total Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value + element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100}}\n        </td>\n        <td mat-footer-cell *matFooterCellDef class=\"text-right pr-4\">{{ totalAmount | currency:'INR' }} </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n    </table>\n\n    <div class=\"total-container\">\n      <div>\n        <label for=\"name\">Amount Paid </label>\n        <input class=\"amount-edit\" type=\"number\" formControlName=\"amountPaid\" required>\n      </div>\n      <div>\n        <label for=\"name\">Current Balance </label>\n        <span class=\"amount-read-only\">{{ getCurrentBalance() | currency:'INR' }}</span>\n      </div>\n      <div>\n        <label for=\"name\">Previous Balance </label>\n        <span class=\"amount-read-only\">{{previousBalance | currency:'INR' }}</span>\n      </div>\n      <div>\n        <label for=\"name\">Total Pay Balance</label>\n        <span class=\"amount-read-only\">{{getTotalBalance() | currency:'INR'}}</span>\n      </div>\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"save()\"\n        [disabled]=\"purchaserOrderForm.invalid\">Submit</button>\n    </div>\n  </div>\n</form>","import { PurchaseOrderService } from '../_services/purchase-order.service';\nimport { Observable } from 'rxjs';\nimport { SalesOrderService } from '../_services/sales-order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { CustomerBalanceSheet } from '../_model/customer-balance-sheet';\nimport { Customer } from '../_model/customer';\nimport { SupplierBalanceSheet } from '../_model/supplier-balance-sheet';\nimport { Supplier } from '../_model/supplier';\nimport { Location } from '../_model/location';\n\n@Component({\n  selector: 'app-balance-sheet',\n  templateUrl: './balance-sheet.component.html',\n  styleUrls: ['./balance-sheet.component.css']\n})\nexport class BalanceSheetComponent implements OnInit {\n  customerBalanceSheets: Observable<CustomerBalanceSheet>;\n  customerBalanceSheet = new CustomerBalanceSheet();\n  customer = new Customer();\n  location = new Location();\n\n  supplierBalanceSheets: Observable<SupplierBalanceSheet>;\n  SupplierBalanceSheet = new SupplierBalanceSheet();\n  supplier = new Supplier();\n\n  constructor(private salesOrderService: SalesOrderService, private purchaseOrderService: PurchaseOrderService) { }\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.customerBalanceSheets = this.salesOrderService.getAllCustomerSalesOrderBalanceSheet();\n    this.supplierBalanceSheets = this.purchaseOrderService.getAllSupplierPurchaseOrderBalanceSheet();\n  }\n\n}\n","<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Customer List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Customer</th>\n          <th>City</th>\n          <th>Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let customerBalanceSheet of customerBalanceSheets | async\">\n          <td>{{customerBalanceSheet.customer.customerName}}</td>\n          <td>{{customerBalanceSheet.customer.location.cityName}}</td>\n          <td>{{customerBalanceSheet.currentBalance}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n<br>\n<div class=\"panel panel-primary\">\n  <div class=\"panel-heading\">\n    <h2>Supplier List</h2>\n  </div>\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Supplier</th>\n          <th>Company</th>\n          <th>Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let supplierBalanceSheet of supplierBalanceSheets | async\">\n          <td>{{supplierBalanceSheet.supplier.supplierName}}</td>\n          <td>{{supplierBalanceSheet.supplier.company.companyName}}</td>\n          <td>{{supplierBalanceSheet.currentBalance}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SupplierService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/supplier';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getSupplier(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createSupplier(supplier: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, supplier);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateSupplier(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteSupplier(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getSupplierList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {SalesOrderDetail} from './sales-order-detail';\nimport {Customer} from './customer';\n\nexport class SalesOrder {\n    status: string;\n    customer: Customer;\n    totalQty: number;\n    totalPrice: number;\n    amountPaid: number;\n    currentBalance: number;\n    previousBalance: number;\n    salesOrderDetail: Array<SalesOrderDetail>;\n    vehicleNo: string;\n    dueDate: string;\n}\n","import {SalesOrderService} from './../_services/sales-order.service';\nimport {PurchaseOrderService} from './../_services/purchase-order.service';\nimport {SupplierService} from './../_services/supplier.service';\nimport {CustomerService} from './../_services/customer.service';\nimport {ProductService} from '../_services/product.service';\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    productsCount: number;\n    customersCount: number;\n    suppliersCount: number;\n    purchaseOrdersCount: number;\n    salesOrdersCount: number;\n    totalCustomerBalance: number;\n    totalSupplierBalance: number;\n\n    constructor(private productService: ProductService, private customerService: CustomerService, private supplierService: SupplierService, private purchaseOrderService: PurchaseOrderService, private salesOrderService: SalesOrderService) {\n    }\n\n    ngOnInit(): void {\n        this.reload();\n    }\n\n    reload() {\n        this.productService.getProductsList().subscribe(data => {\n                console.log(data);\n                this.productsCount = data.length;\n            },\n            error => console.log(error));\n\n        this.customerService.getCustomerList().subscribe(data => {\n                console.log(data);\n                this.customersCount = data.length;\n            },\n            error => console.log(error));\n\n        this.supplierService.getSupplierList().subscribe(data => {\n                console.log(data);\n                this.suppliersCount = data.length;\n            },\n            error => console.log(error));\n\n        this.purchaseOrderService.getPurchaseOrderList().subscribe(data => {\n                console.log(data);\n                this.purchaseOrdersCount = data.length;\n            },\n            error => console.log(error));\n\n        this.salesOrderService.getSalesOrderList().subscribe(data => {\n                console.log(data);\n                this.salesOrdersCount = data.length;\n            },\n            error => console.log(error));\n\n        this.salesOrderService.getAllCustomerSalesOrderBalance().subscribe(data => {\n                console.log(data);\n                this.totalCustomerBalance = data;\n            },\n            error => console.log(error));\n\n        this.purchaseOrderService.getAllSupplierPurchaseOrderBalace().subscribe(data => {\n                console.log(data);\n                this.totalSupplierBalance = data;\n            },\n            error => console.log(error));\n    }\n}\n","<!-- <div class=\"form-group\">\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Purchase</p>\n    <p>{{purchaseOrdersCount}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Sell</p>\n    <p>{{salesOrdersCount}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Products</p>\n    <p>{{productsCount}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Customers</p>\n    <p>{{customersCount}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Supplier</p>\n    <p>{{suppliersCount}}</p>\n  </button>\n</div>\n\n<div class=\"form-group\">\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Customer Balance</p>\n    <p>{{totalCustomerBalance}}</p>\n  </button>\n\n  <button style=\"margin-left:1cm;\" type=\"submit\" class=\"btn btn-success\">\n    <p>Total Supplier Balance</p>\n    <p>{{totalSupplierBalance}}</p>\n  </button>\n</div> -->\n<div class=\"app-container\">\n\n\n    <div class=\"main-container flex-fill\">\n\n\n        <div class=\"container-fluid mt-2\">\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n\n                    <div class=\"row\">\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter primary\">\n                                <i class=\"fa fa-code-forkl\"></i>\n                                <span class=\"count-numbers\">{{purchaseOrdersCount}}</span>\n                                <span class=\"count-name\">Total Purchase</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter danger\">\n                                <i class=\"fa fa-ticketa\"></i>\n                                <span class=\"count-numbers\">{{salesOrdersCount}}</span>\n                                <span class=\"count-name\">Total Sell</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter success\">\n                                <i class=\"fa fa-users\"></i>\n                                <span class=\"count-numbers\">{{suppliersCount}}</span>\n                                <span class=\"count-name\">Total Supplier</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter info\">\n                                <i class=\"fa fa-users1\"></i>\n                                <span class=\"count-numbers\">{{totalSupplierBalance}}</span>\n                                <span class=\"count-name\">Total Supplier Balance</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CategoryService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/category';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getCategory(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createCategory(category: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, category);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateCategory(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteCategory(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getCategoryList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CustomerService} from 'src/app/_services/customer.service';\nimport {LocationService} from 'src/app/_services/location.service';\nimport {CreateLocationComponent} from '../create-location/create-location.component';\n\n@Component({\n    selector: 'app-location-list',\n    templateUrl: './location-list.component.html',\n    styleUrls: ['./location-list.component.css']\n})\nexport class LocationListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    displayedColumns: string[] = ['cityName', 'id'];\n    dataSource;\n\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private locationService: LocationService) {\n    }\n\n    ngOnInit(): void {\n        this.getLocationList();\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(CreateLocationComponent, {\n            width: '550px',\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getLocationList();\n        });\n    }\n\n    updateLocationModal(updateLocationModal): void {\n        const dialogRef = this.dialog.open(CreateLocationComponent, {\n            width: '550px',\n            data: {data: updateLocationModal}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getLocationList();\n        });\n    }\n\n    getLocationList() {\n        this.locationService.getLocationList().subscribe(data => {\n            this.dataSource = data;\n            this.dataSource = new MatTableDataSource(data);\n            this.dataSource.paginator = this.paginator;\n        }, error => console.log(error));\n    }\n\n    deleteLocation(event) {\n        this.locationService.deleteLocation(event.id).subscribe(\n            response => {\n                this.getLocationList();\n            },\n            error => console.log(error));\n    }\n}\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Location\n        </button>\n    </div>\n</div>\n\n<div class=\"mat-elevation-z8\">\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n        <!-- Position customer -->\n        <ng-container matColumnDef=\"cityName\">\n            <th *matHeaderCellDef mat-header-cell>Location</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.cityName}} </td>\n            <td *matCellDef=\"let element\" hidden mat-cell> {{element.id}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-header-cell> Action</th>\n            <td *matCellDef=\"let element\" mat-cell>\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                    <div>\n                        <button (click)=\"updateLocationModal(element)\" class=\"btn btn-info\"\n                                style=\"width: 80px;margin-left: 15px;\">\n                            Update\n                        </button>\n                        <br>\n                        <button (click)=\"deleteLocation(element)\" class=\"btn btn-danger\"\n                                style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                        </button>\n                        <br>\n                    </div>\n                </mat-menu>\n                <!--  -->\n            </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocationService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/location';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getLocation(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    createLocation(Location: any): Observable<any> {\n        return this.http.post(`${this.baseUrl}`, Location);\n    }\n\n    updateLocation(value: any): Observable<any> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteLocation(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getLocationList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {Customer} from './customer';\n\nexport class CustomerBalanceSheet {\n    customer: Customer;\n    currentBalance: number;\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CompanyService} from 'src/app/_services/company.service';\nimport {ProductService} from 'src/app/_services/product.service';\nimport {CreateProductComponent} from '../create-product/create-product.component';\n\n@Component({\n    selector: 'app-product-list',\n    templateUrl: './product-list.component.html',\n    styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n    displayedColumns: string[] = ['productName', 'category', 'price', 'qty', 'GST', 'HSN/SAC', 'productDesc'];\n    dataSource;\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n\n    constructor(public dialog: MatDialog, private productService: ProductService, private companyService: CompanyService) {\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    ngOnInit(): void {\n\n        this.getProductList();\n    }\n\n    getProductList() {\n        this.productService.getProductsList().subscribe(res => {\n            this.dataSource = res;\n            this.dataSource = new MatTableDataSource(res);\n            this.dataSource.paginator = this.paginator;\n        }, error => console.log(error));\n    }\n\n    createProduct(): void {\n        const dialogRef = this.dialog.open(CreateProductComponent, {\n            width: '550px'\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getProductList();\n        });\n    }\n\n    updateProduct(updateProduct): void {\n        const dialogRef = this.dialog.open(CreateProductComponent, {\n          width: '550px',\n          data: { data: updateProduct }\n        });\n    \n        dialogRef.afterClosed().subscribe(result => {\n          console.log('The dialog was closed');\n          this.getProductList();\n        });\n      }\n\n      deleteProduct(productId) {\n        this.productService.deleteProduct(productId).subscribe(\n          response => {\n            this.getProductList();\n          },\n          error => console.log(error));\n      }\n\n}\n\n\n\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"createProduct()\" class=\"btn btn-info btn-sm\"\n                style=\"height: 35px;width: 150px;\"> Add Product\n        </button>\n    </div>\n\n</div>\n\n<div class=\"mat-elevation-z8\">\n<table [dataSource]=\"dataSource\" mat-table>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"productName\">\n        <th *matHeaderCellDef mat-header-cell> Product</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.productName}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"category\">\n        <th *matHeaderCellDef mat-header-cell> Category</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.category?.categoryName}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"qty\">\n        <th *matHeaderCellDef mat-header-cell> Qty Stock</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.qty}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"price\">\n        <th *matHeaderCellDef mat-header-cell> Rate</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.price  | number : '1.0-2'}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"HSN/SAC\">\n        <th *matHeaderCellDef mat-header-cell> HAN/SAC</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.hsnNo}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"GST\">\n        <th *matHeaderCellDef mat-header-cell> GST</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.gst}}%</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"productDesc\">\n        <th *matHeaderCellDef mat-header-cell> Action</th>\n        <td *matCellDef=\"let element\" mat-cell>\n\n            <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\n                <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                <div>\n                    <button (click)=\"updateProduct(element)\" class=\"btn btn-info\"\n                            style=\"width: 80px;margin-left: 15px;\">\n                        Update\n                    </button>\n                    <br>\n                    <button (click)=\"deleteProduct(element.id)\"\n                            class=\"btn btn-danger\"\n                            style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                    </button>\n                    <br>\n                    <button (click)=\"productDetails(element.id)\"\n                            class=\"btn btn-info\"\n                            style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Details\n                    </button>\n                </div>\n            </mat-menu>\n            <!--  -->\n\n        </td>\n    </ng-container>\n\n    <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import { Observable } from 'rxjs';\nimport { Category } from '../_model/category';\nimport { Product } from '../_model/product';\nimport { ProductService } from '../_services/product.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoryService } from '../_services/category.service';\n\n@Component({\n  selector: 'app-create-productt',\n  templateUrl: './create-product.component.html'\n})\n\nexport class CreateProductComponent implements OnInit {\n  categories: Observable<Category[]>;\n\n  product: Product = new Product();\n  submitted = false;\n\n  constructor(private productService: ProductService,\n              private categoryService: CategoryService,\n              private router: Router) { }\n\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.categories = this.categoryService.getCategoryList();\n  }\n\n  newProduct(): void {\n    this.submitted = false;\n    this.product = new Product();\n  }\n\n  save() {\n    this.productService\n      .createProduct(this.product).subscribe(data => {\n        console.log(data);\n        this.product = new Product();\n        this.gotoList();\n      },\n        error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log(this.product)\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/products']);\n  }\n}\n\n","<!-- <h3>Create Product</h3> -->\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Product</label>\n      <input type=\"text\" class=\"form-control\" id=\"productName\" required [(ngModel)]=\"product.productName\"\n        name=\"productName\">\n    </div> -->\n\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <select formControlName=\"website\" class=\"form-control\">\n        <option disabled>Select Website</option>\n        <option *ngFor=\"let web of websiteList\">{{web}}</option>\n      </select>\n    </div> -->\n\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Category</label>\n      <select name=\"categories\" class=\"form-control\" required [(ngModel)]= \"product.category\" >\n        <option disabled>Select Category</option>\n        <option [ngValue]=\"category\" *ngFor=\"let category of categories | async\">{{category.categoryName}}</option>\n      </select>\n    </div> -->\n\n   \n    <!-- <mat-form-field>\n      <input type=\"text\" placeholder=\"Enter Category\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let category of categories | async\" [value]=\"category.categoryName\">\n          {{category.categoryName}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field> -->\n\n    <!-- <div class=\"form-group\">\n      <label for=\"name\">Price</label>\n      <input type=\"text\" class=\"form-control\" id=\"price\" required [(ngModel)]=\"product.price\" name=\"price\">\n    </div> -->\n\n    <!-- <button type=\"submit\" class=\"btn btn-success\">Submit</button> -->\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newProduct()\">Add</button> -->\n</div>\n","import {Injectable} from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenStorageService {\n\n    constructor() {\n    }\n\n    signOut() {\n        window.sessionStorage.clear();\n    }\n\n    public saveToken(token: string) {\n        window.sessionStorage.removeItem(TOKEN_KEY);\n        window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n\n    public getToken(): string {\n        return sessionStorage.getItem(TOKEN_KEY);\n    }\n\n    public saveUser(user) {\n        window.sessionStorage.removeItem(USER_KEY);\n        window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n\n    public getUser() {\n        return JSON.parse(sessionStorage.getItem(USER_KEY));\n    }\n}\n","import { SalesOrderService } from './../../_services/sales-order.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sales-report',\n  templateUrl: './sales-report.component.html',\n  styleUrls: ['./sales-report.component.css']\n})\nexport class SalesReportComponent implements OnInit {\n  displayedColumns: string[] = ['salesOrderID', 'customerName', 'amountPaid', 'totalPrice', 'createdDate', 'status', 'totalQty'];\n  productColumns: string[] = ['id', 'productName', 'salesPrice', 'qtyOrdered'];\n\n  dataSource = [\n    {\n      \"createdDate\": \"2021-05-12T03:14:14.902\",\n      \"createdBy\": \"anonymousUser\",\n      \"lastModifiedDate\": \"2021-05-12T03:14:14.902\",\n      \"lastModifiedBy\": \"anonymousUser\",\n      \"salesOrderID\": 20,\n      \"totalPrice\": 15297.916666666666,\n      \"amountPaid\": 0,\n      \"currentBalance\": 15297.916666666666,\n      \"previousBalance\": 0,\n      \"totalQty\": 2,\n      \"status\": null,\n      \"customer\": {\n        \"id\": 1,\n        \"customerName\": \"Kallappa\",\n        \"location\": {\n          \"id\": 1,\n          \"cityName\": \"Shinal\",\n          \"createdDate\": \"2021-05-10T17:04:03.843+0000\"\n        },\n        \"phoneNumber\": \"9878923745\",\n        \"createdDate\": \"2021-05-10T17:04:03.932+0000\"\n      },\n      \"salesOrderDetail\": [\n        {\n          \"salesOrderDetailID\": 21,\n          \"product\": {\n            \"id\": 1,\n            \"productName\": \"Urea\",\n            \"price\": 224.16666666666666,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 1,\n              \"categoryName\": \"Fertilizer\",\n              \"categoryDesc\": \"fertilizer desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.958+0000\"\n            },\n            \"productDesc\": \"urea desc\",\n            \"qty\": 110,\n            \"createdDate\": \"2021-05-10T17:04:03.998+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 224.16666666666666,\n          \"profit\": -2242\n        },\n        {\n          \"salesOrderDetailID\": 22,\n          \"product\": {\n            \"id\": 2,\n            \"productName\": \"Tanger\",\n            \"price\": 945.9002463054186,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 3,\n              \"categoryName\": \"Pesticide\",\n              \"categoryDesc\": \"pestiside desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.961+0000\"\n            },\n            \"productDesc\": \"tanger desc\",\n            \"qty\": 203,\n            \"createdDate\": \"2021-05-10T17:04:04.001+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 1275.625,\n          \"profit\": -12756\n        }\n      ]\n    },\n    {\n      \"createdDate\": \"2021-05-12T03:14:14.902\",\n      \"createdBy\": \"anonymousUser\",\n      \"lastModifiedDate\": \"2021-05-12T03:14:14.902\",\n      \"lastModifiedBy\": \"anonymousUser\",\n      \"salesOrderID\": 20,\n      \"totalPrice\": 15297.916666666666,\n      \"amountPaid\": 0,\n      \"currentBalance\": 15297.916666666666,\n      \"previousBalance\": 0,\n      \"totalQty\": 2,\n      \"status\": null,\n      \"customer\": {\n        \"id\": 1,\n        \"customerName\": \"Kallappa\",\n        \"location\": {\n          \"id\": 1,\n          \"cityName\": \"Shinal\",\n          \"createdDate\": \"2021-05-10T17:04:03.843+0000\"\n        },\n        \"phoneNumber\": \"9878923745\",\n        \"createdDate\": \"2021-05-10T17:04:03.932+0000\"\n      },\n      \"salesOrderDetail\": [\n        {\n          \"salesOrderDetailID\": 21,\n          \"product\": {\n            \"id\": 1,\n            \"productName\": \"Urea\",\n            \"price\": 224.16666666666666,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 1,\n              \"categoryName\": \"Fertilizer\",\n              \"categoryDesc\": \"fertilizer desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.958+0000\"\n            },\n            \"productDesc\": \"urea desc\",\n            \"qty\": 110,\n            \"createdDate\": \"2021-05-10T17:04:03.998+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 224.16666666666666,\n          \"profit\": -2242\n        },\n        {\n          \"salesOrderDetailID\": 22,\n          \"product\": {\n            \"id\": 2,\n            \"productName\": \"Tanger\",\n            \"price\": 945.9002463054186,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 3,\n              \"categoryName\": \"Pesticide\",\n              \"categoryDesc\": \"pestiside desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.961+0000\"\n            },\n            \"productDesc\": \"tanger desc\",\n            \"qty\": 203,\n            \"createdDate\": \"2021-05-10T17:04:04.001+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 1275.625,\n          \"profit\": -12756\n        }\n      ]\n    },\n    {\n      \"createdDate\": \"2021-05-12T03:14:14.902\",\n      \"createdBy\": \"anonymousUser\",\n      \"lastModifiedDate\": \"2021-05-12T03:14:14.902\",\n      \"lastModifiedBy\": \"anonymousUser\",\n      \"salesOrderID\": 20,\n      \"totalPrice\": 15297.916666666666,\n      \"amountPaid\": 0,\n      \"currentBalance\": 15297.916666666666,\n      \"previousBalance\": 0,\n      \"totalQty\": 2,\n      \"status\": null,\n      \"customer\": {\n        \"id\": 1,\n        \"customerName\": \"Kallappa\",\n        \"location\": {\n          \"id\": 1,\n          \"cityName\": \"Shinal\",\n          \"createdDate\": \"2021-05-10T17:04:03.843+0000\"\n        },\n        \"phoneNumber\": \"9878923745\",\n        \"createdDate\": \"2021-05-10T17:04:03.932+0000\"\n      },\n      \"salesOrderDetail\": [\n        {\n          \"salesOrderDetailID\": 21,\n          \"product\": {\n            \"id\": 1,\n            \"productName\": \"Urea\",\n            \"price\": 224.16666666666666,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 1,\n              \"categoryName\": \"Fertilizer\",\n              \"categoryDesc\": \"fertilizer desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.958+0000\"\n            },\n            \"productDesc\": \"urea desc\",\n            \"qty\": 110,\n            \"createdDate\": \"2021-05-10T17:04:03.998+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 224.16666666666666,\n          \"profit\": -2242\n        },\n        {\n          \"salesOrderDetailID\": 22,\n          \"product\": {\n            \"id\": 2,\n            \"productName\": \"Tanger\",\n            \"price\": 945.9002463054186,\n            \"currentPrice\": 0,\n            \"category\": {\n              \"id\": 3,\n              \"categoryName\": \"Pesticide\",\n              \"categoryDesc\": \"pestiside desc\",\n              \"createdDate\": \"2021-05-10T17:04:03.961+0000\"\n            },\n            \"productDesc\": \"tanger desc\",\n            \"qty\": 203,\n            \"createdDate\": \"2021-05-10T17:04:04.001+0000\"\n          },\n          \"qtyOrdered\": 10,\n          \"salesPrice\": 0,\n          \"purchasePrice\": 1275.625,\n          \"profit\": -12756\n        }\n      ]\n    },\n  ];\n  \n  constructor(private salesOrderService: SalesOrderService) { }\n\n  ngOnInit(): void {\n    this.getSalesOrderList();\n  }\n\n  getSalesOrderList() {\n    this.salesOrderService.getSalesOrderList().subscribe(res => {\n        // this.dataSource = res;\n    }, error => console.log(error));\n}\n\n}\n","<ng-template #test>\n  <table [dataSource]=\"dataSource[0]?.salesOrderDetail\" mat-table>\n    <ng-container matColumnDef=\"id\">\n      <th *matHeaderCellDef mat-header-cell>ID</th>\n      <td *matCellDef=\"let element\" mat-cell>\n        {{element.product?.id}}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"productName\">\n      <th *matHeaderCellDef mat-header-cell>Product Name</th>\n      <td *matCellDef=\"let element\" mat-cell> {{element.product?.productName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"salesPrice\">\n      <th *matHeaderCellDef mat-header-cell>Sales Price</th>\n      <td *matCellDef=\"let element\" mat-cell> {{element.salesPrice}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"qtyOrdered\">\n      <th *matHeaderCellDef mat-header-cell>Order Qty</th>\n      <td *matCellDef=\"let element\" mat-cell> {{element.qtyOrdered}} </td>\n    </ng-container>\n\n    <tr *matHeaderRowDef=\"productColumns;  sticky: true\" mat-header-row></tr>\n    <tr *matRowDef=\"let row; columns: productColumns;\" mat-row></tr>\n  </table>\n</ng-template>\n\n<table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n  <ng-container matColumnDef=\"salesOrderID\">\n    <th *matHeaderCellDef mat-header-cell>Sales Order ID</th>\n    <td *matCellDef=\"let element\" mat-cell>\n      <button type=\"button\" class=\"btn\" [ngbPopover]=\"test\" [placement]=\"['right', 'auto']\"\n        triggers=\"mouseenter:mouseleave\">\n        {{element.salesOrderID}}\n      </button>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"customerName\">\n    <th *matHeaderCellDef mat-header-cell>Customer</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.customer?.customerName}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"amountPaid\">\n    <th *matHeaderCellDef mat-header-cell>Amount Paid</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.amountPaid}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalPrice\">\n    <th *matHeaderCellDef mat-header-cell>Total Price</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.totalPrice}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"createdDate\">\n    <th *matHeaderCellDef mat-header-cell>Created Date</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.createdDate}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <th *matHeaderCellDef mat-header-cell>Status</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.status}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"totalQty\">\n    <th *matHeaderCellDef mat-header-cell>Total Qty</th>\n    <td *matCellDef=\"let element\" mat-cell> {{element.totalQty}} </td>\n  </ng-container>\n\n  <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\n  <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n</table>","import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'app-action-bar-item',\n    templateUrl: './action-bar-item.component.html',\n    styleUrls: ['./action-bar-item.component.css']\n})\nexport class ActionBarItemComponent {\n    @Input() shadow: boolean = false;\n}\n","<button [class.shadow-sm]=\"shadow\" class=\"action-bar-item\">\n    <div class=\"hamburger-container\">\n        <div class=\"bar1\"></div>\n        <div class=\"bar2\"></div>\n        <div class=\"bar3\"></div>\n    </div>\n    <span _ngcontent-c1=\"\" class=\"action-bar-item-text\">Menu</span>\n</button>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {MatDialogRef, MAT_DIALOG_DATA, MatDialog} from '@angular/material/dialog';\nimport {CompanyService} from 'src/app/_services/company.service';\nimport {LocationService} from 'src/app/_services/location.service';\nimport {SupplierService} from 'src/app/_services/supplier.service';\n\n@Component({\n    selector: 'app-create-supplier',\n    templateUrl: './create-supplier.component.html',\n    styleUrls: ['./create-supplier.component.css']\n})\nexport class CreateSupplierComponent implements OnInit {\n\n    supplierForm: FormGroup;\n    locationForm: FormGroup;\n    supplierUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n    citiesList: any;\n    companies: any;\n\n    constructor(private supplierService: SupplierService, private location: LocationService,\n                private companyService: CompanyService,\n                public dialogRef: MatDialogRef<CreateSupplierComponent>,\n                @Inject(MAT_DIALOG_DATA) private data) {\n        this.supplierUpdateData = data;\n\n        this.supplierForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n            supplierName: new FormControl(null, [Validators.required]),\n            gstIn: new FormControl(null, [Validators.required]),\n            companyName: new FormControl(null, [Validators.required]),\n            phoneNumber: new FormControl(null),\n        });\n\n        this.locationForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n        });\n\n        if (data != null) {\n            this.supplierForm.controls['supplierName'].setValue(this.supplierUpdateData.data.supplierName);\n            this.supplierForm.controls['gstIn'].setValue(this.supplierUpdateData.data.gstIn);\n            this.supplierForm.controls['phoneNumber'].setValue(this.supplierUpdateData.data.phoneNumber);\n            this.supplierForm.controls['cityName'].setValue(this.supplierUpdateData.data.location.cityName);\n            this.supplierForm.controls['companyName'].setValue(this.supplierUpdateData.data.location.companyName);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n        this.getCompanyList();\n        this.getlocationList();\n    }\n\n    onSubmit() {\n        if (this.supplierUpdateData?.data.id != null) {\n            // this.updateCustomer();\n        } else {\n            this.saveSupplier();\n        }\n    }\n\n    saveSupplier() {\n        let data = {\n            supplierName: this.supplierForm.controls.supplierName.value,\n            gstIn: this.supplierForm.controls.gstIn.value,\n            location: this.supplierForm.controls.cityName.value,\n            company: this.supplierForm.controls.companyName.value,\n            phoneNumber: this.supplierForm.controls.phoneNumber.value,\n        };\n\n        this.supplierService.createSupplier(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Supplier Successfully Created..!';\n                // this.getCompanyList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n\n    }\n\n    // updateCustomer() {\n    //   let data = {\n    //     companyID: this.companyUpdateData?.data.id,\n    //     companyName: this.customerForm.controls.companyName.value,\n    //     phoneNumber: this.customerForm.controls.phoneNumber.value\n    //   }\n    //   this.customerService.updateCompany(data).subscribe(res => {\n    //     if (res != null) {\n    //       this.successMsg = \"Company Successfully Updated..!\";\n    //       this.getCompanyList();\n    //       this.closeModal();\n    //     }\n    //   }, error => {\n    //     this.errorMsg = error.error.errorMessage; \"Company Unsuccessfully Updated..\";\n    //   })\n    // }\n\n    getlocationList() {\n        this.location.getLocationList().subscribe(res => {\n            this.citiesList = res;\n        });\n    }\n\n    getCompanyList() {\n        this.companyService.getCompanyList().subscribe(res => {\n            this.companies = res;\n        });\n    }\n}\n","<div class=\"product-conatiner\">\n    <div class=\"title-header\">\n        <h4 class=\"title\">Add Supplier</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"supplierForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"Supplier Name\" formControlName=\"supplierName\">\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"GSTIN\" formControlName=\"gstIn\">\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <mat-select placeholder=\"City\" formControlName=\"cityName\">\n                    <mat-option [value]=\"location\" *ngFor=\"let location of citiesList\">{{location.cityName}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <mat-select placeholder=\"company Name\" formControlName=\"companyName\">\n                    <mat-option [value]=\"company\" *ngFor=\"let company of companies\">{{company.companyName}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"Phone Number\" formControlName=\"phoneNumber\">\n            </mat-form-field>\n        </div>\n        <div class=\"button-container\">\n            <button (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\n                style=\"width: 25%;margin-left: 5px;\">Cancel\n            </button>\n            <button class=\"btn btn-primary\" style=\"width: 25%;margin-left: 5px;border-radius: 10px;\"\n                (click)=\"saveSupplier()\" [disabled]=\"!supplierForm.valid\">Save</button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>","export class Company {\n    companyID: number;\n    companyName: string;\n    phoneNumber: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from 'src/app/_services/token-storage.service.js';\nimport { numberInWords } from '../../utils/numToWords.js';\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n  response: any;\n  totalPrice: number = 0;\n  amountInWords: string = '';\n  user: any = null;\n\n  constructor(private tokenStorageService: TokenStorageService) {}\n\n  ngOnInit(): void {\n    console.log('this.response', JSON.stringify((window['response'])));\n    let purchaseOrder = window['response'];\n    if (!purchaseOrder) {\n      const invoiceData = sessionStorage.getItem('invoiceData');\n      if (invoiceData) {\n        purchaseOrder = JSON.parse(invoiceData);\n      }\n    } else {\n      sessionStorage.setItem('invoiceData', JSON.stringify(purchaseOrder));\n    }\n    \n    this.response = purchaseOrder;\n    document.title = 'Tax Invoice';\n    this._calculateTotals();\n    this.user = this.tokenStorageService.getUser();\n  }\n\n  printPDF() {\n    window.print();\n  }\n\n  private _calculateTotals() {\n    let totalPrice = 0;\n    console.log('response?.purchaseOrderDetail', this.response?.purchaseOrderDetail);\n    this.response?.purchaseOrderDetail?.forEach((purchaseOrder) => {\n      const amount = purchaseOrder?.price * purchaseOrder?.qtyOrdered;\n      const taxAmount = amount * purchaseOrder?.product?.gst/100;\n      totalPrice += amount + taxAmount;\n    });\n\n    this.totalPrice = Math.round(totalPrice);\n\n    this.amountInWords = numberInWords(this.totalPrice);\n  }\n}\n","<div class=\"page-content container\">\n    <div class=\"page-header text-blue-d2\">\n        <div class=\"container px-0\">\n            <div class=\"row pt-4\">\n                <div class=\"col-12 col-lg-10 offset-lg-1\">\n                    <div class=\"d-flex\">\n                        <img src=\"/assets/images/logo.png\" alt=\"image\" class=\"logo\">\n                        <div style=\"text-align: center; width: 55%\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">\n                                    <h2> {{user?.brandName}} </h2>\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle\">GST: {{user?.gstNo}} | PAN:\n                                    {{user?.panNo}}\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle\">P: {{user?.phoneNumber}} | E:\n                                    {{user?.email}}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <hr class=\"row brc-default-l1 mx-n1 mb-4\"/>\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Supplier Name:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.supplier?.supplierName}}\n                                </span>\n                            </div>\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    GSTIN/UIN:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.supplier?.gstIn}}\n                                </span>\n                            </div>\n\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Mobile Number:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.supplier?.phoneNumber}}\n                                </span>\n                            </div>\n                            <div class=\"my-2\">\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold my-2\">\n                                    Address:\n                                </span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{response?.supplier?.location?.cityName}}\n                                </span>\n                            </div>\n                        </div>\n                        <!-- /.col -->\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\n                            <hr class=\"d-sm-none\"/>\n                            <div class=\"text-grey-m2\">\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Date:</span>\n                                    {{(response?.createdDate | date: 'dd/MM/yyyy hh:mm:ss')}}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Due Date:</span>\n                                    {{response?.dueDate | date: 'dd/MM/yyyy hh:mm:ss'}}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Bill Status:</span>\n                                    <span class=\"text-600 text-90\">\n                                        {{response?.status}}\n                                    </span>\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Motor Vehicle no:</span>\n                                    <span class=\"text-600 text-90\">\n                                        {{response?.vehicleNo}}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <!-- ----------------------------------------- -->\n                    <table class=\"table table-bordered\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">SI.<br>NO</th>\n                            <th scope=\"col\">Item & Description</th>\n                            <th scope=\"col\">HSN/SAC</th>\n                            <th scope=\"col\">Rate</th>\n                            <th scope=\"col\">Quantity</th>\n                            <th scope=\"col\">Amount</th>\n                            <th scope=\"col\">\n                                <div style=\"text-align: center;\">CGST/SGST <br> IGST Rate</div>\n                            </th>\n                            <th scope=\"col\">Tax Amount</th>\n                            <th scope=\"col\">Total Amount</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor=\"let cart of response?.purchaseOrderDetail; index as i;\">\n                            <td>{{i + 1}}.</td>\n                            <td>{{cart?.product?.productName}}</td>\n                            <td>{{cart?.product?.hsnNo}}</td>\n                            <td>₹{{cart?.price.toLocaleString('en-IN') || 0}}</td>\n                            <td>{{cart?.qtyOrdered || 0}}</td>\n                            <td>₹{{(cart?.price * cart?.qtyOrdered).toLocaleString('en-IN') || 0}}</td>\n                            <td>{{cart?.product?.gst}}%</td>\n                            <td>₹{{(cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}</td>\n                            <td>\n                                ₹{{(cart.price * cart.qtyOrdered + cart?.product?.gst * cart.price * cart.qtyOrdered / 100).toLocaleString('en-IN')}}\n                            </td>\n                        </tr>\n                        <tr>\n                            <th colspan=\"8\">Total</th>\n                            <th>₹{{totalPrice.toLocaleString('en-IN')}}</th>\n                        </tr>\n                        </tbody>\n                    </table>\n                    <span class=\"text-sm text-grey-m2 align-middle\">Amount chargeable(in words):</span>\n                    <span class=\"text-lg text-grey-m2 align-middle font-weight-bold\">\n                        {{ amountInWords }}\n                    </span>\n                    <hr>\n                    <!-- ---------------- -->\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Payment Mode:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    Cash\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">PhonePe:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    NA\n                                </span>\n                            </div>\n                            <br>\n                            \n                            <div *ngIf=\"user.bankAccount != null\">\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">{{user?.bankAccount?.bankName}}</span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">A/c no:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{user?.bankAccount?.accountNo}}\n                                </span>\n                            </div>\n\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">Branch:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{user?.bankAccount?.branchName}}\n                                </span>\n                            </div>\n                            <div>\n                                <span class=\"text-sm text-grey-m2 align-middle font-weight-bold\">IFSC code:</span>\n                                <span class=\"text-600 text-110 text-blue align-middle\">\n                                    {{user?.bankAccount?.ifscCode}}\n                                </span>\n                            </div>\n                        </div>\n                        </div>\n                        <!-- /.col -->\n                        <div class=\"text-95 col-sm-6 align-self-start d-sm-flex justify-content-end\">\n                            <hr class=\"d-sm-none\"/>\n                            <div class=\"text-grey-m2\">\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Amount Paid: </span>\n                                    ₹{{response?.amountPaid.toLocaleString('en-IN') || 0 }}\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Current Balance: </span>\n                                    ₹{{response?.currentBalance.toLocaleString('en-IN') || 0 }}\n                                </div>\n\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Previous Balance: </span>\n                                    <span class=\"text-600 text-90\">\n                                        ₹{{((response?.previousBalance - (response?.currentBalance)) >= 0 ? (response?.previousBalance - (response?.currentBalance)) : 0).toLocaleString('en-IN') || 0 }}\n                                    </span>\n                                </div>\n                                <div class=\"my-2\">\n                                    <span class=\"text-600 text-90 font-weight-bold\">Total Pay Balance:</span>\n                                    <span class=\"text-600 text-90\">\n                                        ₹{{response?.previousBalance.toLocaleString('en-IN') || 0 }}\n                                    </span>\n                                </div>\n\n                                <br><br><br>\n                                <div style=\"text-align: center;\">\n                                    <div class=\"my-2\">\n                                        <span class=\"text-600 text-90 font-weight-bold\">Authorised Signatory</span>\n                                    </div>\n                                    <div class=\"my-2\">\n                                        <span class=\"text-600 text-90 font-weight-bold\">({{user?.brandName}})</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- --------------------- -->\n                </div>\n            </div>\n\n            <div class=\"col-12 col-lg-10 offset-lg-1\">\n                <hr>\n                <div style=\"text-align: center;\">\n                    <span class=\"text-300 text-30\">This is a computer generated invoice</span>\n                </div>\n                <div style=\"text-align: center;\" class=\"print-btn\">\n                    <button (click)=\"printPDF()\">Print</button>\n                </div>\n            </div>\n        </div>\n    </div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PurchaseOrderService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/purchaseOrder';\n\n    constructor(private http: HttpClient) {\n    }\n\n    createPurchaseOrder(invoice: any): Observable<any> {\n        return this.http.post(`${this.baseUrl}`, invoice);\n    }\n\n    getPurchaseOrderList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n\n    getPurchaseOrderBalaceBySupplier(supplierID: any): any {\n        return this.http.get(`${this.baseUrl}/supplier/${supplierID}`);\n    }\n\n    getAllSupplierPurchaseOrderBalace(): any {\n        return this.http.get(`${this.baseUrl}/supplier`);\n    }\n\n    getAllSupplierPurchaseOrderBalanceSheet(): any {\n        return this.http.get(`${this.baseUrl}/supplier/balance`);\n    }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CompanyService} from 'src/app/_services/company.service';\nimport {CustomerService} from 'src/app/_services/customer.service';\nimport {CreateCompanyComponent} from '../create-company/create-company.component';\n\n@Component({\n    selector: 'app-company-list',\n    templateUrl: './company-list.component.html',\n    styleUrls: ['./company-list.component.css']\n})\nexport class CompanyListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    displayedColumns: string[] = ['companyName', 'phoneNumber', 'id'];\n    dataSource;\n\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private companyService: CompanyService) {\n    }\n\n    ngOnInit(): void {\n        this.getCompanyList();\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(CreateCompanyComponent, {\n            width: '550px',\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getCompanyList();\n        });\n    }\n\n    updateComapny(updateComapny): void {\n        const dialogRef = this.dialog.open(CreateCompanyComponent, {\n            width: '550px',\n            data: {data: updateComapny}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getCompanyList();\n        });\n    }\n\n    getCompanyList() {\n        this.companyService.getCompanyList().subscribe(data => {\n            this.dataSource = data;\n            this.dataSource = new MatTableDataSource(data);\n            this.dataSource.paginator = this.paginator;\n        }, error => console.log(error));\n    }\n\n    deleteCompany(event) {\n        this.companyService.deleteCompany(event.id).subscribe(\n            response => {\n                this.getCompanyList();\n            },\n            error => console.log(error));\n    }\n}\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\"\n                style=\"height: 35px;width: 150px;\"> Add Company\n        </button>\n    </div>\n\n</div>\n\n<div class=\"mat-elevation-z8\">\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n\n        <!-- Position customer -->\n        <ng-container matColumnDef=\"companyName\">\n            <th *matHeaderCellDef mat-header-cell>Company</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.companyName}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-header-cell> Action</th>\n            <td *matCellDef=\"let element\" mat-cell>\n\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                    <div>\n                        <button (click)=\"updateComapny(element)\" class=\"btn btn-info\"\n                                style=\"width: 80px;margin-left: 15px;\">\n                            Update\n                        </button>\n                        <br>\n                        <button (click)=\"deleteCompany(element)\" class=\"btn btn-danger\"\n                                style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                        </button>\n                        <br>\n\n                    </div>\n                </mat-menu>\n                <!--  -->\n\n            </td>\n        </ng-container>\n\n\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SalesOrderService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/salesOrder';\n\n    constructor(private http: HttpClient) {\n    }\n\n    createSalesOrder(invoice: any): Observable<any> {\n        return this.http.post(`${this.baseUrl}`, invoice);\n    }\n\n    getSalesOrderList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n\n    getSalesOrderBalaceByCustomer(customerID: any): any {\n        return this.http.get(`${this.baseUrl}/customer/balance/${customerID}`);\n    }\n\n    getAllCustomerSalesOrderBalance(): any {\n        return this.http.get(`${this.baseUrl}/customer/`);\n    }\n\n    getAllCustomerSalesOrderBalanceSheet(): any {\n        return this.http.get(`${this.baseUrl}/customer/balance`);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'RK FERTILIZER';\n\n  private roles: string[];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username: string;\n\n  constructor(private tokenStorageService: TokenStorageService) { }\n\n  ngOnInit() {\n    // this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    // if (this.isLoggedIn) {\n    //   const user = this.tokenStorageService.getUser();\n    //   this.roles = user.roles;\n\n    //   // this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n    //   // this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n    //   this.username = user.username;\n    // }\n  }\n\n\n}\n","<div id=\"app\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-mobile-menu',\n    templateUrl: './mobile-menu.component.html',\n    styleUrls: ['./mobile-menu.component.scss']\n})\nexport class MobileMenuComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<nav class=\"navbar navbar-expand-lg bg-primary navbar-dark\">\n    <a class=\"navbar-brand\" href=\"#\">RK-FERTILIZER</a>\n    <button aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\"\n            data-target=\"#navbarSupportedContent\" data-toggle=\"collapse\" type=\"button\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard\" routerLinkActive=\"active\">\n                    DASHBOARDS </a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/products\">PRODUCTS</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/salesOrder\">SALES</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/add\">ADD PRODUCT</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/addCategory\"> ADD CATEGORY</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/supplier\"> SUPPLIER</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/location\"> LOCATION</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/company\"> COMPANY</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/dashboard/customer\"> CUSTOMER</a>\n            </li>\n        </ul>\n\n    </div>\n</nav>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CustomerService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/customer';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getCustomer(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createCustomer(customer: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, customer);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateCustomer(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteCustomer(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getCustomerList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {Category} from './category';\n\nexport class Product {\n    productID: number;\n    productName: string;\n    category: Category;\n    price: number;\n    currentPrice: number;\n    qty: number;\n    active: boolean;\n    gst: number;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n    isVisible = false;\n    urlPath = [];\n\n    constructor(\n        private router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.getCurrentPage();\n    }\n\n    getCurrentPage() {\n        const path = this.router.url.split('/');\n        if (path.length === 2 && path[1] === 'dashboard') {\n            this.isVisible = true;\n        }\n        path.forEach((e) => {\n            if (e !== '') {\n                this.urlPath.push(e);\n            }\n        });\n    }\n}\n","<div class=\"app-container\">\n\n    <app-action-bar class=\"d-none d-sm-block\"></app-action-bar>\n\n    <div class=\"main-container flex-fill\">\n        <app-navigation-bar class=\"d-none d-sm-block\"></app-navigation-bar>\n        <!-- only Mobile and Tab View -->\n        <app-mobile-menu class=\"d-block d-sm-none\"></app-mobile-menu>\n        <div class=\"container-fluid mt-2\">\n            <div class=\"row\">\n                <nav aria-label=\"breadcrumb\">\n                    <!-- <ol *ngIf=\"urlPath.length < 2; else visibleCrum\" class=\"breadcrumb\">\n                        <li class=\"breadcrumb-item active\">\n                            <span>{{urlPath[0] | titlecase}}</span>\n                        </li>\n                    </ol> -->\n                    <ng-template #visibleCrum>\n                        <ol class=\"breadcrumb\">\n                            <li *ngFor=\"let item of urlPath\" class=\"breadcrumb-item\">\n                                {{urlPath.pop()}}  {{item}}\n                                <!-- <a [routerLink]=\"[item]\" *ngIf=\"urlPath.pop() != item; else activeMenu\" >{{ item | titlecase}}</a>\n                                <ng-template #activeMenu><span>{{ item | titlecase }}</span></ng-template> -->\n                            </li>\n                        </ol>\n                    </ng-template>\n\n                </nav>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n\n                    <!-- <div class=\"row\" *ngIf=\"isVisible\">\n\n                    <div class=\"col-md-3\">\n                      <div class=\"card-counter primary\">\n                        <i class=\"fa fa-code-fork\"></i>\n                        <span class=\"count-numbers\">12</span>\n                        <span class=\"count-name\">Flowz</span>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                      <div class=\"card-counter danger\">\n                        <i class=\"fa fa-ticket\"></i>\n                        <span class=\"count-numbers\">599</span>\n                        <span class=\"count-name\">Instances</span>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                      <div class=\"card-counter success\">\n                        <i class=\"fa fa-database\"></i>\n                        <span class=\"count-numbers\">6875</span>\n                        <span class=\"count-name\">Data</span>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-3\">\n                      <div class=\"card-counter info\">\n                        <i class=\"fa fa-users\"></i>\n                        <span class=\"count-numbers\">35</span>\n                        <span class=\"count-name\">Users</span>\n                      </div>\n                    </div>\n                  </div> -->\n                    <router-outlet></router-outlet>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { Category } from 'src/app/_model/category';\n\n@Component({\n  selector: 'app-create-category',\n  templateUrl: './create-category.component.html',\n  styleUrls: ['./create-category.component.css']\n})\nexport class CreateCategoryComponent implements OnInit {\n\n  categoryForm: FormGroup;\n  companies: Observable<Category[]>;\n  category: Category = new Category();\n  categoryUpdateData: any;\n  successMsg: any;\n  errorMsg: any;\n  constructor(private categoryService: CategoryService,\n    public dialogRef: MatDialogRef<CreateCategoryComponent>,\n\n    @Inject(MAT_DIALOG_DATA) private data) {\n    this.categoryUpdateData = data;\n\n    this.categoryForm = new FormGroup({\n      categoryName: new FormControl(null, [Validators.required]),\n      categoryDesc: new FormControl(null),\n    })\n\n    if (data != null) {\n      this.categoryForm.controls[\"categoryName\"].setValue(this.categoryUpdateData.data.categoryName);\n      this.categoryForm.controls[\"categoryDesc\"].setValue(this.categoryUpdateData.data.categoryDesc);\n    }\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    if (this.categoryUpdateData?.data.id != null) {\n      this.updateCategory();\n    } else {\n      this.saveCategory();\n    }\n  }\n\n  saveCategory() {\n    let data = {\n      id: this.categoryUpdateData?.data.id,\n      categoryName: this.categoryForm.controls.categoryName.value,\n      categoryDesc: this.categoryForm.controls.categoryDesc.value\n    }\n    this.categoryService.createCategory(data).subscribe(res => {\n      if (res != null) {\n        this.successMsg = \"Category Successfully Created..!\";\n        this.getCategoryList();\n        this.closeModal();\n      }\n    }, error => {\n      this.errorMsg = error.error.errorMessage;\n    })\n  }\n\n  updateCategory() {\n    let data = {\n      id: this.categoryUpdateData?.data.id,\n      categoryName: this.categoryForm.controls.categoryName.value,\n      categoryDesc: this.categoryForm.controls.categoryDesc.value\n    }\n    this.categoryService.updateCategory(data).subscribe(res => {\n      if (res != null) {\n        this.successMsg = \"Category Successfully Updated..!\";\n        this.getCategoryList();\n        this.closeModal();\n      }\n    }, error => {\n      this.errorMsg = error.error.errorMessage;\n    })\n  }\n\n  getCategoryList() {\n    this.categoryService.getCategoryList().subscribe(data => {\n    }, error => console.log(error));\n  }\n}\n","<div class=\"product-conatiner\">\n    <div class=\"title-header\" *ngIf=\"categoryUpdateData?.data.id==null\">\n        <h4 class=\"title\">Add Category</h4>\n    </div>\n    <div class=\"title-header\" *ngIf=\"categoryUpdateData?.data.id!=null\">\n        <h4 class=\"title\">Update Category</h4>\n    </div>\n    <hr>\n    \n    <form [formGroup]=\"categoryForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"Category Name\" formControlName=\"categoryName\" required>\n                <mat-error *ngIf=\"categoryForm.get('categoryName').hasError('required')\">\n                    Category Name required!\n                </mat-error>\n            </mat-form-field>\n        </div>\n        \n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input matInput placeholder=\"Category description\" formControlName=\"categoryDesc\">\n            </mat-form-field>\n        </div>\n\n        <div class=\"button-container\">\n            <button class=\"btn btn-warning\" style=\"width: 25%;margin-left: 5px;\" (click)=\"closeModal()\"\n                aria-label=\"Close\">Cancel</button>\n            <button class=\"btn btn-primary\" style=\"width: 25%;margin-left: 5px;\" (click)=\"onSubmit()\"\n                [disabled]=\"!categoryForm.valid\">Save</button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>","import {Location} from './location';\n\nexport class Customer {\n    id: number;\n    customerName: string;\n    location: Location;\n    phoneNumber: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { BalanceSheetComponent } from './balance-sheet/balance-sheet.component';\nimport { MatTableModule} from '@angular/material/table';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MobileMenuComponent } from './menu/mobile-menu/mobile-menu.component';\nimport { TableModule} from 'primeng/table';\nimport { ActionBarComponent } from './menu/action-bar/action-bar.component';\nimport { ActionBarItemComponent } from './menu/action-bar-item/action-bar-item.component';\nimport { NavigationBarComponent } from './menu/navigation-bar/navigation-bar.component';\nimport { DashboardCategoriesComponent } from './pages/dashboard-categories/dashboard-categories.component';\nimport { DemoMaterialModule } from './material.module';\nimport { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\nimport { CreateCompanyComponent } from './companies/create-company/create-company.component';\nimport { CompanyListComponent } from './companies/company-list/company-list.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { CreateSupplierComponent } from './suppliers/create-supplier/create-supplier.component';\nimport { SupplierListComponent } from './suppliers/supplier-list/supplier-list.component';\nimport { LocationListComponent } from './locations/location-list/location-list.component';\nimport { CreateLocationComponent } from './locations/create-location/create-location.component';\nimport { CreateCategoryComponent } from './categories/create-category/create-category.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport { CreateProductComponent } from './products/create-product/create-product.component';\nimport { TableComponent } from './ui_modules/table/table.component';\nimport { SalesTableComponent } from './ui_modules/table/sales-table.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { SalesReportComponent } from './reports/sales-report/sales-report.component';\nimport { PurchaseReportComponent } from './reports/purchase-report/purchase-report.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateProductComponent,\n    ProductListComponent,\n    CreateCategoryComponent,\n    PurchaseOrderComponent,\n    CreateCustomerComponent,\n    CreateSupplierComponent,\n    CreateLocationComponent,\n    SalesOrderComponent,\n    BalanceSheetComponent,\n    ActionBarComponent,\n    ActionBarItemComponent,\n    NavigationBarComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    NotfoundComponent,\n    MobileMenuComponent,\n    DashboardCategoriesComponent,\n    CustomersListComponent,\n    CreateCompanyComponent,\n    CompanyListComponent,\n    CategoryListComponent,\n    CreateSupplierComponent,\n    SupplierListComponent,\n    LocationListComponent,\n    TableComponent,\n    SalesTableComponent,\n    ReportsComponent,\n    SalesReportComponent,\n    PurchaseReportComponent,\n  ],\n  imports: [\n    TableModule,\n    DemoMaterialModule,\n    MatTableModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    NgbModule,\n    NgxPaginationModule,\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CategoryService } from 'src/app/_services/category.service';\nimport { CreateCategoryComponent } from '../create-category/create-category.component';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})\n\nexport class CategoryListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns: string[] = ['categoryName', 'categoryDesc', 'id'];\n  dataSource;\n\n  constructor(private categoryService: CategoryService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.getCategoryList();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(CreateCategoryComponent, {\n      width: '550px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.getCategoryList();\n    });\n  }\n\n  updateCategory(updateCategory): void {\n    const dialogRef = this.dialog.open(CreateCategoryComponent, {\n      width: '550px',\n      data: { data: updateCategory }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.getCategoryList();\n    });\n  }\n\n  getCategoryList() {\n    this.categoryService.getCategoryList().subscribe(data => {\n      this.dataSource = data;\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n    }, error => console.log(error));\n  }\n\n  deleteCategory(event) {\n    this.categoryService.deleteCategory(event.id).subscribe(\n      response => {\n        this.getCategoryList();\n      },\n      error => console.log(error));\n  }\n}\n","<div>\n  <mat-form-field style=\"width: 300px;\">\n    <mat-label>Search</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\">\n  </mat-form-field>\n  <div class=\"pull-right\">\n    <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\">Add Category </button>\n  </div>\n\n</div>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!-- Position customer -->\n    <ng-container matColumnDef=\"categoryName\">\n      <th mat-header-cell *matHeaderCellDef>Category</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.categoryName}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"categoryDesc\">\n      <th mat-header-cell *matHeaderCellDef> Description </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.categoryDesc}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> Action </th>\n      <td mat-cell *matCellDef=\"let element\">\n\n        <button class=\"kebab-menu-btn\" mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n          <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n          <div>\n            <button (click)=\"updateCategory(element)\" class=\"btn btn-info\" style=\"width: 80px;margin-left: 15px;\">\n              Update </button>\n            <br>\n            <button (click)=\"deleteCategory(element)\" style=\"margin-top:5px;width: 80px;margin-left: 15px;\"\n              class=\"btn btn-danger\">Delete</button>\n            <br>\n          </div>\n        </mat-menu>\n        <!--  -->\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import { MatTableDataSource } from '@angular/material/table';\nimport { FormArray, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { Product } from './../_model/product';\nimport { Observable } from 'rxjs';\nimport { ProductService } from '../_services/product.service';\nimport { SalesOrder } from '../_model/sales-order';\nimport { SalesOrderService } from '../_services/sales-order.service';\nimport { Customer } from '../_model/customer';\nimport { CustomerService } from '../_services/customer.service';\n\n@Component({\n  selector: 'app-sales-order',\n  templateUrl: './sales-order.component.html',\n  styleUrls: ['./sales-order.component.css']\n})\nexport class SalesOrderComponent implements OnInit {\n  salesOrderDetailData: any;\n  displayedColumns: string[] = ['sno', 'action', 'item', 'price', 'quantity', 'amount', 'taxType', 'taxAmount', 'totalAmount'];\n  filteredCustomers: Observable<Customer[]>;\n  filteredProducts: Observable<Product[]>;\n\n  customers: Customer[];\n  products: Product[];\n\n  previousBalance = 0;\n  totalAmount = 0;\n\n  salesOrderForm: FormGroup;\n\n  constructor(\n    private _fb: FormBuilder,\n    private productService: ProductService,\n    private customerService: CustomerService,\n    private salesOrderService: SalesOrderService) {\n\n    this.customers = [];\n    this.products = [];\n  }\n\n  ngOnInit() {\n    this.fetchData();\n    this._createForm();\n    console.log('this.salesOrderForm', this.salesOrderForm);\n  }\n\n  removeProduct(index: number) {\n    this.salesOrderDetailArr.removeAt(index);\n    this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\n  }\n\n  selectedProduct(selectedProduct: string) {\n    const product = this._findProduct(selectedProduct);\n    this._addProduct(product);\n  }\n\n  selectedCustomer(selectedCustomer: string) {\n    const customer = this._findCustomer(selectedCustomer);\n    this._customerBalanceData(customer?.id);\n  }\n\n  fetchData() {\n    this.customerService.getCustomerList().subscribe(data => {\n      this.customers = data;\n    });\n\n    this.productService.getProductsList().subscribe(data => {\n      this.products = data;\n      this._valueChangesListner();\n    });\n  }\n\n  getCurrentBalance() {\n    return this.totalAmount - this.amountPaid.value;\n  }\n\n  getTotalBalance() {\n    return this.previousBalance + this.getCurrentBalance();\n  }\n\n  save() {\n    let isStockAvail = true;\n    this.salesOrderDetailArr.value.forEach(value => {\n      if (value.product.qty < value.qtyOrdered) {\n        alert('No Stock for product: ' + value.product.productName);\n        isStockAvail = false;\n      }\n\n      if (value.qtyOrdered === 0) {\n        alert('Please add Quantity to : ' + value.product.productName);\n        isStockAvail = false;\n      }\n    });\n\n    if (isStockAvail) {\n      // console.log('this.salesOrderForm', this.salesOrderForm.value);\n      const salesOrder: SalesOrder = new SalesOrder();\n      const customerName = this.salesOrderForm.get('customerName').value;\n      const customer = this._findCustomer(customerName);\n      salesOrder.customer = customer;\n      salesOrder.currentBalance = this.getCurrentBalance();\n      salesOrder.salesOrderDetail = this.salesOrderDetailArr.value;\n      salesOrder.totalPrice = this.totalAmount;\n      salesOrder.vehicleNo = this.salesOrderForm.get('motorVehicleNo').value;\n      salesOrder.amountPaid = this.salesOrderForm.get('amountPaid').value;\n      salesOrder.dueDate = this.salesOrderForm.get('dueDate').value;\n\n      if (salesOrder.currentBalance <= 0) {\n        salesOrder.status = 'PAID';\n      } else if (salesOrder.amountPaid > 0) {\n        salesOrder.status = 'PARTIAL';\n      } else {\n        salesOrder.status = 'DUE';\n      }\n\n      this.salesOrderService\n        .createSalesOrder(salesOrder).subscribe(data => {\n          console.log(data);\n          this._printPdf(data);\n          this.refreshAfterSave();\n        },\n          error => console.log(error));\n    }\n  }\n\n  refreshAfterSave() {\n    window.location.reload();\n    // this.previousBalance = 0;\n    // this.salesOrderDetailData = [];\n    // this._createForm();\n  }\n\n  private _customerBalanceData(customerID: any) {\n    this.salesOrderService.getSalesOrderBalaceByCustomer(customerID).subscribe((data: number) => {\n      this.previousBalance = data;\n    }, (error: any) => console.log(error));\n  }\n\n  private _printPdf(response) {\n    const url = `${location.origin}/#salesTable`;\n    const myWindow = window.open(url);\n    myWindow['response'] = response;\n  }\n\n  private _filterCustomer(value: string): Customer[] {\n    if (!value) {\n      return this.customers;\n    }\n    const filterValue = value.toLowerCase();\n    const customerList = this.customers.filter(option => option.customerName.toLowerCase().indexOf(filterValue) === 0)\n    return customerList;\n  }\n\n  private _filterProduct(value: string): Product[] {\n    if (!value) {\n      return this.products;\n    }\n    const filterValue = value.toLowerCase();\n    return this.products.filter(option => option.productName.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  private _findProduct(value: string): Product {\n    return this.products.find(option => option.productName === value);\n  }\n\n  private _findCustomer(value: string): Customer {\n    return this.customers.find(option => option.customerName === value);\n  }\n\n  private _initRow(product) {\n    return this._fb.group({\n      price: [0, [Validators.required, Validators.min(1), Validators.max(100000)]],\n      qtyOrdered: [0, [Validators.required, Validators.min(1), Validators.max(10000)]],\n      product: [product]\n    });\n  }\n\n  private _addProduct(product: Product) {\n    const newRow = this._initRow(product);\n    this.salesOrderDetailArr.push(newRow);\n    this.salesOrderDetailData = new MatTableDataSource(this.salesOrderDetailArr.controls);\n  }\n\n  private _valueChangesListner() {\n    this.filteredCustomers = this.salesOrderForm.controls['customerName'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterCustomer(value))\n    );\n\n    this.filteredProducts = this.salesOrderForm.controls['productName'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterProduct(value))\n    );\n\n    this.salesOrderDetailArr.valueChanges.subscribe((productList) => {\n      let totalAmount = 0;\n      productList.forEach(product => {\n        const amount = Number(product.qtyOrdered) * Number(product.price);\n        const taxAmount = amount * (product.product?.gst || 0) / 100;\n        totalAmount += amount + taxAmount;\n      });\n      this.totalAmount = Math.round(totalAmount);\n    });\n  }\n\n  private _createForm() {\n    this.salesOrderForm = this._fb.group({\n      customerName: [''],\n      productName: [''],\n      motorVehicleNo: [''],\n      dueDate: [new Date()],\n      salesOrderDetail: this._fb.array([]),\n      amountPaid: [0],\n    });\n  }\n\n  get salesOrderDetailArr() {\n    return this.salesOrderForm.get('salesOrderDetail') as FormArray;\n  }\n\n  get amountPaid() {\n    return this.salesOrderForm.get('amountPaid') as FormControl;\n  }\n}\n","<form [formGroup]=\"salesOrderForm\">\n  <div class=\"d-flex\">\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Customer</mat-label>\n        <input type=\"text\" placeholder=\"Select Customer\" aria-label=\"Customer\" matInput formControlName=\"customerName\"\n          [matAutocomplete]=\"customerAuto\">\n        <mat-autocomplete #customerAuto=\"matAutocomplete\" autoActiveFirstOption\n          (optionSelected)=\"selectedCustomer($event.option.value)\">\n          <mat-option *ngFor=\"let customer of filteredCustomers | async\" [value]=\"customer.customerName\">\n            {{customer.customerName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Product</mat-label>\n        <input type=\"text\" placeholder=\"Select Product\" aria-label=\"Product\" matInput formControlName=\"productName\"\n          required [matAutocomplete]=\"productAuto\">\n        <mat-autocomplete #productAuto=\"matAutocomplete\" autoActiveFirstOption\n          (optionSelected)=\"selectedProduct($event.option.value)\">\n          <mat-option *ngFor=\"let product of filteredProducts | async\" [value]=\"product.productName\">\n            {{product.productName}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form-group col-3\">\n      <mat-form-field class=\"forms-fildes\">\n        <mat-label>Motor Vehicle no</mat-label>\n        <input type=\"text\" placeholder=\"Motor Vehicle No\" aria-label=\"Motor Vehicle no\" matInput\n          formControlName=\"motorVehicleNo\">\n      </mat-form-field>\n    </div>\n\n    <mat-form-field class=\"form-group col-2\">\n      <mat-label>Due date</mat-label>\n      <input matInput [matDatepicker]=\"picker\" formControlName=\"dueDate\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n  </div>\n  <div class=\"mat-elevation-z8 sales-order-container\">\n    <table formArrayName=\"salesOrderDetail\" [dataSource]=\"salesOrderDetailData\" mat-table>\n      <ng-container matColumnDef=\"sno\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">S. No</th>\n        <td *matCellDef=\"let element; let i = index;\" mat-cell class=\"text-right pr-4\"> {{i + 1}}. </td>\n        <td mat-footer-cell *matFooterCellDef><strong>Total</strong></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"action\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-left pr-4\">Action</th>\n        <td *matCellDef=\"let element; let i = index;\" mat-cell>\n          <button (click)=\"removeProduct(i)\" mat-icon-button aria-label=\"Remove product\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"item\">\n        <th *matHeaderCellDef mat-header-cell>Item & Description</th>\n        <td *matCellDef=\"let element\" mat-cell>{{element.get('product').value?.productName}}</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Rate</th>\n        <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\n          <mat-form-field floatLabel=\"never\">\n            <input matInput placeholder=\"Price\" type=\"number\" formControlName=\"price\" required\n              class=\"text-right\">\n            <span matPrefix>₹</span>\n          </mat-form-field>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Quantity</th>\n        <td *matCellDef=\"let element; let index = index\" mat-cell class=\"text-right pr-4\" [formGroupName]=\"index\">\n          <mat-form-field floatLabel=\"never\" class=\"text-right\">\n            <input matInput [placeholder]=\"element.get('product')?.value?.qty\" type=\"number\"\n              formControlName=\"qtyOrdered\" required>\n          </mat-form-field>\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"amount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value}}</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"taxType\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">\n          CGST/SGST <br> IGST Rate\n        </th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          {{element.get('product')?.value.gst}}%</td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"taxAmount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Tax Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100}}\n        </td>\n        <td mat-footer-cell *matFooterCellDef></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"totalAmount\">\n        <th *matHeaderCellDef mat-header-cell class=\"text-right pr-4\">Total Amount</th>\n        <td *matCellDef=\"let element\" mat-cell class=\"text-right pr-4\">\n          ₹{{element.get('price')?.value * element.get('qtyOrdered')?.value + element.get('price')?.value * element.get('qtyOrdered')?.value * element.get('product')?.value.gst/100}}\n        </td>\n        <td mat-footer-cell *matFooterCellDef class=\"text-right pr-4\">{{ totalAmount | currency:'INR' }} </td>\n      </ng-container>\n\n      <tr *matHeaderRowDef=\"displayedColumns;  sticky: true\" mat-header-row></tr>\n      <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n      <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n    </table>\n\n    <div class=\"total-container\">\n      <div>\n        <label for=\"name\">Amount Paid </label>\n        <input class=\"amount-edit\" type=\"number\" formControlName=\"amountPaid\" required>\n      </div>\n      <div>\n        <label for=\"name\">Current Balance </label>\n        <span class=\"amount-read-only\">{{ getCurrentBalance() | currency:'INR' }}</span>\n      </div>\n      <div>\n        <label for=\"name\">Previous Balance </label>\n        <span class=\"amount-read-only\">{{previousBalance | currency:'INR' }}</span>\n      </div>\n      <div>\n        <label for=\"name\">Total Pay Balance</label>\n        <span class=\"amount-read-only\">{{getTotalBalance() | currency:'INR'}}</span>\n      </div>\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"save()\" [disabled]=\"salesOrderForm.invalid\">Submit</button>\n    </div>\n  </div>\n</form>","export class Category {\n    categoryID: number;\n    categoryName: string;\n    categoryDesc: string;\n}\n","export class HttpClientHelper {\n    //static baseURL: string = 'http://ec2-18-222-37-157.us-east-2.compute.amazonaws.com:8080';\n\n    //Visual studio with backend\n    static baseURL = 'http://localhost:8080';\n\n    //External tomcat server\n    //static baseURL: string = 'http://localhost:8080/indian-kisan-care-backend';\n\n    //AWS server\n    //static baseURL: string = 'http://ec2-3-133-100-17.us-east-2.compute.amazonaws.com:8080/indian-kisan-care-backend';\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-notfound',\n    templateUrl: './notfound.component.html',\n    styleUrls: ['./notfound.component.scss']\n})\nexport class NotfoundComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"error-wrapper\">\n        <div class=\"man-icon\"></div>\n        <h3 class=\"title\">404</h3>\n        <p class=\"info\">Oh! Page not found</p>\n        <button class=\"home-btn\" routerLink=\"/dashboard\" type=\"button\">HOME</button>\n    </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Observable} from 'rxjs';\nimport {Location} from 'src/app/_model/location';\nimport {LocationService} from 'src/app/_services/location.service';\n\n@Component({\n    selector: 'app-create-location',\n    templateUrl: './create-location.component.html',\n    styleUrls: ['./create-location.component.css']\n})\nexport class CreateLocationComponent implements OnInit {\n    locationForm: FormGroup;\n    locations: Observable<Location[]>;\n    location: Location = new Location();\n    locationUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n    //@ViewChild(MatPaginator) paginator: MatPaginator;\n    //displayedColumns: string[] = ['cityName', 'id'];\n    dataSource;\n\n    constructor(private locationService: LocationService,\n                public dialogRef: MatDialogRef<CreateLocationComponent>,\n                @Inject(MAT_DIALOG_DATA) private data) {\n        this.locationUpdateData = data;\n        this.locationForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required])\n        });\n        if (data != null) {\n            this.locationForm.controls['cityName'].setValue(this.locationUpdateData.data.cityName);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n    }\n\n    onSubmit(): void {\n        if (this.locationUpdateData?.data.id != null) {\n            this.updateLocation();\n        } else {\n            this.saveLocation();\n        }\n    }\n\n    saveLocation() {\n        let data = {\n            id: this.locationUpdateData?.data.id,\n            cityName: this.locationForm.controls.cityName.value\n        };\n        this.locationService.createLocation(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Location Successfully Created..!';\n                this.getLocationList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    updateLocation() {\n        let data = {\n            id: this.locationUpdateData?.data.id,\n            cityName: this.locationForm.controls.cityName.value\n        };\n        this.locationService.updateLocation(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Location Successfully Updated..!';\n                this.getLocationList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    getLocationList() {\n        this.locationService.getLocationList().subscribe(data => {\n            this.dataSource = data;\n            this.dataSource = new MatTableDataSource(data);\n        }, error => console.log(error));\n    }\n}\n","<div class=\"product-conatiner\">\n    <div *ngIf=\"locationUpdateData?.data.id==null\" class=\"title-header\">\n        <h4 class=\"title\">Add location</h4>\n    </div>\n    <div *ngIf=\"locationUpdateData?.data.id!=null\" class=\"title-header\">\n        <h4 class=\"title\">Update location</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"locationForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"cityName\" matInput placeholder=\"location Name\" required>\n                <mat-error *ngIf=\"locationForm.get('cityName').hasError('required')\">\n                    City Name required!\n                </mat-error>\n            </mat-form-field>\n        </div>\n\n        <div class=\"button-container\">\n            <button (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\n            </button>\n            <button (click)=\"onSubmit()\" [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\"\n                    style=\"width: 25%;margin-left: 5px;\">Save\n            </button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>\n","import {Company} from './company';\nimport {Location} from './location';\n\nexport class Supplier {\n    id: number;\n    supplierName: string;\n    company: Company;\n    location: Location;\n    phoneNumber: string;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-dashboard-categories',\n    templateUrl: './dashboard-categories.component.html',\n    styleUrls: ['./dashboard-categories.component.css']\n})\nexport class DashboardCategoriesComponent implements OnInit {\n    isVisible = false;\n    urlPath = [];\n\n    constructor(\n        private router: Router\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.getCurrentPage();\n    }\n\n    getCurrentPage() {\n        const path = this.router.url.split('/');\n        if (path.length === 2 && path[1] === 'dashboard') {\n            this.isVisible = true;\n        }\n        path.forEach((e) => {\n            if (e !== '') {\n                this.urlPath.push(e);\n            }\n        });\n    }\n}\n","<div class=\"app-container\">\n\n\n    <div class=\"main-container flex-fill\">\n\n\n        <div class=\"container-fluid mt-2\">\n\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n\n                    <div class=\"row\">\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter primary\">\n                                <i class=\"fa fa-code-fork\"></i>\n                                <span class=\"count-numbers\">12</span>\n                                <span class=\"count-name\">Flowz</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter danger\">\n                                <i class=\"fa fa-ticket\"></i>\n                                <span class=\"count-numbers\">599</span>\n                                <span class=\"count-name\">Instances</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter success\">\n                                <i class=\"fa fa-database\"></i>\n                                <span class=\"count-numbers\">6875</span>\n                                <span class=\"count-name\">Data</span>\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-3\">\n                            <div class=\"card-counter info\">\n                                <i class=\"fa fa-users\"></i>\n                                <span class=\"count-numbers\">35</span>\n                                <span class=\"count-name\">Users</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CompanyService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/company';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getCompany(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createCompany(company: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, company);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateCompany(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteCompany(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getCompanyList(): Observable<any> {\n        return this.http.get(`${this.baseUrl}`);\n    }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\nimport {Company} from 'src/app/_model/company';\nimport {CompanyService} from 'src/app/_services/company.service';\n\n@Component({\n    selector: 'app-create-company',\n    templateUrl: './create-company.component.html',\n    styleUrls: ['./create-company.component.css']\n})\nexport class CreateCompanyComponent implements OnInit {\n    companyForm: FormGroup;\n    companies: Observable<Company[]>;\n    company: Company = new Company();\n    companyUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n\n    constructor(private companyService: CompanyService,\n                public dialogRef: MatDialogRef<CreateCompanyComponent>,\n                @Inject(MAT_DIALOG_DATA) private data) {\n        this.companyUpdateData = data;\n\n        this.companyForm = new FormGroup({\n            companyName: new FormControl(null, [Validators.required]),\n            phoneNumber: new FormControl(null),\n        });\n        if (data != null) {\n            this.companyForm.controls['companyName'].setValue(this.companyUpdateData.data.companyName);\n            this.companyForm.controls['phoneNumber'].setValue(this.companyUpdateData.data.phoneNumber);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n    }\n\n    onSubmit() {\n        if (this.companyUpdateData?.data.id != null) {\n            this.updateCompany();\n        } else {\n            this.saveCompany();\n        }\n    }\n\n    saveCompany() {\n        let data = {\n            id: this.companyUpdateData?.data.id,\n            companyName: this.companyForm.controls.companyName.value,\n            phoneNumber: this.companyForm.controls.phoneNumber.value\n        };\n        this.companyService.createCompany(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Company Successfully Created..!';\n                this.getCompanyList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    updateCompany() {\n        let data = {\n            id: this.companyUpdateData?.data.id,\n            companyName: this.companyForm.controls.companyName.value,\n            phoneNumber: this.companyForm.controls.phoneNumber.value\n        };\n        this.companyService.updateCompany(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Company Successfully Updated..!';\n                this.getCompanyList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    getCompanyList() {\n        this.companyService.getCompanyList().subscribe(data => {\n        }, error => console.log(error));\n    }\n}\n","<div class=\"product-conatiner\">\n    <div *ngIf=\"companyUpdateData?.data.id==null\" class=\"title-header\">\n        <h4 class=\"title\">Add Company</h4>\n    </div>\n    <div *ngIf=\"companyUpdateData?.data.id!=null\" class=\"title-header\">\n        <h4 class=\"title\">Update Company</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"companyForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"companyName\" matInput placeholder=\"Company Name\" required>\n                <mat-error *ngIf=\"companyForm.get('companyName').hasError('required')\">\n                    First Name required!\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"phoneNumber\" matInput placeholder=\"Phone Number\">\n            </mat-form-field>\n        </div>\n        <div class=\"button-container\">\n            <button (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\n            </button>\n            <button (click)=\"onSubmit()\" [disabled]=\"!companyForm.valid\" class=\"btn btn-primary\"\n                    style=\"width: 25%;margin-left: 5px;\">Save\n            </button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\n@Component({\n  selector: 'app-action-bar',\n  templateUrl: './action-bar.component.html',\n  styleUrls: ['./action-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ActionBarComponent {\n  private _transformer = (node: MasterNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level,\n    };\n  }\n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level, node => node.expandable);\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  dataSource_Order = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  dataSourceReports = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor(private router: Router) {\n    this.dataSource.data = TREE_DATA;\n    this.dataSource_Order.data = Order_DATA;\n    this.dataSourceReports.data = REPORTS;\n\n    console.log('dataSourceReports', this.dataSourceReports);\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  expanded = true;\n\n  goTohome() {\n    this.router.navigate(['dashboard']);\n  }\n  getComponent(item) {\n    if (item == \"Product\") {\n      this.router.navigate(['dashboard/products']);\n    }\n    if (item == \"Category\") {\n      this.router.navigate(['dashboard/categories-list']);\n    }\n    if (item == \"Supplier\") {\n      this.router.navigate(['dashboard/suppliers-list']);\n    }\n    if (item == \"Customer\") {\n      this.router.navigate(['dashboard/customers-list']);\n    }\n    if (item == \"Company\") {\n      this.router.navigate(['dashboard/companies-list']);\n    }\n    if (item == \"Location\") {\n      this.router.navigate(['dashboard/locations-list']);\n    }\n  }\n\n  getOrder(item) {\n    if (item == \"Buy\") {\n      this.router.navigate(['dashboard/purchaseOrder']);\n    }\n    if (item == \"Sell\") {\n      this.router.navigate(['dashboard/salesOrder']);\n    }\n  }\n\n  getReports(item) {\n    if (item === \"Sales Order Report\") {\n      this._redirectToPage('dashboard/reports/sales-report');\n    }\n    if (item === \"Purchase Order Report\") {\n      this._redirectToPage('dashboard/reports/purchase-report');\n    }\n  }\n\n  private _redirectToPage(route) {\n    this.router.navigate([route]);\n  }\n}\n\ninterface MasterNode {\n  name: string;\n  children?: MasterNode[];\n}\nconst Order_DATA: MasterNode[] = [\n  {\n    name: 'Order',\n    children: [\n      {\n        name: 'Buy',\n\n      },\n      {\n        name: 'Sell',\n\n      }\n    ]\n  },\n];\n\nconst REPORTS: MasterNode[] = [\n  {\n    name: 'Reports',\n    children: [\n      {\n        name: 'Sales Order Report',\n      },\n      {\n        name: 'Purchase Order Report',\n      }\n    ]\n  },\n];\n\n// <a class=\"nav-link\" routerLink=\"/dashboard/salesOrder\"><span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">Sales\n// Order</span></a>\n// <a class=\"nav-link\" routerLink=\"/dashboard/purchaseOrder\"> <span *ngIf=\"expanded\"\n// class=\"d-none d-sm-inline\">Purchase\n// Order</span></a>\nconst TREE_DATA: MasterNode[] = [\n  {\n    name: 'MASTER',\n    children: [\n      {\n        name: 'Location',\n      }, {\n        name: 'Company',\n      }, {\n        name: 'Supplier',\n      }, {\n        name: 'Customer',\n      }, {\n        name: 'Category',\n      }, {\n        name: 'Product',\n      }\n    ]\n  },\n];\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n","<div class=\"action-bar\" [class.action-bar-expanded]=\"expanded\">\n\n  <!-- Menu Button -->\n  <!-- <button class=\"action-bar-item shadow-sm\" (click)=\"expanded = !expanded\">\n\t\t<span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\n    <span class=\"action-bar-item-text\">Menu</span>\n\t</button> -->\n\n  <app-action-bar-item [shadow]=\"true\" (click)=\"expanded = !expanded\">\n    <span class=\"action-bar-item-icon jam jam-bar-chart transform-rotate-90\"></span>\n    <span class=\"action-bar-item-text\">Menu</span>\n  </app-action-bar-item>\n\n  <!-- A vertical navbar -->\n  <nav class=\"navbar navbar-light\">\n\n    <!-- Links -->\n    <ul class=\"navbar-nav nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/home\" routerLinkActive=\"active\" style=\"cursor: pointer;\"> <i\n            class=\"fa fa-home \"></i> <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">DASHBOARDS</span> </a>\n      </li>\n\n      <!-- <li class=\"nav-item\" routerLinkActive=\"active\" (mouseover)=\"dispatchPlanmenuTrigger.openMenu()\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/add\" #dispatchPlanmenuTrigger=\"matMenuTrigger\"\n          [matMenuTriggerFor]=\"dispatchPlan1\">\n          <i class=\"fa fa-plus \"></i> <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">MASTER</span>\n        </a>\n        <mat-menu #dispatchPlan1=\"matMenu\" style=\"background-color: #1389fd;\">\n          <span (mouseleave)=\"dispatchPlanmenuTrigger.closeMenu()\">\n            <a class=\"nav-link\" routerLink=\"/dashboard/products\">\n              <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\"> Product </span>\n            </a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/categories-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Category\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/suppliers-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Supplier\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/customers-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Customer\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/companies-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Company\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/locations-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Location\n              </span></a>\n          </span>\n        </mat-menu>\n      </li>  -->\n\n      <mat-tree [dataSource]=\"dataSource_Order\" [treeControl]=\"treeControl\" style=\"margin-right: 10px;\">\n        <!-- This is the tree node template for leaf nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n          <!-- use a disabled button to provide padding for tree leaf -->\n          <button mat-icon-button (click)=\"getOrder(node.name)\"> {{node.name}}</button>\n        </mat-tree-node>\n        <!-- This is the tree node template for expandable nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n          <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'add'}}\n            </mat-icon>\n          </button>\n          {{node.name}}\n        </mat-tree-node>\n      </mat-tree>\n\n      <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n        <!-- This is the tree node template for leaf nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n          <!-- use a disabled button to provide padding for tree leaf -->\n          <button mat-icon-button (click)=\"getComponent(node.name)\"> {{node.name}}</button>\n        </mat-tree-node>\n        <!-- This is the tree node template for expandable nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n          <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n            </mat-icon>\n          </button>\n          {{node.name}}\n        </mat-tree-node>\n      </mat-tree>\n      <!-- \n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/salesOrder\"  routerLinkActive=\"active\"><i class=\"fa fa-suitcase \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">SALES</span></a>\n      </li> -->\n\n      <!-- <li class=\"nav-item\" routerLinkActive=\"active\" (mouseover)=\"dispatchPlanmenu1Trigger.openMenu()\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/add\" #dispatchPlanmenu1Trigger=\"matMenuTrigger\"\n          [matMenuTriggerFor]=\"dispatchPlan\">\n          <i class=\"fa fa-plus \"></i> <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">MASTER</span>\n        </a>\n\n        <mat-menu #dispatchPlan=\"matMenu\" style=\"background-color: #1389fd;\">\n          <span (mouseleave)=\"dispatchPlanmenu1Trigger.closeMenu()\">\n=======\n        <mat-menu #dispatchPlan=\"matMenu\" style=\"background-color: #ababab;\">\n          <span (mouseleave)=\"dispatchPlanmenuTrigger.closeMenu()\">\n\n            <a class=\"nav-link\" routerLink=\"/dashboard/products\">\n              <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\"> Product </span>\n            </a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/categories-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Category\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/suppliers-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Supplier\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/customers-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Customer\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/companies-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Company\n              </span></a>\n            <a class=\"nav-link\" routerLink=\"/dashboard/locations-list\"> <span *ngIf=\"expanded\"\n                class=\"d-none d-sm-inline\">Location\n              </span></a>\n          </span>\n        </mat-menu>\n      </li>  -->\n\n      <mat-tree *ngIf=\"false\" [dataSource]=\"dataSourceReports\" [treeControl]=\"treeControl\" style=\"margin-right: 10px;\">\n        <!-- This is the tree node template for leaf nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n          <!-- use a disabled button to provide padding for tree leaf -->\n          <button mat-icon-button (click)=\"getReports(node.name)\"> {{node.name}}</button>\n\n        </mat-tree-node>\n        <!-- This is the tree node template for expandable nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n          <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'add'}}\n            </mat-icon>\n          </button>\n          {{node.name}}\n        </mat-tree-node>\n      </mat-tree>\n\n      <li class=\"nav-item\" *ngIf=\"false\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/balance-sheet\">\n          <i class=\"fa fa-inr \"></i> <span *ngIf=\"expanded\" class=\"d-none d-sm-inline\">BALANCE SHEET</span></a>\n      </li>\n\n      <li class=\"nav-item\" *ngIf=\"false\">\n        <a class=\"nav-link\" routerLink=\"/dashboard/user\"><i class=\"fa fa-users \"></i> <span *ngIf=\"expanded\"\n            class=\"d-none d-sm-inline\">USERS</span></a>\n      </li>\n\n    </ul>\n\n  </nav>\n</div>","const a = ['', 'One ', 'Two ', 'Three ', 'Four ', 'Five ', 'Six ', 'Seven ', 'Eight ', 'Nine ', 'Ten ', 'eleven ', 'twelve ', 'thirteen ', 'fourteen ', 'fifteen ', 'sixteen ', 'seventeen ', 'eighteen ', 'nineteen '];\nconst b = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n\nexport function numberInWords(num) {\n    if ((num = num.toString()).length > 9) return 'overflow';\n    const n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\n    if (!n)\n        return '';\n    var str = '';\n    str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'Crore ' : '';\n    str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'Lakh ' : '';\n    str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'Thousand ' : '';\n    str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'Hundred ' : '';\n    str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'Only ' : '';\n    return str;\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {CompanyService} from 'src/app/_services/company.service';\nimport {CustomerService} from 'src/app/_services/customer.service';\nimport {CreateCustomerComponent} from '../create-customer/create-customer.component';\n\n@Component({\n    selector: 'app-customers-list',\n    templateUrl: './customers-list.component.html',\n    styleUrls: ['./customers-list.component.css']\n})\nexport class CustomersListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    displayedColumns: string[] = ['customerName', 'GSTIN', 'location', 'phoneNumber', 'id'];\n    dataSource;\n\n    constructor(public dialog: MatDialog, private customerService: CustomerService, private companyService: CompanyService) {\n    }\n\n    ngOnInit(): void {\n        this.getCustomerList();\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(CreateCustomerComponent, {\n            width: '550px',\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getCustomerList();\n        });\n    }\n\n    updateCustomer(updateCustomer): void {\n        const dialogRef = this.dialog.open(CreateCustomerComponent, {\n            width: '550px',\n            data: {data: updateCustomer}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getCustomerList();\n        });\n    }\n\n    getCustomerList() {\n        this.customerService.getCustomerList().subscribe(data => {\n            this.dataSource = data;\n            this.dataSource = new MatTableDataSource(data);\n            this.dataSource.paginator = this.paginator;\n        }, error => console.log(error));\n    }\n\n    deleteCustomer(event) {\n        this.customerService.deleteCustomer(event.id).subscribe(\n            response => {\n                this.getCustomerList();\n            },\n            error => console.log(error));\n    }\n}\n\n\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Customer\n        </button>\n    </div>\n</div>\n\n<div class=\"mat-elevation-z8\">\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n\n        <!--- Note that these columns can be defined in any order.\n              The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Position customer -->\n        <ng-container matColumnDef=\"customerName\">\n            <th *matHeaderCellDef mat-header-cell>Customer</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.customerName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"GSTIN\">\n            <th *matHeaderCellDef mat-header-cell>GSTIN</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.gstIn}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"location\">\n            <th *matHeaderCellDef mat-header-cell> Location</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.location?.cityName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-header-cell [hidden]=\"true\"> Action</th>\n            <td *matCellDef=\"let element\" [hidden]=\"true\" mat-cell>\n\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\"\n                        mat-icon-button>\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                    <div>\n                        <button (click)=\"updateCustomer(element)\" class=\"btn btn-info\"\n                                style=\"width: 80px;margin-left: 15px;\">\n                            Update\n                        </button>\n                        <br>\n                        <button (click)=\"deleteCustomer(element)\" class=\"btn btn-danger\"\n                                style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                        </button>\n                        <br>\n\n                    </div>\n                </mat-menu>\n                <!--  -->\n            </td>\n        </ng-container>\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"symbol\">\n            <th *matHeaderCellDef mat-header-cell> Symbol</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.symbol}} </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {SupplierService} from 'src/app/_services/supplier.service';\nimport {CreateSupplierComponent} from '../create-supplier/create-supplier.component';\n\n@Component({\n    selector: 'app-supplier-list',\n    templateUrl: './supplier-list.component.html',\n    styleUrls: ['./supplier-list.component.css'],\n\n})\nexport class SupplierListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    displayedColumns: string[] = ['supplierName', 'GSTIN', 'company', 'location', 'phoneNumber', 'id'];\n    dataSource;\n\n    constructor(public dialog: MatDialog, private supplierService: SupplierService) {\n    }\n\n    ngOnInit(): void {\n        this.getSupplierList();\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(CreateSupplierComponent, {\n            width: '550px',\n            // data: {name: this.name, animal: this.animal}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getSupplierList();\n        });\n    }\n\n    getSupplierList() {\n        this.supplierService.getSupplierList()\n            .subscribe(data => {\n                this.dataSource = new MatTableDataSource(data);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource = data;\n            }, error => console.log(error));\n    }\n\n    deleteSupllier(event) {\n        this.supplierService.deleteSupplier(event.id).subscribe(\n            response => {\n                this.getSupplierList();\n            },\n            error => console.log(error));\n    }\n\n    updateSuppliers(updateSupplier): void {\n        const dialogRef = this.dialog.open(CreateSupplierComponent, {\n            width: '550px',\n            data: {data: updateSupplier}\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getSupplierList();\n        });\n    }\n}\n","<div>\n    <mat-form-field style=\"width: 300px;\">\n        <mat-label>Search</mat-label>\n        <input #input (keyup)=\"applyFilter($event)\" matInput>\n    </mat-form-field>\n    <div class=\"pull-right\">\n        <button (click)=\"openDialog()\" class=\"btn btn-info btn-sm\" style=\"height: 35px;width: 150px;\"> Add Supplier\n        </button>\n    </div>\n</div>\n<div class=\"mat-elevation-z8\">\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n\n        <!-- Position customer -->\n        <ng-container matColumnDef=\"supplierName\">\n            <th *matHeaderCellDef mat-header-cell>Supplier</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.supplierName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"GSTIN\">\n            <th *matHeaderCellDef mat-header-cell>GSTIN</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.gstIn}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"company\">\n            <th *matHeaderCellDef mat-header-cell> Company</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.company?.companyName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"location\">\n            <th *matHeaderCellDef mat-header-cell> Location</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.location?.cityName}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th *matHeaderCellDef mat-header-cell> Phone Number</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.phoneNumber}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-header-cell [hidden]=\"true\"> Action</th>\n            <td *matCellDef=\"let element\" mat-cell [hidden]=\"true\">\n\n                <button class=\"kebab-menu-btn\" [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" mat-icon-button>\n                    <mat-icon class=\"kebab-menu\">more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" style=\"background-color: #f7f3f3;\">\n                    <div>\n                        <button (click)=\"updateSuppliers(element)\" class=\"btn btn-info\"\n                                style=\"width: 80px;margin-left: 15px;\">\n                            Update\n                        </button>\n                        <br>\n                        <button (click)=\"deleteSupllier(element)\" class=\"btn btn-danger\"\n                                style=\"margin-top:5px;width: 80px;margin-left: 15px;\">Delete\n                        </button>\n                        <br>\n\n                    </div>\n                </mat-menu>\n                <!--  -->\n\n            </td>\n        </ng-container>\n\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"symbol\">\n            <th *matHeaderCellDef mat-header-cell> Symbol</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.symbol}} </td>\n        </ng-container>\n\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[15, 30, 50]\" [pageSize]=\"15\" showFirstLastButtons></mat-paginator>\n</div>\n","import {Supplier} from './supplier';\n\nexport class SupplierBalanceSheet {\n    supplier: Supplier;\n    currentBalance: number;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-purchase-report',\n  templateUrl: './purchase-report.component.html',\n  styleUrls: ['./purchase-report.component.css']\n})\nexport class PurchaseReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>purchase-report works!</p>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {HttpClientHelper} from '../_model/http-client-helper';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n\n    private baseUrl = HttpClientHelper.baseURL + '/product';\n\n    constructor(private http: HttpClient) {\n    }\n\n    getProduct(id: number): Observable<any> {\n        return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createProduct(product: Object): Observable<Object> {\n        return this.http.post(`${this.baseUrl}`, product);\n    }\n\n    // tslint:disable-next-line: ban-types\n    createProductWithCategory(product: Object, id: number): Observable<Object> {\n        return this.http.post(`${this.baseUrl}/${id}`, product);\n    }\n\n    // tslint:disable-next-line: ban-types\n    updateProduct(value: any): Observable<Object> {\n        return this.http.put(`${this.baseUrl}`, value);\n    }\n\n    deleteProduct(id: number): Observable<any> {\n        return this.http.delete(`${this.baseUrl}/${id}`, {responseType: 'text'});\n    }\n\n    getProductsList(): Observable<any> {\n        return this.http.get(this.baseUrl);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (localStorage.getItem('accessToken')) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { TableComponent } from './ui_modules/table/table.component';\nimport { SalesTableComponent } from './ui_modules/table/sales-table.component';\nimport { BalanceSheetComponent } from './balance-sheet/balance-sheet.component';\nimport { SalesOrderComponent } from './sales-order/sales-order.component';\nimport { CreateProductComponent } from './create-product/create-product.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\n\nimport { PurchaseOrderComponent } from './purchase-order/purchase-order.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { AuthGuard } from './auth.guard';\nimport { DashboardCategoriesComponent } from './pages/dashboard-categories/dashboard-categories.component';\nimport { CustomersListComponent } from './customers/customers-list/customers-list.component';\nimport { CompanyListComponent } from './companies/company-list/company-list.component';\nimport { CategoryListComponent } from './categories/category-list/category-list.component';\nimport { SupplierListComponent } from './suppliers/supplier-list/supplier-list.component';\nimport { LocationListComponent } from './locations/location-list/location-list.component';\nimport { CreateLocationComponent } from './locations/create-location/create-location.component';\nimport { CreateCategoryComponent } from './categories/create-category/create-category.component';\nimport { CreateSupplierComponent } from './suppliers/create-supplier/create-supplier.component';\nimport { CreateCustomerComponent } from './customers/create-customer/create-customer.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { SalesReportComponent } from './reports/sales-report/sales-report.component';\nimport { PurchaseReportComponent } from './reports/purchase-report/purchase-report.component';\n\nexport const routes: Routes = [\n  { path: '',   redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login',  component: LoginComponent,  },\n  { path: 'register', component: RegisterComponent },\n  { path: '404', component: NotfoundComponent },\n\n  {path: 'dashboard', pathMatch: 'prefix',  canActivate: [ AuthGuard ],\n    component: DashboardComponent, \n    children : [\n      { path: 'dashboard2', component: DashboardCategoriesComponent, canActivate: [ AuthGuard] },\n      { path: 'products', component: ProductListComponent, canActivate: [ AuthGuard] },\n      { path: 'add', component: CreateProductComponent },\n      { path: 'category', component: CreateCategoryComponent },\n      { path: 'purchaseOrder', component: PurchaseOrderComponent },\n      { path: 'salesOrder', component: SalesOrderComponent },\n      { path: 'location', component: CreateLocationComponent },\n      { path: 'customer', component: CreateCustomerComponent },\n      { path: 'supplier', component: CreateSupplierComponent },\n      { path: 'balance-sheet', component: BalanceSheetComponent },\n      { path: 'customers-list', component: CustomersListComponent },\n      { path: 'companies-list', component: CompanyListComponent },\n      { path: 'suppliers-list', component: SupplierListComponent },\n      { path: 'categories-list', component: CategoryListComponent },\n      { path: 'locations-list', component: LocationListComponent },\n      { path: 'home', component: HomeComponent },\n      { \n        path: 'reports', redirectTo: 'reports/sales-report'\n      },\n      { \n        path: 'reports', component: ReportsComponent,\n        children: [\n          { path: 'sales-report', component: SalesReportComponent },\n          { path: 'purchase-report', component: PurchaseReportComponent },\n        ] \n      },\n    ]\n    },\n  { path: 'table', component: TableComponent },\n  { path: 'salesTable', component: SalesTableComponent },\n  { path: '**', redirectTo: '404', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../_services/auth.service';\nimport {TokenStorageService} from '../_services/token-storage.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    form: any = {};\n    errorMessage = '';\n    roles: string[] = [];\n\n    constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) {\n    }\n\n    ngOnInit() {\n        if (this.tokenStorage.getToken()) {\n            this.roles = this.tokenStorage.getUser().roles;\n        }\n    }\n\n    \n    onSubmit() {\n        this.authService.login(this.form).subscribe(\n            data => {\n                this.tokenStorage.saveToken(data.accessToken);\n                localStorage.setItem('accessToken', data.accessToken);\n                this.tokenStorage.saveUser(data);\n                this.roles = this.tokenStorage.getUser().roles;\n                this.router.navigate(['dashboard/home']);\n            },\n            err => {\n                this.errorMessage = err.error.message;\n            }\n        );\n    }\n\n\n}\n","<div class=\"col-md-12\">\n    <div class=\"card card-container\">\n        <img\n                class=\"profile-img-card\"\n                id=\"profile-img\"\n                src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n        />\n        <form\n                #f=\"ngForm\"\n                (ngSubmit)=\"f.form.valid && onSubmit()\"\n                name=\"form\"\n                novalidate\n        >\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input\n                        #username=\"ngModel\"\n                        [(ngModel)]=\"form.username\"\n                        class=\"form-control\"\n                        name=\"username\"\n                        required\n                        type=\"text\"\n                />\n                <div\n                        *ngIf=\"f.submitted && username.invalid\"\n                        class=\"alert alert-danger\"\n                        role=\"alert\"\n                >\n                    Username is required!\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input\n                        #password=\"ngModel\"\n                        [(ngModel)]=\"form.password\"\n                        class=\"form-control\"\n                        minlength=\"6\"\n                        name=\"password\"\n                        required\n                        type=\"password\"\n                />\n                <div\n                        *ngIf=\"f.submitted && password.invalid\"\n                        class=\"alert alert-danger\"\n                        role=\"alert\"\n                >\n                    <div *ngIf=\"password.errors.required\">Password is required</div>\n                    <div *ngIf=\"password.errors.minlength\">\n                        Password must be at least 6 characters\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary btn-block\">\n                    Login\n                </button>\n            </div>\n\n        </form>\n\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2020 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {CustomerService} from 'src/app/_services/customer.service';\nimport {LocationService} from 'src/app/_services/location.service';\n\n@Component({\n    selector: 'app-create-customer',\n    templateUrl: './create-customer.component.html',\n    styleUrls: ['./create-customer.component.css']\n})\nexport class CreateCustomerComponent implements OnInit {\n\n    customerForm: FormGroup;\n    locationForm: FormGroup;\n    customerUpdateData: any;\n    successMsg: any;\n    errorMsg: any;\n    citiesList: any;\n\n    constructor(private customerService: CustomerService, private location: LocationService,\n                public dialogRef: MatDialogRef<CreateCustomerComponent>,\n                @Inject(MAT_DIALOG_DATA) private data) {\n        this.customerUpdateData = data;\n\n        this.customerForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n            customerName: new FormControl(null, [Validators.required]),\n            gstIn: new FormControl(null),\n            phoneNumber: new FormControl(null),\n        });\n\n        this.locationForm = new FormGroup({\n            cityName: new FormControl(null, [Validators.required]),\n        });\n\n        if (data != null) {\n            this.customerForm.controls['customerName'].setValue(this.customerUpdateData.data.customerName);\n            this.customerForm.controls['gstIn'].setValue(this.customerUpdateData.data.gstIn);\n            this.customerForm.controls['phoneNumber'].setValue(this.customerUpdateData.data.phoneNumber);\n            this.customerForm.controls['cityName'].setValue(this.customerUpdateData.data.location.cityName);\n        }\n    }\n\n    closeModal(): void {\n        this.dialogRef.close();\n    }\n\n    ngOnInit(): void {\n        this.getlocationList();\n    }\n\n    onSubmit() {\n        if (this.customerUpdateData?.data.id != null) {\n            // this.updateCustomer();\n        } else {\n            this.saveCustomer();\n        }\n    }\n\n    saveCustomer() {\n        let data = {\n            customerName: this.customerForm.controls.customerName.value,\n            gstIn: this.customerForm.controls.gstIn.value,\n            location: this.customerForm.controls.cityName.value,\n            phoneNumber: this.customerForm.controls.phoneNumber.value,\n        };\n\n        this.customerService.createCustomer(data).subscribe(res => {\n            if (res != null) {\n                this.successMsg = 'Company Successfully Created..!';\n                // this.getCompanyList();\n                this.closeModal();\n            }\n        }, error => {\n            this.errorMsg = error.error.errorMessage;\n        });\n    }\n\n    // updateCustomer() {\n    //   let data = {\n    //     companyID: this.companyUpdateData?.data.id,\n    //     companyName: this.customerForm.controls.companyName.value,\n    //     phoneNumber: this.customerForm.controls.phoneNumber.value\n    //   }\n    //   this.customerService.updateCompany(data).subscribe(res => {\n    //     if (res != null) {\n    //       this.successMsg = \"Company Successfully Updated..!\";\n    //       this.getCompanyList();\n    //       this.closeModal();\n    //     }\n    //   }, error => {\n    //     this.errorMsg = error.error.errorMessage; \"Company Unsuccessfully Updated..\";\n    //   })\n    // }\n\n    // getCompanyList() {\n    //   this.customerService.getCompanyList().subscribe(data => {\n    //   }, error => console.log(error));\n    // }\n\n    getlocationList() {\n        this.location.getLocationList().subscribe(res => {\n            this.citiesList = res;\n        });\n    }\n}\n","<div class=\"product-conatiner\">\n    <div class=\"title-header\">\n        <h4 class=\"title\">Add Customer</h4>\n    </div>\n    <hr>\n    <form [formGroup]=\"customerForm\">\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"customerName\" matInput placeholder=\"Customer Name\">\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"gstIn\" matInput placeholder=\"GSTIN\">\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <mat-select formControlName=\"cityName\" placeholder=\"City\">\n                    <mat-option *ngFor=\"let location of citiesList\" [value]=\"location\">{{location.cityName}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"title-header\">\n            <mat-form-field class=\"forms-fildes\">\n                <input formControlName=\"phoneNumber\" matInput placeholder=\"Phone Number\">\n            </mat-form-field>\n        </div>\n        <div class=\"button-container\">\n            <button (click)=\"closeModal()\" aria-label=\"Close\" class=\"btn btn-warning\"\n                    style=\"width: 25%;margin-left: 5px;\">Cancel\n            </button>\n            <button (click)=\"saveCustomer()\" [disabled]=\"!customerForm.valid\" class=\"btn btn-primary\"\n                    style=\"width: 25%;margin-left: 5px;\">Save\n            </button>\n        </div>\n        <div class=\"button-container\">\n            <h4 style=\"color: green;\">{{successMsg}}</h4>\n            <h4 style=\"color: red;\">{{errorMsg}}</h4>\n        </div>\n    </form>\n\n</div>\n","export class Location {\n    locationID: number;\n    cityName: string;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}