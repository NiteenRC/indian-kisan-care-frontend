{"version":3,"sources":["../../src/app/components/colorpicker/colorpicker.ts"],"names":["COLORPICKER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ColorPicker","multi","el","renderer","cd","this","format","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onChange","EventEmitter","onShow","onHide","value","h","s","b","defaultColor","onModelChange","onModelTouched","Object","defineProperty","prototype","element","colorSelectorViewChild","colorHandleViewChild","hueViewChild","hueHandleViewChild","onHueMousedown","event","disabled","bindDocumentMousemoveListener","bindDocumentMouseupListener","hueDragging","pickHue","top","nativeElement","getBoundingClientRect","window","pageYOffset","document","documentElement","scrollTop","body","validateHSB","Math","floor","max","min","pageY","updateColorSelector","updateUI","updateModel","emit","originalEvent","getValueToUpdate","onColorMousedown","colorDragging","pickColor","rect","left","scrollLeft","saturation","pageX","brightness","val","HSBtoHEX","HSBtoRGB","writeValue","HEXtoHSB","RGBtoHSB","markForCheck","hsb","style","backgroundColor","inputBgColor","onInputFocus","show","overlayVisible","onOverlayAnimationStart","toState","inline","overlay","appendOverlay","zIndex","String","DomHandler","zindex","alignOverlay","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","onOverlayAnimationEnd","appendTo","appendChild","restoreOverlayAppend","absolutePosition","inputViewChild","relativePosition","hide","onInputClick","selfClick","togglePanel","onInputKeydown","which","preventDefault","onPanelClick","registerOnChange","fn","registerOnTouched","setDisabledState","_this","documentClickListener","documentTarget","ownerDocument","listen","unbindDocumentClickListener","documentMousemoveListener","unbindDocumentMousemoveListener","documentMouseupListener","unbindDocumentMouseupListener","documentResizeListener","onWindowResize","bind","addEventListener","unbindDocumentResizeListener","removeEventListener","scrollHandler","ConnectedOverlayScrollHandler","containerViewChild","unbindScrollListener","validateRGB","rgb","r","g","validateHEX","hex","len","length","o","i","push","join","HEXtoRGB","hexValue","parseInt","indexOf","substring","delta","v","t1","t2","t3","round","RGBtoHEX","toString","key","ngOnDestroy","destroy","Component","args","selector","template","animations","trigger","transition","opacity","transform","animate","providers","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","ChangeDetectorRef","Input","Output","ViewChild","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, Input, Output, OnDestroy, EventEmitter, forwardRef, Renderer2, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { trigger, state, style, transition, animate, AnimationEvent } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const COLORPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPicker),\n    multi: true\n};\n\n@Component({\n    selector: 'p-colorPicker',\n    template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'p-colorpicker p-component':true,'p-colorpicker-overlay':!inline,'p-colorpicker-dragging':colorDragging||hueDragging}\">\n            <input #input type=\"text\" *ngIf=\"!inline\" class=\"p-colorpicker-preview p-inputtext\" readonly=\"readonly\" [ngClass]=\"{'p-disabled': disabled}\"\n                (focus)=\"onInputFocus()\" (click)=\"onInputClick()\" (keydown)=\"onInputKeydown($event)\" [attr.id]=\"inputId\" [attr.tabindex]=\"tabindex\" [disabled]=\"disabled\"\n                [style.backgroundColor]=\"inputBgColor\">\n            <div *ngIf=\"inline || overlayVisible\" [ngClass]=\"{'p-colorpicker-panel': true, 'p-colorpicker-overlay-panel':!inline, 'p-disabled': disabled}\" (click)=\"onPanelClick()\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"inline === true\" \n                    (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\">\n                <div class=\"p-colorpicker-content\">\n                    <div #colorSelector class=\"p-colorpicker-color-selector\" (mousedown)=\"onColorMousedown($event)\">\n                        <div class=\"p-colorpicker-color\">\n                            <div #colorHandle class=\"p-colorpicker-color-handle\"></div>\n                        </div>\n                    </div>\n                    <div #hue class=\"p-colorpicker-hue\" (mousedown)=\"onHueMousedown($event)\">\n                        <div #hueHandle class=\"p-colorpicker-hue-handle\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('{{showTransitionParams}}')\n              ]),\n              transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n              ])\n        ])\n    ],\n    providers: [COLORPICKER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./colorpicker.css']\n})\nexport class ColorPicker implements ControlValueAccessor, OnDestroy {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() inline: boolean;\n\n    @Input() format: string = 'hex';\n\n    @Input() appendTo: string;\n\n    @Input() disabled: boolean;\n\n    @Input() tabindex: string;\n\n    @Input() inputId: string;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ViewChild('input') inputViewChild: ElementRef;\n\n    value: any = {h:0, s: 100, b: 100};\n\n    inputBgColor: string;\n\n    shown: boolean;\n\n    overlayVisible: boolean;\n\n    defaultColor: string = 'ff0000';\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    documentClickListener: Function;\n\n    documentResizeListener: any;\n\n    documentMousemoveListener: Function;\n\n    documentMouseupListener: Function;\n\n    documentHueMoveListener: Function;\n\n    scrollHandler: any;\n\n    selfClick: boolean;\n\n    colorDragging: boolean;\n\n    hueDragging: boolean;\n\n    overlay: HTMLDivElement;\n\n    colorSelectorViewChild: ElementRef;\n\n    colorHandleViewChild: ElementRef;\n\n    hueViewChild: ElementRef;\n\n    hueHandleViewChild: ElementRef;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef) {}\n\n    @ViewChild('colorSelector') set colorSelector(element: ElementRef) {\n        this.colorSelectorViewChild = element;\n    }\n\n    @ViewChild('colorHandle') set colorHandle(element: ElementRef) {\n        this.colorHandleViewChild = element;\n    }\n\n    @ViewChild('hue') set hue(element: ElementRef) {\n        this.hueViewChild = element;\n    }\n\n    @ViewChild('hueHandle') set hueHandle(element: ElementRef) {\n        this.hueHandleViewChild = element;\n    }\n\n    onHueMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n\n        this.hueDragging = true;\n        this.pickHue(event);\n    }\n\n    pickHue(event: MouseEvent) {\n        let top: number = this.hueViewChild.nativeElement.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        this.value = this.validateHSB({\n            h: Math.floor(360 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150),\n            s: this.value.s,\n            b: this.value.b\n        });\n\n        this.updateColorSelector();\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n\n    onColorMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n\n        this.colorDragging = true;\n        this.pickColor(event);\n    }\n\n    pickColor(event: MouseEvent) {\n        let rect = this.colorSelectorViewChild.nativeElement.getBoundingClientRect();\n        let top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        let left = rect.left + document.body.scrollLeft;\n        let saturation = Math.floor(100 * (Math.max(0, Math.min(150, (event.pageX - left)))) / 150);\n        let brightness = Math.floor(100 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150);\n        this.value = this.validateHSB({\n            h: this.value.h,\n            s: saturation,\n            b: brightness\n        });\n\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n\n    getValueToUpdate() {\n        let val: any;\n        switch(this.format) {\n            case 'hex':\n                val = '#' + this.HSBtoHEX(this.value);\n            break;\n\n            case 'rgb':\n                val = this.HSBtoRGB(this.value);\n            break;\n\n            case 'hsb':\n                val = this.value;\n            break;\n        }\n\n        return val;\n    }\n\n    updateModel(): void {\n        this.onModelChange(this.getValueToUpdate());\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            switch(this.format) {\n                case 'hex':\n                    this.value = this.HEXtoHSB(value);\n                break;\n\n                case 'rgb':\n                    this.value = this.RGBtoHSB(value);\n                break;\n\n                case 'hsb':\n                    this.value = value;\n                break;\n            }\n        }\n        else {\n            this.value = this.HEXtoHSB(this.defaultColor);\n        }\n\n        this.updateColorSelector();\n        this.updateUI();\n        this.cd.markForCheck();\n    }\n\n    updateColorSelector() {\n        if (this.colorSelectorViewChild) {\n            const hsb: any = {};\n            hsb.s = 100;\n            hsb.b = 100;\n            hsb.h = this.value.h;\n\n            this.colorSelectorViewChild.nativeElement.style.backgroundColor = '#' + this.HSBtoHEX(hsb);\n        }\n    }\n\n    updateUI() {\n        if (this.colorHandleViewChild && this.hueHandleViewChild.nativeElement) {\n            this.colorHandleViewChild.nativeElement.style.left =  Math.floor(150 * this.value.s / 100) + 'px';\n            this.colorHandleViewChild.nativeElement.style.top =  Math.floor(150 * (100 - this.value.b) / 100) + 'px';\n            this.hueHandleViewChild.nativeElement.style.top = Math.floor(150 - (150 * this.value.h / 360)) + 'px';\n\n        }\n\n        this.inputBgColor = '#' + this.HSBtoHEX(this.value);\n    }\n\n    onInputFocus() {\n        this.onModelTouched();\n    }\n\n    show() {\n        this.overlayVisible = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.overlay = event.element;\n                    this.appendOverlay();\n                    if (this.autoZIndex) {\n                        this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                    }\n                    this.alignOverlay();\n                    this.bindDocumentClickListener();\n                    this.bindDocumentResizeListener();\n                    this.bindScrollListener();\n\n                    this.updateColorSelector();\n                    this.updateUI();\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    onOverlayAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.onShow.emit({})\n                }\n            break;\n\n            case 'void':\n                this.onHide.emit({})\n            break;\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.inputViewChild.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.inputViewChild.nativeElement);\n    }\n\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n\n    onInputClick() {\n        this.selfClick = true;\n        this.togglePanel();\n    }\n\n    togglePanel() {\n        if (!this.overlayVisible)\n            this.show();\n        else\n            this.hide();\n    }\n\n    onInputKeydown(event: KeyboardEvent) {\n        switch(event.which) {\n            //space\n            case 32:\n                this.togglePanel();\n                event.preventDefault();\n            break;\n\n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n            break;\n        }\n    }\n\n    onPanelClick() {\n        this.selfClick = true;\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', () => {\n                if (!this.selfClick) {\n                    this.overlayVisible = false;\n                    this.unbindDocumentClickListener();\n                }\n\n                this.selfClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentMousemoveListener() {\n        if (!this.documentMousemoveListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentMousemoveListener = this.renderer.listen(documentTarget, 'mousemove', (event: MouseEvent) => {\n                if (this.colorDragging) {\n                    this.pickColor(event);\n                }\n\n                if (this.hueDragging) {\n                    this.pickHue(event);\n                }\n            });\n        }\n    }\n\n    unbindDocumentMousemoveListener() {\n        if (this.documentMousemoveListener) {\n            this.documentMousemoveListener();\n            this.documentMousemoveListener = null;\n        }\n    }\n\n    bindDocumentMouseupListener() {\n        if (!this.documentMouseupListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentMouseupListener = this.renderer.listen(documentTarget, 'mouseup', () => {\n                this.colorDragging = false;\n                this.hueDragging = false;\n                this.unbindDocumentMousemoveListener();\n                this.unbindDocumentMouseupListener();\n            });\n        }\n    }\n\n    unbindDocumentMouseupListener() {\n        if (this.documentMouseupListener) {\n            this.documentMouseupListener();\n            this.documentMouseupListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onWindowResize() {\n        this.hide();\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    validateHSB(hsb) {\n        return {\n            h: Math.min(360, Math.max(0, hsb.h)),\n            s: Math.min(100, Math.max(0, hsb.s)),\n            b: Math.min(100, Math.max(0, hsb.b))\n        };\n    }\n\n    validateRGB(rgb) {\n        return {\n            r: Math.min(255, Math.max(0, rgb.r)),\n            g: Math.min(255, Math.max(0, rgb.g)),\n            b: Math.min(255, Math.max(0, rgb.b))\n        };\n    }\n\n    validateHEX(hex) {\n        var len = 6 - hex.length;\n        if (len > 0) {\n            var o = [];\n            for (var i=0; i<len; i++) {\n                o.push('0');\n            }\n            o.push(hex);\n            hex = o.join('');\n        }\n        return hex;\n    }\n\n    HEXtoRGB(hex) {\n        let hexValue = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n        return {r: hexValue >> 16, g: (hexValue & 0x00FF00) >> 8, b: (hexValue & 0x0000FF)};\n    }\n\n    HEXtoHSB(hex) {\n        return this.RGBtoHSB(this.HEXtoRGB(hex));\n    }\n\n    RGBtoHSB(rgb) {\n        var hsb = {\n            h: 0,\n            s: 0,\n            b: 0\n        };\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\n        var delta = max - min;\n        hsb.b = max;\n        hsb.s = max != 0 ? 255 * delta / max : 0;\n        if (hsb.s != 0) {\n            if (rgb.r == max) {\n                hsb.h = (rgb.g - rgb.b) / delta;\n            } else if (rgb.g == max) {\n                hsb.h = 2 + (rgb.b - rgb.r) / delta;\n            } else {\n                hsb.h = 4 + (rgb.r - rgb.g) / delta;\n            }\n        } else {\n            hsb.h = -1;\n        }\n        hsb.h *= 60;\n        if (hsb.h < 0) {\n            hsb.h += 360;\n        }\n        hsb.s *= 100/255;\n        hsb.b *= 100/255;\n        return hsb;\n    }\n\n    HSBtoRGB(hsb) {\n        var rgb = {\n            r: null, g: null, b: null\n        };\n        let h: number = hsb.h;\n        let s: number = hsb.s*255/100;\n        let v: number = hsb.b*255/100;\n        if (s == 0) {\n            rgb = {\n                r: v,\n                g: v,\n                b: v\n            }\n        }\n        else {\n            let t1: number = v;\n            let t2: number = (255-s)*v/255;\n            let t3: number = (t1-t2)*(h%60)/60;\n            if (h==360) h = 0;\n            if (h<60) {rgb.r=t1;\trgb.b=t2; rgb.g=t2+t3}\n            else if (h<120) {rgb.g=t1; rgb.b=t2;\trgb.r=t1-t3}\n            else if (h<180) {rgb.g=t1; rgb.r=t2;\trgb.b=t2+t3}\n            else if (h<240) {rgb.b=t1; rgb.r=t2;\trgb.g=t1-t3}\n            else if (h<300) {rgb.b=t1; rgb.g=t2;\trgb.r=t2+t3}\n            else if (h<360) {rgb.r=t1; rgb.g=t2;\trgb.b=t1-t3}\n            else {rgb.r=0; rgb.g=0;\trgb.b=0}\n        }\n        return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};\n    }\n\n    RGBtoHEX(rgb) {\n        var hex = [\n            rgb.r.toString(16),\n            rgb.g.toString(16),\n            rgb.b.toString(16)\n        ];\n\n        for(var key in hex) {\n            if (hex[key].length == 1) {\n                hex[key] = '0' + hex[key];\n            }\n        }\n\n        return hex.join('');\n    }\n\n    HSBtoHEX(hsb) {\n        return this.RGBtoHEX(this.HSBtoRGB(hsb));\n    }\n\n    onOverlayHide() {\n        this.unbindScrollListener();\n        this.unbindDocumentResizeListener();\n        this.unbindDocumentClickListener();\n        this.overlay = null;\n    }\n\n    ngOnDestroy() {\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ColorPicker],\n    declarations: [ColorPicker]\n})\nexport class ColorPickerModule { }\n"]}