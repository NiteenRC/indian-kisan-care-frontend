{"version":3,"sources":["../../src/app/components/dialog/dialog.ts"],"names":["idx","showAnimation","animation","style","transform","opacity","animate","hideAnimation","Dialog","el","renderer","zone","cd","this","draggable","resizable","closeOnEscape","closable","showHeader","blockScroll","autoZIndex","baseZIndex","minX","minY","focusOnShow","keepInViewport","focusTrap","transitionOptions","closeIcon","minimizeIcon","maximizeIcon","onShow","EventEmitter","onHide","visibleChange","onResizeInit","onResizeEnd","onDragEnd","onMaximize","id","_style","_position","transformOptions","Object","defineProperty","prototype","_positionLeft","console","log","_positionTop","_responsive","_breakpoint","ngAfterContentInit","_this","templates","forEach","item","getType","headerTemplate","template","contentTemplate","footerTemplate","_visible","value","maskVisible","assign","originalStyle","focus","focusable","DomHandler","findSingle","container","runOutsideAngular","setTimeout","close","event","emit","preventDefault","enableModality","dismissableMask","maskClickListener","listen","wrapper","isSameNode","target","modal","addClass","document","body","disableModality","unbindMaskClickListener","removeClass","destroyed","detectChanges","maximize","maximized","moveOnTop","zIndex","String","zindex","initDrag","hasClass","parentElement","dragging","lastPageX","pageX","lastPageY","pageY","margin","onKeydown","which","focusableElements","getFocusableElements","length","ownerDocument","activeElement","focusedIndex","indexOf","shiftKey","onDrag","containerWidth","getOuterWidth","containerHeight","getOuterHeight","deltaX","deltaY","offset","getOffset","leftPos","left","topPos","top","viewport","getViewport","position","width","height","endDrag","resetPosition","center","initResize","resizing","onResize","contentHeight","contentViewChild","nativeElement","newWidth","newHeight","minWidth","minHeight","parseInt","resizeEnd","bindGlobalListeners","bindDocumentDragListener","bindDocumentDragEndListener","bindDocumentResizeListeners","bindDocumentEscapeListener","unbindGlobalListeners","unbindDocumentDragListener","unbindDocumentDragEndListener","unbindDocumentResizeListeners","unbindDocumentEscapeListener","documentDragListener","bind","window","addEventListener","removeEventListener","documentDragEndListener","documentResizeListener","documentResizeEndListener","documentTarget","documentEscapeListener","appendContainer","appendTo","appendChild","restoreAppend","onAnimationStart","toState","element","onAnimationEnd","onContainerDestroy","ngOnDestroy","Component","args","selector","animations","trigger","transition","useAnimation","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","NgZone","ChangeDetectorRef","Input","ContentChild","Header","Footer","ContentChildren","PrimeTemplate","ViewChild","Output","NgModule","imports","CommonModule","FocusTrapModule","RippleModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,\n    ContentChildren,QueryList,ViewChild,NgZone, ChangeDetectorRef,ViewRef,ChangeDetectionStrategy, ViewEncapsulation, AfterContentInit, TemplateRef, ContentChild} from '@angular/core';\nimport {trigger,style,transition,animate, AnimationEvent, animation, useAnimation} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {Header,Footer,SharedModule, PrimeTemplate} from 'primeng/api';\nimport {FocusTrapModule} from 'primeng/focustrap';\nimport {RippleModule} from 'primeng/ripple';\n\nlet idx: number = 0;\n\nconst showAnimation = animation([\n    style({ transform: '{{transform}}', opacity: 0 }),\n    animate('{{transition}}')\n]);\n\nconst hideAnimation = animation([\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\n]);\n\n@Component({\n    selector: 'p-dialog',\n    template: `\n        <div *ngIf=\"maskVisible\" [class]=\"maskStyleClass\"\n            [ngClass]=\"{'p-dialog-mask': true, 'p-component-overlay': this.modal, 'p-dialog-mask-scrollblocker': this.modal || this.blockScroll,\n                'p-dialog-left': position === 'left',\n                'p-dialog-right': position === 'right',\n                'p-dialog-top': position === 'top',\n                'p-dialog-top-left': position === 'topleft' || position === 'top-left',\n                'p-dialog-top-right': position === 'topright' || position === 'top-right',\n                'p-dialog-bottom': position === 'bottom',\n                'p-dialog-bottom-left': position === 'bottomleft' || position === 'bottom-left',\n                'p-dialog-bottom-right': position === 'bottomright' || position === 'bottom-right'}\">\n            <div #container [ngClass]=\"{'p-dialog p-component':true, 'p-dialog-rtl':rtl,'p-dialog-draggable':draggable,'p-dialog-resizable':resizable, 'p-dialog-maximized': maximized}\"\n                [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"visible\" pFocusTrap [pFocusTrapDisabled]=\"focusTrap === false\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" [attr.aria-labelledby]=\"id + '-label'\">\n                <div #titlebar class=\"p-dialog-header\" (mousedown)=\"initDrag($event)\" *ngIf=\"showHeader\">\n                    <span [attr.id]=\"id + '-label'\" class=\"p-dialog-title\" *ngIf=\"header\">{{header}}</span>\n                    <span [attr.id]=\"id + '-label'\" class=\"p-dialog-title\" *ngIf=\"headerFacet\">\n                        <ng-content select=\"p-header\"></ng-content>\n                    </span>\n                    <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                    <div class=\"p-dialog-header-icons\">\n                        <button *ngIf=\"maximizable\" type=\"button\" [ngClass]=\"{'p-dialog-header-icon p-dialog-header-maximize p-link':true}\" (click)=\"maximize()\" (keydown.enter)=\"maximize()\" tabindex=\"-1\" pRipple>\n                            <span class=\"p-dialog-header-maximize-icon\" [ngClass]=\"maximized ? minimizeIcon : maximizeIcon\"></span>\n                        </button>\n                        <button *ngIf=\"closable\" type=\"button\" [ngClass]=\"{'p-dialog-header-icon p-dialog-header-close p-link':true}\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\" tabindex=\"-1\" pRipple>\n                            <span class=\"p-dialog-header-close-icon\" [ngClass]=\"closeIcon\"></span>\n                        </button>\n                    </div>\n                </div>\n                <div #content [ngClass]=\"'p-dialog-content'\" [ngStyle]=\"contentStyle\" [class]=\"contentStyleClass\">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </div>\n                <div #footer class=\"p-dialog-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                </div>\n                <div *ngIf=\"resizable\" class=\"p-resizable-handle\" style=\"z-index: 90;\" (mousedown)=\"initResize($event)\"></div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('animation', [\n            transition('void => visible', [\n                useAnimation(showAnimation)\n            ]),\n            transition('visible => void', [\n                useAnimation(hideAnimation)\n            ])\n        ])\n    ],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../dialog/dialog.css']\n})\nexport class Dialog implements AfterContentInit,OnDestroy {\n\n    @Input() header: string;\n\n    @Input() draggable: boolean = true;\n\n    @Input() resizable: boolean = true;\n\n    @Input() get positionLeft(): number {\n        return 0;\n    };\n\n    set positionLeft(_positionLeft: number) {\n        console.log(\"positionLeft property is deprecated.\");\n    }\n\n    @Input() get positionTop(): number {\n        return 0;\n    };\n\n    set positionTop(_positionTop: number) {\n        console.log(\"positionTop property is deprecated.\");\n    }\n\n    @Input() contentStyle: any;\n\n    @Input() contentStyleClass: string;\n\n    @Input() modal: boolean;\n\n    @Input() closeOnEscape: boolean = true;\n\n    @Input() dismissableMask: boolean;\n\n    @Input() rtl: boolean;\n\n    @Input() closable: boolean = true;\n\n    @Input() get responsive(): boolean {\n        return false;\n    };\n\n    set responsive(_responsive: boolean) {\n        console.log(\"Responsive property is deprecated.\");\n    }\n\n    @Input() appendTo: any;\n\n    @Input() styleClass: string;\n\n    @Input() maskStyleClass: string;\n\n    @Input() showHeader: boolean = true;\n\n    @Input() get breakpoint(): number {\n        return 649;\n    };\n\n    set breakpoint(_breakpoint: number) {\n        console.log(\"Breakpoint property is not utilized and deprecated, use CSS media queries instead.\");\n    }\n\n    @Input() blockScroll: boolean = false;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() minX: number = 0;\n\n    @Input() minY: number = 0;\n\n    @Input() focusOnShow: boolean = true;\n\n    @Input() maximizable: boolean;\n\n    @Input() keepInViewport: boolean = true;\n\n    @Input() focusTrap: boolean = true;\n\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() closeIcon: string = 'pi pi-times';\n\n    @Input() minimizeIcon: string = 'pi pi-window-minimize';\n\n    @Input() maximizeIcon: string = 'pi pi-window-maximize';\n\n    @ContentChild(Header) headerFacet: QueryList<Header>;\n\n    @ContentChild(Footer) footerFacet: QueryList<Footer>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @ViewChild('titlebar') headerViewChild: ElementRef;\n\n    @ViewChild('content') contentViewChild: ElementRef;\n\n    @ViewChild('footer') footerViewChild: ElementRef;\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @Output() visibleChange:EventEmitter<any> = new EventEmitter();\n\n    @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\n\n    @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\n\n    @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\n\n    @Output() onMaximize: EventEmitter<any> = new EventEmitter();\n\n    headerTemplate: TemplateRef<any>;\n\n    contentTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n\n    _visible: boolean;\n\n    maskVisible: boolean;\n\n    container: HTMLDivElement;\n\n    wrapper: HTMLElement;\n\n    dragging: boolean;\n\n    documentDragListener: any;\n\n    documentDragEndListener: any;\n\n    resizing: boolean;\n\n    documentResizeListener: any;\n\n    documentResizeEndListener: any;\n\n    documentEscapeListener: Function;\n\n    maskClickListener: Function;\n\n    lastPageX: number;\n\n    lastPageY: number;\n\n    preventVisibleChangePropagation: boolean;\n\n    maximized: boolean;\n\n    preMaximizeContentHeight: number;\n\n    preMaximizeContainerWidth: number;\n\n    preMaximizeContainerHeight: number;\n\n    preMaximizePageX: number;\n\n    preMaximizePageY: number;\n\n    id: string = `p-dialog-${idx++}`;\n\n    _style: any = {};\n\n    _position: string = \"center\";\n\n    originalStyle: any;\n\n    transformOptions: any = \"scale(0.7)\";\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone, private cd: ChangeDetectorRef) { }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    @Input() get visible(): any {\n        return this._visible;\n    }\n    set visible(value:any) {\n        this._visible = value;\n\n        if (this._visible && !this.maskVisible) {\n            this.maskVisible = true;\n        }\n    }\n\n    @Input() get style(): any {\n        return this._style;\n    }\n    set style(value:any) {\n        if (value) {\n            this._style = {...value};\n            this.originalStyle = value;\n        }\n    }\n\n    @Input() get position(): string {\n        return this._position;\n    };\n\n    set position(value: string) {\n        this._position = value;\n\n        switch (value) {\n            case 'topleft':\n            case 'bottomleft':\n            case 'left':\n                this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\n            break;\n            case 'topright':\n            case 'bottomright':\n            case 'right':\n                this.transformOptions = \"translate3d(100%, 0px, 0px)\";\n            break;\n            case 'bottom':\n                this.transformOptions = \"translate3d(0px, 100%, 0px)\";\n            break;\n            case 'top':\n                this.transformOptions = \"translate3d(0px, -100%, 0px)\";\n            break;\n            default:\n                this.transformOptions = \"scale(0.7)\";\n            break;\n        }\n    }\n\n    focus() {\n        let focusable = DomHandler.findSingle(this.container, '[autofocus]');\n        if (focusable) {\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => focusable.focus(), 5);\n            });\n        }\n    }\n\n    close(event: Event) {\n        this.visibleChange.emit(false);\n        event.preventDefault();\n    }\n\n    enableModality() {\n        if (this.closable && this.dismissableMask) {\n            this.maskClickListener = this.renderer.listen(this.wrapper, 'mousedown', (event: any) => {\n                if (this.wrapper && this.wrapper.isSameNode(event.target)) {\n                    this.close(event);\n                }\n            });\n        }\n\n        if (this.modal) {\n            DomHandler.addClass(document.body, 'p-overflow-hidden');\n        }\n    }\n\n    disableModality() {\n        if (this.wrapper) {\n            if (this.dismissableMask) {\n                this.unbindMaskClickListener();\n            }\n\n            if (this.modal) {\n                DomHandler.removeClass(document.body, 'p-overflow-hidden');\n            }\n\n            if (!(this.cd as ViewRef).destroyed) {\n                this.cd.detectChanges();\n            }\n        }\n    }\n\n    maximize() {\n        this.maximized = !this.maximized;\n\n        if (!this.modal && !this.blockScroll) {\n            if (this.maximized)\n                DomHandler.addClass(document.body, 'p-overflow-hidden');\n            else\n                DomHandler.removeClass(document.body, 'p-overflow-hidden');\n        }\n\n        this.onMaximize.emit({'maximized': this.maximized});\n    }\n\n    unbindMaskClickListener() {\n        if (this.maskClickListener) {\n            this.maskClickListener();\n            this.maskClickListener = null;\n        }\n    }\n\n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\n        }\n    }\n\n    initDrag(event: MouseEvent) {\n        if (DomHandler.hasClass(event.target, 'p-dialog-header-icon') || DomHandler.hasClass((<HTMLElement> event.target).parentElement, 'p-dialog-header-icon')) {\n            return;\n        }\n\n        if (this.draggable) {\n            this.dragging = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n\n            this.container.style.margin = '0';\n            DomHandler.addClass(document.body, 'p-unselectable-text');\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (this.focusTrap) {\n            if (event.which === 9) {\n                event.preventDefault();\n\n                let focusableElements = DomHandler.getFocusableElements(this.container);\n\n                if (focusableElements && focusableElements.length > 0) {\n                    if (!focusableElements[0].ownerDocument.activeElement) {\n                        focusableElements[0].focus();\n                    }\n                    else {\n                        let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n\n                        if (event.shiftKey) {\n                            if (focusedIndex == -1 || focusedIndex === 0)\n                                focusableElements[focusableElements.length - 1].focus();\n                            else\n                                focusableElements[focusedIndex - 1].focus();\n                        }\n                        else {\n                            if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                                focusableElements[0].focus();\n                            else\n                                focusableElements[focusedIndex + 1].focus();\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    onDrag(event: MouseEvent) {\n        if (this.dragging) {\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let offset = DomHandler.getOffset(this.container);\n            let leftPos = offset.left + deltaX;\n            let topPos = offset.top + deltaY;\n            let viewport = DomHandler.getViewport();\n\n            this.container.style.position = 'fixed';\n\n            if (this.keepInViewport) {\n                if (leftPos >= this.minX && (leftPos + containerWidth) < viewport.width) {\n                    this._style.left = leftPos + 'px';\n                    this.lastPageX = event.pageX;\n                    this.container.style.left = leftPos + 'px';\n                }\n\n                if (topPos >= this.minY && (topPos + containerHeight) < viewport.height) {\n                    this._style.top = topPos + 'px';\n                    this.lastPageY = event.pageY;\n                    this.container.style.top = topPos + 'px';\n                }\n            }\n            else {\n                this.lastPageX = event.pageX;\n                this.container.style.left = leftPos + 'px';\n                this.lastPageY = event.pageY;\n                this.container.style.top = topPos + 'px';\n            }\n        }\n    }\n\n    endDrag(event: MouseEvent) {\n        if (this.dragging) {\n            this.dragging = false;\n            DomHandler.removeClass(document.body, 'p-unselectable-text');\n            this.cd.detectChanges();\n            this.onDragEnd.emit(event);\n        }\n    }\n\n    resetPosition() {\n        this.container.style.position = '';\n        this.container.style.left = '';\n        this.container.style.top = '';\n        this.container.style.margin = '';\n    }\n\n    //backward compatibility\n    center() {\n        this.resetPosition();\n    }\n\n    initResize(event: MouseEvent) {\n        if (this.resizable) {\n            this.resizing = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'p-unselectable-text');\n            this.onResizeInit.emit(event);\n        }\n    }\n\n    onResize(event: MouseEvent) {\n        if (this.resizing) {\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let contentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\n            let newWidth = containerWidth + deltaX;\n            let newHeight = containerHeight + deltaY;\n            let minWidth = this.container.style.minWidth;\n            let minHeight = this.container.style.minHeight;\n            let offset = DomHandler.getOffset(this.container);\n            let viewport = DomHandler.getViewport();\n            let hasBeenDragged = !parseInt(this.container.style.top) || !parseInt(this.container.style.left);\n\n            if (hasBeenDragged) {\n                newWidth += deltaX;\n                newHeight += deltaY;\n            }\n\n            if ((!minWidth || newWidth > parseInt(minWidth)) && (offset.left + newWidth) < viewport.width) {\n                this._style.width = newWidth + 'px';\n                this.container.style.width = this._style.width;\n            }\n\n            if ((!minHeight || newHeight > parseInt(minHeight)) && (offset.top + newHeight) < viewport.height) {\n                this.contentViewChild.nativeElement.style.height = contentHeight + newHeight - containerHeight + 'px';\n\n                if (this._style.height) {\n                    this._style.height = newHeight + 'px';\n                    this.container.style.height = this._style.height;\n                }\n            }\n\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n        }\n    }\n\n    resizeEnd(event) {\n        if (this.resizing) {\n            this.resizing = false;\n            DomHandler.removeClass(document.body, 'p-unselectable-text');\n            this.onResizeEnd.emit(event);\n        }\n    }\n\n    bindGlobalListeners() {\n        if (this.draggable) {\n            this.bindDocumentDragListener();\n            this.bindDocumentDragEndListener();\n        }\n\n        if (this.resizable) {\n            this.bindDocumentResizeListeners();\n        }\n\n        if (this.closeOnEscape && this.closable) {\n            this.bindDocumentEscapeListener();\n        }\n    }\n\n    unbindGlobalListeners() {\n        this.unbindDocumentDragListener();\n        this.unbindDocumentDragEndListener();\n        this.unbindDocumentResizeListeners();\n        this.unbindDocumentEscapeListener();\n    }\n\n    bindDocumentDragListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragListener = this.onDrag.bind(this);\n            window.document.addEventListener('mousemove', this.documentDragListener);\n        });\n    }\n\n    unbindDocumentDragListener() {\n        if (this.documentDragListener) {\n            window.document.removeEventListener('mousemove', this.documentDragListener);\n            this.documentDragListener = null;\n        }\n    }\n\n    bindDocumentDragEndListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragEndListener = this.endDrag.bind(this);\n            window.document.addEventListener('mouseup', this.documentDragEndListener);\n        });\n    }\n\n    unbindDocumentDragEndListener() {\n        if (this.documentDragEndListener) {\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\n            this.documentDragEndListener = null;\n        }\n    }\n\n    bindDocumentResizeListeners() {\n        this.zone.runOutsideAngular(() => {\n            this.documentResizeListener = this.onResize.bind(this);\n            this.documentResizeEndListener = this.resizeEnd.bind(this);\n            window.document.addEventListener('mousemove', this.documentResizeListener);\n            window.document.addEventListener('mouseup', this.documentResizeEndListener);\n        });\n    }\n\n    unbindDocumentResizeListeners() {\n        if (this.documentResizeListener && this.documentResizeEndListener) {\n            window.document.removeEventListener('mousemove', this.documentResizeListener);\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\n            this.documentResizeListener = null;\n            this.documentResizeEndListener = null;\n        }\n    }\n\n    bindDocumentEscapeListener() {\n        const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n        this.documentEscapeListener = this.renderer.listen(documentTarget, 'keydown', (event) => {\n            if (event.which == 27) {\n                if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex)) {\n                    this.close(event);\n                }\n            }\n        });\n    }\n\n    unbindDocumentEscapeListener() {\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n            this.documentEscapeListener = null;\n        }\n    }\n\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.wrapper);\n            else\n                DomHandler.appendChild(this.wrapper, this.appendTo);\n        }\n    }\n\n    restoreAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.wrapper);\n        }\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                this.container = event.element;\n                this.wrapper = this.container.parentElement;\n                this.appendContainer();\n                this.moveOnTop();\n                this.bindGlobalListeners();\n\n                if (this.modal) {\n                    this.enableModality();\n                }\n\n                if (!this.modal && this.blockScroll) {\n                    DomHandler.addClass(document.body, 'p-overflow-hidden');\n                }\n\n                if (this.focusOnShow) {\n                    this.focus();\n                }\n            break;\n        }\n    }\n\n    onAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'void':\n                this.onContainerDestroy();\n                this.onHide.emit({});\n            break;\n            case 'visible':\n                this.onShow.emit({});\n            break;\n        }\n    }\n\n    onContainerDestroy() {\n        this.unbindGlobalListeners();\n        this.dragging = false;\n\n        this.maskVisible = false;\n\n        if (this.maximized) {\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\n            this.maximized = false;\n        }\n\n        if (this.modal) {\n            this.disableModality();\n        }\n\n        if (this.blockScroll) {\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\n        }\n\n        this.container = null;\n        this.wrapper = null;\n\n        this._style = this.originalStyle ? {...this.originalStyle} : {};\n    }\n\n    ngOnDestroy() {\n        if (this.container) {\n            this.restoreAppend();\n            this.onContainerDestroy();\n        }\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,FocusTrapModule,RippleModule],\n    exports: [Dialog,SharedModule],\n    declarations: [Dialog]\n})\nexport class DialogModule { }\n"]}